{"version":3,"sources":["webpack:///webpack/bootstrap 77ab829606301c35fc66?1c80****************************","webpack:///external \"./utils\"?e491****","webpack:///external \"@angular/core\"?73d1****************","webpack:///./src/selection.service.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACtCA,qC;;;;;;;ACAA,2C;;;;;;;;;;;;;;;;;ACAA,kCAAyC,CAAe,CAAC;AACzD,mCAA0B,CAAS,CAAC;AAiBpC;;IAEG;AAEH;KAAA;SACW,YAAO,GAAiC,IAAI,mBAAY,EAAkB,CAAC;SAC1E,oBAAe,GAAa,EAAE,CAAC;KAgC3C,CAAC;KA9BU,qCAAU,GAAjB,UAAkB,KAAa;SAC3B,MAAM,CAAC,iBAAS,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAO,IAAI,cAAO,KAAK,KAAK,EAAjB,CAAiB,CAAC,CAAC,CAAC;KAC9E,CAAC;KAEM,iCAAM,GAAb,UAAc,KAAa;SACvB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC1B,IAAI,CAAC,eAAe,GAAG,CAAC,KAAK,CAAC,CAAC;aAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;SACxD,CAAC;KACL,CAAC;KAEM,mCAAQ,GAAf,UAAgB,KAAa;SACzB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACzB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;aAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;SACzD,CAAC;KACL,CAAC;KAEM,iCAAM,GAAb,UAAc,KAAa;SACvB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACrB,MAAM,CAAC;SACX,CAAC;SAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACvB,CAAC;KAED,sBAAW,sCAAQ;cAAnB;aACI,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;SAChC,CAAC;;;QAAA;KAlCL;SAAC,iBAAU,EAAE;;yBAAA;KAmCb,uBAAC;AAAD,EAAC;AAlCY,yBAAgB,mBAkC5B","file":"src/selection.service.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 77ab829606301c35fc66\n **/","module.exports = require(\"./utils\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"./utils\"\n ** module id = 2\n ** module chunks = 0 13 16 19 20 29\n **/","module.exports = require(\"@angular/core\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@angular/core\"\n ** module id = 5\n ** module chunks = 2 4 5 6 11 12 13 14 15 16 17 18 19 20 23 24 28 29 30 33 34 35\n **/","import { Injectable, EventEmitter } from '@angular/core';\nimport { isPresent } from './utils';\n\n/**\n * The returned type of the `selection` event.\n */\nexport interface SelectionEvent {\n    /**\n     * The index of the affected row.\n     */\n    index: number;\n\n    /**\n     * The selected state of the row.\n     */\n    selected: boolean;\n}\n\n/**\n * @hidden\n */\n@Injectable()\nexport class SelectionService {\n    public changes: EventEmitter<SelectionEvent> = new EventEmitter<SelectionEvent>();\n    private selectedIndices: number[] = [];\n\n    public isSelected(index: number): boolean {\n        return isPresent(this.selectedIndices.find(current => current === index));\n    }\n\n    public select(index: number): void {\n        if (!this.isSelected(index)) {\n            this.selectedIndices = [index];\n            this.changes.emit({ index: index, selected: true });\n        }\n    }\n\n    public unselect(index: number): void {\n        if (this.isSelected(index)) {\n            this.selectedIndices = [];\n            this.changes.emit({ index: index, selected: false });\n        }\n    }\n\n    public toggle(index: number): void {\n        if (this.isSelected(index)) {\n            this.unselect(index);\n            return;\n        }\n\n        this.select(index);\n    }\n\n    public get selected(): number[] {\n        return this.selectedIndices;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/selection.service.ts\n **/"],"sourceRoot":""}