module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(242);


/***/ },

/***/ 242:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _quadRoot = __webpack_require__(243);

	var _quadRoot2 = _interopRequireDefault(_quadRoot);

	var _rect = __webpack_require__(244);

	var _rect2 = _interopRequireDefault(_rect);

	var _append = __webpack_require__(245);

	var _append2 = _interopRequireDefault(_append);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var QuadNode = function (_QuadRoot) {
	    _inherits(QuadNode, _QuadRoot);

	    function QuadNode(rect) {
	        _classCallCheck(this, QuadNode);

	        var _this = _possibleConstructorReturn(this, (QuadNode.__proto__ || Object.getPrototypeOf(QuadNode)).call(this));

	        _this.children = [];
	        _this.rect = rect;
	        return _this;
	    }

	    _createClass(QuadNode, [{
	        key: 'inBounds',
	        value: function inBounds(rect) {
	            var nodeRect = this.rect;
	            var nodeBottomRight = nodeRect.bottomRight();
	            var bottomRight = rect.bottomRight();
	            var inBounds = nodeRect.origin.x <= rect.origin.x && nodeRect.origin.y <= rect.origin.y && bottomRight.x <= nodeBottomRight.x && bottomRight.y <= nodeBottomRight.y;
	            return inBounds;
	        }
	    }, {
	        key: 'pointShapes',
	        value: function pointShapes(point) {
	            var children = this.children;
	            var length = children.length;
	            var result = _get(QuadNode.prototype.__proto__ || Object.getPrototypeOf(QuadNode.prototype), 'pointShapes', this).call(this, point);
	            for (var idx = 0; idx < length; idx++) {
	                (0, _append2.default)(result, children[idx].pointShapes(point));
	            }
	            return result;
	        }
	    }, {
	        key: 'insert',
	        value: function insert(shape, bbox) {
	            var children = this.children;
	            var length = children.length;
	            var inserted = false;

	            if (this.inBounds(bbox)) {
	                if (!length && this.shapes.length < 4) {
	                    this._add(shape, bbox);
	                } else {
	                    if (!length) {
	                        this._initChildren();
	                    }

	                    for (var idx = 0; idx < children.length; idx++) {
	                        if (children[idx].insert(shape, bbox)) {
	                            inserted = true;
	                            break;
	                        }
	                    }

	                    if (!inserted) {
	                        this._add(shape, bbox);
	                    }
	                }
	                inserted = true;
	            }

	            return inserted;
	        }
	    }, {
	        key: '_initChildren',
	        value: function _initChildren() {
	            var rect = this.rect;
	            var children = this.children;
	            var shapes = this.shapes;

	            var center = rect.center();
	            var halfWidth = rect.width() / 2;
	            var halfHeight = rect.height() / 2;

	            children.push(new QuadNode(new _rect2.default(rect.origin.x, rect.origin.y, halfWidth, halfHeight)), new QuadNode(new _rect2.default(center.x, rect.origin.y, halfWidth, halfHeight)), new QuadNode(new _rect2.default(rect.origin.x, center.y, halfWidth, halfHeight)), new QuadNode(new _rect2.default(center.x, center.y, halfWidth, halfHeight)));
	            for (var shapeIdx = shapes.length - 1; shapeIdx >= 0; shapeIdx--) {
	                for (var childIdx = 0; childIdx < children.length; childIdx++) {
	                    if (children[childIdx].insert(shapes[shapeIdx].shape, shapes[shapeIdx].bbox)) {
	                        shapes.splice(shapeIdx, 1);
	                        break;
	                    }
	                }
	            }
	        }
	    }]);

	    return QuadNode;
	}(_quadRoot2.default);

	exports.default = QuadNode;

/***/ },

/***/ 243:
/***/ function(module, exports) {

	module.exports = require("./quad-root");

/***/ },

/***/ 244:
/***/ function(module, exports) {

	module.exports = require("../geometry/rect");

/***/ },

/***/ 245:
/***/ function(module, exports) {

	module.exports = require("../common/append");

/***/ }

/******/ });