module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(520);


/***/ },

/***/ 23:
/***/ function(module, exports) {

	module.exports = require("@progress/kendo-drawing");

/***/ },

/***/ 60:
/***/ function(module, exports) {

	module.exports = require("../common/constants");

/***/ },

/***/ 111:
/***/ function(module, exports) {

	module.exports = require("../common/set-default-options");

/***/ },

/***/ 112:
/***/ function(module, exports) {

	module.exports = require("../common/deep-extend");

/***/ },

/***/ 461:
/***/ function(module, exports) {

	module.exports = require("./box");

/***/ },

/***/ 467:
/***/ function(module, exports) {

	module.exports = require("../common/get-spacing");

/***/ },

/***/ 468:
/***/ function(module, exports) {

	module.exports = require("../common/in-array");

/***/ },

/***/ 469:
/***/ function(module, exports) {

	module.exports = require("../common/rad");

/***/ },

/***/ 474:
/***/ function(module, exports) {

	module.exports = require("../common/round");

/***/ },

/***/ 475:
/***/ function(module, exports) {

	module.exports = require("../common/limit-value");

/***/ },

/***/ 480:
/***/ function(module, exports) {

	module.exports = require("./category-axis");

/***/ },

/***/ 516:
/***/ function(module, exports) {

	module.exports = require("./mixins/grid-lines-mixin");

/***/ },

/***/ 518:
/***/ function(module, exports) {

	module.exports = require("./ring");

/***/ },

/***/ 520:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _kendoDrawing = __webpack_require__(23);

	var _gridLinesMixin = __webpack_require__(516);

	var _gridLinesMixin2 = _interopRequireDefault(_gridLinesMixin);

	var _categoryAxis = __webpack_require__(480);

	var _categoryAxis2 = _interopRequireDefault(_categoryAxis);

	var _shapeBuilder = __webpack_require__(521);

	var _shapeBuilder2 = _interopRequireDefault(_shapeBuilder);

	var _ring = __webpack_require__(518);

	var _ring2 = _interopRequireDefault(_ring);

	var _box = __webpack_require__(461);

	var _box2 = _interopRequireDefault(_box);

	var _constants = __webpack_require__(60);

	var _setDefaultOptions = __webpack_require__(111);

	var _setDefaultOptions2 = _interopRequireDefault(_setDefaultOptions);

	var _getSpacing = __webpack_require__(467);

	var _getSpacing2 = _interopRequireDefault(_getSpacing);

	var _deepExtend = __webpack_require__(112);

	var _deepExtend2 = _interopRequireDefault(_deepExtend);

	var _limitValue = __webpack_require__(475);

	var _limitValue2 = _interopRequireDefault(_limitValue);

	var _inArray = __webpack_require__(468);

	var _inArray2 = _interopRequireDefault(_inArray);

	var _round = __webpack_require__(474);

	var _round2 = _interopRequireDefault(_round);

	var _rad = __webpack_require__(469);

	var _rad2 = _interopRequireDefault(_rad);

	var _map = __webpack_require__(522);

	var _map2 = _interopRequireDefault(_map);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var RadarCategoryAxis = function (_CategoryAxis) {
	    _inherits(RadarCategoryAxis, _CategoryAxis);

	    function RadarCategoryAxis() {
	        _classCallCheck(this, RadarCategoryAxis);

	        return _possibleConstructorReturn(this, (RadarCategoryAxis.__proto__ || Object.getPrototypeOf(RadarCategoryAxis)).apply(this, arguments));
	    }

	    _createClass(RadarCategoryAxis, [{
	        key: 'range',
	        value: function range() {
	            return { min: 0, max: this.options.categories.length };
	        }
	    }, {
	        key: 'reflow',
	        value: function reflow(box) {
	            this.box = box;
	            this.reflowLabels();
	        }
	    }, {
	        key: 'lineBox',
	        value: function lineBox() {
	            return this.box;
	        }
	    }, {
	        key: 'reflowLabels',
	        value: function reflowLabels() {
	            var labels = this.labels;
	            var _options$labels = this.options.labels;
	            var _options$labels$skip = _options$labels.skip;
	            var skip = _options$labels$skip === undefined ? 0 : _options$labels$skip;
	            var _options$labels$step = _options$labels.step;
	            var step = _options$labels$step === undefined ? 1 : _options$labels$step;

	            var measureBox = new _box2.default();

	            for (var i = 0; i < labels.length; i++) {
	                labels[i].reflow(measureBox);
	                var labelBox = labels[i].box;

	                labels[i].reflow(this.getSlot(skip + i * step).adjacentBox(0, labelBox.width(), labelBox.height()));
	            }
	        }
	    }, {
	        key: 'intervals',
	        value: function intervals(size) {
	            var skip = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
	            var step = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];
	            var skipAngles = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];

	            var options = this.options;
	            var categories = options.categories.length;
	            var divCount = categories / size || 1;
	            var divAngle = 360 / divCount;
	            var divs = [];
	            var angle = 0;

	            for (var i = skip; i < divCount; i += step) {
	                if (options.reverse) {
	                    angle = 360 - i * divAngle;
	                } else {
	                    angle = i * divAngle;
	                }

	                angle = (0, _round2.default)(angle, _constants.COORD_PRECISION) % 360;

	                if (!(skipAngles && (0, _inArray2.default)(angle, skipAngles))) {
	                    divs.push(angle);
	                }
	            }

	            return divs;
	        }
	    }, {
	        key: 'majorIntervals',
	        value: function majorIntervals() {
	            return this.intervals(1);
	        }
	    }, {
	        key: 'minorIntervals',
	        value: function minorIntervals() {
	            return this.intervals(0.5);
	        }
	    }, {
	        key: 'intervalAngle',
	        value: function intervalAngle(interval) {
	            return (360 + interval + this.options.startAngle) % 360;
	        }
	    }, {
	        key: 'majorAngles',
	        value: function majorAngles() {
	            var _this2 = this;

	            return (0, _map2.default)(this.majorIntervals(), function (interval) {
	                return _this2.intervalAngle(interval);
	            });
	        }
	    }, {
	        key: 'createLine',
	        value: function createLine() {
	            return [];
	        }
	    }, {
	        key: 'majorGridLineAngles',
	        value: function majorGridLineAngles(altAxis) {
	            var majorGridLines = this.options.majorGridLines;
	            return this.gridLineAngles(altAxis, 1, majorGridLines.skip, majorGridLines.step);
	        }
	    }, {
	        key: 'minorGridLineAngles',
	        value: function minorGridLineAngles(altAxis, skipMajor) {
	            var _options = this.options;
	            var minorGridLines = _options.minorGridLines;
	            var majorGridLines = _options.majorGridLines;

	            var majorGridLineAngles = skipMajor ? this.intervals(1, majorGridLines.skip, majorGridLines.step) : null;

	            return this.gridLineAngles(altAxis, 0.5, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);
	        }
	    }, {
	        key: 'radiusCallback',
	        value: function radiusCallback(radius, altAxis, skipMajor) {
	            var _this3 = this;

	            if (altAxis.options.type !== _constants.ARC) {
	                var _ret = function () {
	                    var minorAngle = (0, _rad2.default)(360 / (_this3.options.categories.length * 2));
	                    var minorRadius = Math.cos(minorAngle) * radius;
	                    var majorAngles = _this3.majorAngles();

	                    var radiusCallback = function radiusCallback(angle) {
	                        if (!skipMajor && (0, _inArray2.default)(angle, majorAngles)) {
	                            return radius;
	                        }

	                        return minorRadius;
	                    };
	                    return {
	                        v: radiusCallback
	                    };
	                }();

	                if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	            }
	        }
	    }, {
	        key: 'createPlotBands',
	        value: function createPlotBands() {
	            var plotBands = this.options.plotBands || [];

	            var group = this._plotbandGroup = new _kendoDrawing.drawing.Group({
	                zIndex: -1
	            });

	            for (var i = 0; i < plotBands.length; i++) {
	                var band = plotBands[i];
	                var slot = this.plotBandSlot(band);
	                var singleSlot = this.getSlot(band.from);

	                var head = band.from - Math.floor(band.from);
	                slot.startAngle += head * singleSlot.angle;

	                var tail = Math.ceil(band.to) - band.to;
	                slot.angle -= (tail + head) * singleSlot.angle;

	                var ring = _shapeBuilder2.default.current.createRing(slot, {
	                    fill: {
	                        color: band.color,
	                        opacity: band.opacity
	                    },
	                    stroke: {
	                        opacity: band.opacity
	                    }
	                });
	                group.append(ring);
	            }

	            this.appendVisual(group);
	        }
	    }, {
	        key: 'plotBandSlot',
	        value: function plotBandSlot(band) {
	            return this.getSlot(band.from, band.to - 1);
	        }
	    }, {
	        key: 'getSlot',
	        value: function getSlot(from, to) {
	            var options = this.options;
	            var justified = options.justified;
	            var box = this.box;
	            var divs = this.majorAngles();
	            var totalDivs = divs.length;
	            var slotAngle = 360 / totalDivs;
	            var fromValue = from;

	            if (options.reverse && !justified) {
	                fromValue = (fromValue + 1) % totalDivs;
	            }

	            fromValue = (0, _limitValue2.default)(Math.floor(fromValue), 0, totalDivs - 1);
	            var slotStart = divs[fromValue];

	            if (justified) {
	                slotStart = slotStart - slotAngle / 2;

	                if (slotStart < 0) {
	                    slotStart += 360;
	                }
	            }

	            var toValue = (0, _limitValue2.default)(Math.ceil(to || fromValue), fromValue, totalDivs - 1);
	            var slots = toValue - fromValue + 1;
	            var angle = slotAngle * slots;

	            return new _ring2.default(box.center(), 0, box.height() / 2, slotStart, angle);
	        }
	    }, {
	        key: 'slot',
	        value: function slot(from, to) {
	            var slot = this.getSlot(from, to);
	            var startAngle = slot.startAngle + 180;
	            var endAngle = startAngle + slot.angle;

	            return new _kendoDrawing.geometry.Arc([slot.center.x, slot.center.y], {
	                startAngle: startAngle,
	                endAngle: endAngle,
	                radiusX: slot.radius,
	                radiusY: slot.radius
	            });
	        }
	    }, {
	        key: 'pointCategoryIndex',
	        value: function pointCategoryIndex(point) {
	            var length = this.options.categories.length;
	            var index = null;

	            for (var i = 0; i < length; i++) {
	                var slot = this.getSlot(i);
	                if (slot.containsPoint(point)) {
	                    index = i;
	                    break;
	                }
	            }

	            return index;
	        }
	    }]);

	    return RadarCategoryAxis;
	}(_categoryAxis2.default);

	(0, _setDefaultOptions2.default)(RadarCategoryAxis.prototype, {
	    startAngle: 90,
	    labels: {
	        margin: (0, _getSpacing2.default)(10)
	    },
	    majorGridLines: {
	        visible: true
	    },
	    justified: true
	});
	(0, _deepExtend2.default)(RadarCategoryAxis.prototype, _gridLinesMixin2.default);

	exports.default = RadarCategoryAxis;

/***/ },

/***/ 521:
/***/ function(module, exports) {

	module.exports = require("./shape-builder");

/***/ },

/***/ 522:
/***/ function(module, exports) {

	module.exports = require("../common/map");

/***/ }

/******/ });