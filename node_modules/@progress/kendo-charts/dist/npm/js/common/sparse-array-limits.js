module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(421);


/***/ },

/***/ 107:
/***/ function(module, exports) {

	module.exports = require("./constants");

/***/ },

/***/ 421:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = sparseArrayLimits;

	var _constants = __webpack_require__(107);

	function sparseArrayLimits(arr) {
	    var min = _constants.MAX_VALUE;
	    var max = _constants.MIN_VALUE;

	    for (var idx = 0, length = arr.length; idx < length; idx++) {
	        var value = arr[idx];
	        if (value !== null && isFinite(value)) {
	            min = Math.min(min, value);
	            max = Math.max(max, value);
	        }
	    }

	    return {
	        min: min === _constants.MAX_VALUE ? undefined : min,
	        max: max === _constants.MIN_VALUE ? undefined : max
	    };
	}

/***/ }

/******/ });