module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(122);


/***/ },

/***/ 6:
/***/ function(module, exports) {

	module.exports = require("../geometry/point");

/***/ },

/***/ 65:
/***/ function(module, exports) {

	module.exports = require("../shapes/group");

/***/ },

/***/ 89:
/***/ function(module, exports) {

	module.exports = require("../common/element-size");

/***/ },

/***/ 122:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _group = __webpack_require__(65);

	var _group2 = _interopRequireDefault(_group);

	var _point = __webpack_require__(6);

	var _point2 = _interopRequireDefault(_point);

	var _surfaceFactory = __webpack_require__(123);

	var _surfaceFactory2 = _interopRequireDefault(_surfaceFactory);

	var _observable = __webpack_require__(124);

	var _observable2 = _interopRequireDefault(_observable);

	var _elementStyles2 = __webpack_require__(125);

	var _elementStyles3 = _interopRequireDefault(_elementStyles2);

	var _elementSize = __webpack_require__(89);

	var _elementSize2 = _interopRequireDefault(_elementSize);

	var _elementOffset3 = __webpack_require__(126);

	var _elementOffset4 = _interopRequireDefault(_elementOffset3);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var events = ["click", "mouseenter", "mouseleave", "mousemove", "resize", "tooltipOpen", "tooltipClose"];

	var Surface = function (_Observable) {
	    _inherits(Surface, _Observable);

	    function Surface(element, options) {
	        _classCallCheck(this, Surface);

	        var _this = _possibleConstructorReturn(this, (Surface.__proto__ || Object.getPrototypeOf(Surface)).call(this));

	        _this.options = Object.assign({}, options);
	        _this.element = element;

	        _this._click = _this._handler("click");
	        _this._mouseenter = _this._handler("mouseenter");
	        _this._mouseleave = _this._handler("mouseleave");
	        _this._mousemove = _this._handler("mousemove");

	        _this._visual = new _group2.default();

	        (0, _elementSize2.default)(element, _this.options);

	        _this.bind(events, options);

	        _this._enableTracking();
	        return _this;
	    }

	    _createClass(Surface, [{
	        key: 'draw',
	        value: function draw(element) {
	            this._visual.children.push(element);
	        }
	    }, {
	        key: 'clear',
	        value: function clear() {
	            this._visual.children = [];
	        }
	    }, {
	        key: 'destroy',
	        value: function destroy() {
	            this._visual = null;
	            this.unbind();
	        }
	    }, {
	        key: 'eventTarget',
	        value: function eventTarget(e) {
	            var domNode = e.target;
	            var node = void 0;

	            while (!node && domNode) {
	                node = domNode._kendoNode;
	                if (domNode === this.element) {
	                    break;
	                }

	                domNode = domNode.parentElement;
	            }

	            if (node) {
	                return node.srcElement;
	            }
	        }
	    }, {
	        key: 'exportVisual',
	        value: function exportVisual() {
	            return this._visual;
	        }
	    }, {
	        key: 'getSize',
	        value: function getSize() {
	            return (0, _elementSize2.default)(this.element);
	        }
	    }, {
	        key: 'setSize',
	        value: function setSize(size) {
	            (0, _elementSize2.default)(this.element, size);

	            this._size = size;
	            this._resize();
	        }
	    }, {
	        key: 'resize',
	        value: function resize(force) {
	            var size = this.getSize();
	            var currentSize = this._size;

	            if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {
	                this._size = size;
	                this._resize(size, force);
	                this.trigger("resize", size);
	            }
	        }
	    }, {
	        key: 'size',
	        value: function size(_size) {
	            if (!_size) {
	                return this.getSize();
	            }

	            this.setSize(_size);
	        }
	    }, {
	        key: 'suspendTracking',
	        value: function suspendTracking() {
	            this._suspendedTracking = true;
	        }
	    }, {
	        key: 'resumeTracking',
	        value: function resumeTracking() {
	            this._suspendedTracking = false;
	        }
	    }, {
	        key: '_enableTracking',
	        value: function _enableTracking() {}
	    }, {
	        key: '_resize',
	        value: function _resize() {}
	    }, {
	        key: '_handler',
	        value: function _handler(event) {
	            var _this2 = this;

	            return function (e) {
	                var node = _this2.eventTarget(e);
	                if (node && !_this2._suspendedTracking) {
	                    _this2.trigger(event, {
	                        element: node,
	                        originalEvent: e,
	                        type: event
	                    });
	                }
	            };
	        }
	    }, {
	        key: '_elementOffset',
	        value: function _elementOffset() {
	            var element = this.element;

	            var _elementStyles = (0, _elementStyles3.default)(element, ["paddingLeft", "paddingTop"]);

	            var paddingLeft = _elementStyles.paddingLeft;
	            var paddingTop = _elementStyles.paddingTop;

	            var _elementOffset2 = (0, _elementOffset4.default)(element);

	            var left = _elementOffset2.left;
	            var top = _elementOffset2.top;


	            return {
	                left: left + parseInt(paddingLeft, 10),
	                top: top + parseInt(paddingTop, 10)
	            };
	        }
	    }, {
	        key: '_surfacePoint',
	        value: function _surfacePoint(event) {
	            var offset = this._elementOffset();
	            var coord = eventCoordinates(event);
	            var x = coord.x - offset.left;
	            var y = coord.y - offset.top;

	            return new _point2.default(x, y);
	        }
	    }]);

	    return Surface;
	}(_observable2.default);

	Surface.create = function (element, options) {
	    return _surfaceFactory2.default.current.create(element, options);
	};

	function eventCoordinates(event) {
	    return {
	        x: event.pageX || event.clientX || 0,
	        y: event.pageY || event.clientY || 0
	    };
	}

	exports.default = Surface;

/***/ },

/***/ 123:
/***/ function(module, exports) {

	module.exports = require("./surface-factory");

/***/ },

/***/ 124:
/***/ function(module, exports) {

	module.exports = require("./observable");

/***/ },

/***/ 125:
/***/ function(module, exports) {

	module.exports = require("../common/element-styles");

/***/ },

/***/ 126:
/***/ function(module, exports) {

	module.exports = require("../common/element-offset");

/***/ }

/******/ });