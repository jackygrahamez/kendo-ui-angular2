module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(51);


/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = require("../../common/constants");

/***/ },

/***/ 13:
/***/ function(module, exports) {

	module.exports = require("../../common/is-function");

/***/ },

/***/ 23:
/***/ function(module, exports) {

	module.exports = require("@progress/kendo-drawing");

/***/ },

/***/ 50:
/***/ function(module, exports) {

	module.exports = require("../../common/deep-extend");

/***/ },

/***/ 51:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _kendoDrawing = __webpack_require__(23);

	var _constants = __webpack_require__(5);

	var _isFunction = __webpack_require__(13);

	var _isFunction2 = _interopRequireDefault(_isFunction);

	var _deepExtend = __webpack_require__(50);

	var _deepExtend2 = _interopRequireDefault(_deepExtend);

	var _limitValue = __webpack_require__(52);

	var _limitValue2 = _interopRequireDefault(_limitValue);

	var _last = __webpack_require__(53);

	var _last2 = _interopRequireDefault(_last);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var AreaSegmentMixin = {
	    points: function points() {
	        var chart = this.parent;
	        var plotArea = chart.plotArea;
	        var invertAxes = chart.options.invertAxes;
	        var valueAxis = chart.seriesValueAxis(this.series);
	        var valueAxisLineBox = valueAxis.lineBox();
	        var categoryAxis = plotArea.seriesCategoryAxis(this.series);
	        var categoryAxisLineBox = categoryAxis.lineBox();
	        var stackPoints = this.stackPoints;
	        var points = this._linePoints(stackPoints);
	        var pos = invertAxes ? _constants.X : _constants.Y;
	        var end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1;

	        end = (0, _limitValue2.default)(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);
	        if (!this.stackPoints && points.length > 1) {
	            var firstPoint = points[0];
	            var lastPoint = (0, _last2.default)(points);

	            if (invertAxes) {
	                points.unshift(new _kendoDrawing.geometry.Point(end, firstPoint.y));
	                points.push(new _kendoDrawing.geometry.Point(end, lastPoint.y));
	            } else {
	                points.unshift(new _kendoDrawing.geometry.Point(firstPoint.x, end));
	                points.push(new _kendoDrawing.geometry.Point(lastPoint.x, end));
	            }
	        }

	        return points;
	    },
	    createVisual: function createVisual() {
	        var series = this.series;
	        var defaults = series._defaults;
	        var color = series.color;

	        if ((0, _isFunction2.default)(color) && defaults) {
	            color = defaults.color;
	        }

	        this.visual = new _kendoDrawing.drawing.Group({
	            zIndex: series.zIndex
	        });

	        this.createArea(color);
	        this.createLine(color);
	    },
	    createLine: function createLine(color) {
	        var series = this.series;
	        var lineOptions = (0, _deepExtend2.default)({
	            color: color,
	            opacity: series.opacity
	        }, series.line);

	        if (lineOptions.visible !== false && lineOptions.width > 0) {
	            var line = _kendoDrawing.drawing.Path.fromPoints(this._linePoints(), {
	                stroke: {
	                    color: lineOptions.color,
	                    width: lineOptions.width,
	                    opacity: lineOptions.opacity,
	                    dashType: lineOptions.dashType,
	                    lineCap: "butt"
	                }
	            });

	            this.visual.append(line);
	        }
	    },
	    createArea: function createArea(color) {
	        var series = this.series;

	        var area = _kendoDrawing.drawing.Path.fromPoints(this.points(), {
	            fill: {
	                color: color,
	                opacity: series.opacity
	            },
	            stroke: null
	        });

	        this.visual.append(area);
	    }
	};

	exports.default = AreaSegmentMixin;

/***/ },

/***/ 52:
/***/ function(module, exports) {

	module.exports = require("../../common/limit-value");

/***/ },

/***/ 53:
/***/ function(module, exports) {

	module.exports = require("../../common/last");

/***/ }

/******/ });