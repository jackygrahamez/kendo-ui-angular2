{"version":3,"sources":["webpack:///webpack/bootstrap ad3edd743ed361bd0e56?6e3f****************","webpack:///external \"@angular/core\"?73d1***","webpack:///./src/chart/axis-defaults.component.generated.ts","webpack:///external \"../common/settings.component\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACtCA,2C;;;;;;;;;;;;;;;;;;;;;;ACAA,kCAAsB,EAAe,CAAC;AAEtC,gDAAkC,GAA8B,CAAC;AAGjE;;IAEG;AACH;KAA6D,kDAAiB;KA8F5E,wCAAmB,oBAA0C;SAC3D,kBAAM,cAAc,EAAE,oBAAoB,CAAC,CAAC;SAD3B,yBAAoB,GAApB,oBAAoB,CAAsB;KAE7D,CAAC;KA5FD;SAAC,YAAK,EAAE;;uEAAA;KAKR;SAAC,YAAK,EAAE;;kEAAA;KAKR;SAAC,YAAK,EAAE;;iEAAA;KAMR;SAAC,YAAK,EAAE;;2EAAA;KAKR;SAAC,YAAK,EAAE;;uEAAA;KAMR;SAAC,YAAK,EAAE;;2EAAA;KAKR;SAAC,YAAK,EAAE;;uEAAA;KAMR;SAAC,YAAK,EAAE;;wEAAA;KAMR;SAAC,YAAK,EAAE;;iEAAA;KAKR;SAAC,YAAK,EAAE;;sEAAA;KAMR;SAAC,YAAK,EAAE;;oEAAA;KAOR;SAAC,YAAK,EAAE;;uEAAA;KAKR;SAAC,YAAK,EAAE;;oEAAA;KASR;SAAC,YAAK,EAAE;;sEAAA;KAKR;SAAC,YAAK,EAAE;;mEAAA;KAOR;SAAC,YAAK,EAAE;;kEAAA;KAKV,qCAAC;AAAD,EAAC,CAjG4D,sCAAiB,GAiG7E;AAjGqB,uCAA8B,iCAiGnD;;;;;;;;ACzGD,0D","file":"src/chart/axis-defaults.component.generated.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ad3edd743ed361bd0e56\n **/","module.exports = require(\"@angular/core\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@angular/core\"\n ** module id = 13\n ** module chunksn **/","import { Input } from '@angular/core';\r\nimport { ConfigurationService } from '../common/configuration.service';\r\nimport { SettingsComponent } from '../common/settings.component';\r\nimport { AxisLine, AxisTicks, GridLines, PlotBand } from '../common/property-types';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport abstract class AxisDefaultsComponentGenerated extends SettingsComponent {\r\n  /**\r\n   * The background color of the axis.\r\n   */\r\n  @Input() public background: string;\r\n\r\n  /**\r\n   * The color to apply to all axis elements. Accepts a valid CSS color string, including hex and rgb.\r\n   */\r\n  @Input() public color: string;\r\n\r\n  /**\r\n   * The configuration of the axis lines. Also affects the major and minor ticks, but not the grid lines.\r\n   */\r\n  @Input() public line: AxisLine;\r\n\r\n  /**\r\n   * The configuration of the major grid lines. These are the lines that are an extension of the major\r\n   * ticks through the body of the Chart.\r\n   */\r\n  @Input() public majorGridLines: GridLines;\r\n\r\n  /**\r\n   * The configuration of the axis major ticks.\r\n   */\r\n  @Input() public majorTicks: AxisTicks;\r\n\r\n  /**\r\n   * The configuration of the minor grid lines. These are the lines that are an extension of the minor\r\n   * ticks through the body of the Chart.\r\n   */\r\n  @Input() public minorGridLines: GridLines;\r\n\r\n  /**\r\n   * The configuration of the axis minor ticks.\r\n   */\r\n  @Input() public minorTicks: AxisTicks;\r\n\r\n  /**\r\n   * If set to `true`, the Chart prevents the axis range from snapping to 0.\r\n   * Setting it to `false`, forces the axis range to snap to 0.\r\n   */\r\n  @Input() public narrowRange: boolean;\r\n\r\n  /**\r\n   * The name of the pane that the axis has to be rendered in.\r\n   * If not set, the axis will be rendered in the first (default) pane.\r\n   */\r\n  @Input() public pane: string;\r\n\r\n  /**\r\n   * The plot bands of the axis.\r\n   */\r\n  @Input() public plotBands: PlotBand[];\r\n\r\n  /**\r\n   * If set to `true`, the axis direction is reversed. By default, categories are listed from left to\r\n   * right and from bottom to top.\r\n   */\r\n  @Input() public reverse: boolean;\r\n\r\n  /**\r\n   * The angle (degrees) of the first category on the axis.\r\n   *\r\n   * Angles increase clockwise and zero is to the left. Negative values are acceptable.\r\n   */\r\n  @Input() public startAngle: number;\r\n\r\n  /**\r\n   * If set to `true`, the Chart displays the axis. By default, the axis is visible.\r\n   */\r\n  @Input() public visible: boolean;\r\n\r\n  // These options are also available as child components\r\n\r\n  /**\r\n   * The crosshair configuration options.\r\n   *\r\n   * The crosshair is displayed when the `axisDefaults.crosshair.visible` option is set to `true`.\r\n   */\r\n  @Input() public crosshair: any;\r\n\r\n  /**\r\n   * The axis labels configuration.\r\n   */\r\n  @Input() public labels: any;\r\n\r\n  /**\r\n   * The title configuration of the axis.\r\n   *\r\n   * To display the title, set the `axisDefaults.title.text` option.\r\n   */\r\n  @Input() public title: any;\r\n\r\n  constructor(public configurationService: ConfigurationService) {\r\n    super('axisDefaults', configurationService);\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/chart/axis-defaults.component.generated.ts\n **/","module.exports = require(\"../common/settings.component\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"../common/settings.component\"\n ** module id = 122\n ** module chunks = 16 46 49 61 63 107 109 172\n **/"],"sourceRoot":""}