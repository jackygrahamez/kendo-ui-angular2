module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(138);


/***/ },

/***/ 23:
/***/ function(module, exports) {

	module.exports = require("@progress/kendo-drawing");

/***/ },

/***/ 110:
/***/ function(module, exports) {

	module.exports = require("../core");

/***/ },

/***/ 138:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _kendoDrawing = __webpack_require__(23);

	var _core = __webpack_require__(110);

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ChartContainer = function (_ChartElement) {
	    _inherits(ChartContainer, _ChartElement);

	    function ChartContainer(options, pane) {
	        _classCallCheck(this, ChartContainer);

	        var _this = _possibleConstructorReturn(this, (ChartContainer.__proto__ || Object.getPrototypeOf(ChartContainer)).call(this, options));

	        _this.pane = pane;
	        return _this;
	    }

	    _createClass(ChartContainer, [{
	        key: 'shouldClip',
	        value: function shouldClip() {
	            var children = this.children;
	            var length = children.length;

	            for (var i = 0; i < length; i++) {
	                if (children[i].options.clip === true) {
	                    return true;
	                }
	            }
	            return false;
	        }
	    }, {
	        key: '_clipBox',
	        value: function _clipBox() {
	            return this.pane.chartsBox();
	        }
	    }, {
	        key: 'createVisual',
	        value: function createVisual() {
	            this.visual = new _kendoDrawing.drawing.Group({
	                zIndex: 0
	            });

	            if (this.shouldClip()) {
	                var clipBox = this.clipBox = this._clipBox();
	                var clipRect = clipBox.toRect();
	                var clipPath = _kendoDrawing.drawing.Path.fromRect(clipRect);

	                this.visual.clip(clipPath);
	                this.unclipLabels();
	            }
	        }
	    }, {
	        key: 'stackRoot',
	        value: function stackRoot() {
	            return this;
	        }
	    }, {
	        key: 'unclipLabels',
	        value: function unclipLabels() {
	            var charts = this.children;
	            var clipBox = this.clipBox;


	            for (var i = 0; i < charts.length; i++) {
	                var points = charts[i].points || {};
	                var length = points.length;

	                for (var j = 0; j < length; j++) {
	                    var point = points[j];
	                    if (point && point.overlapsBox && point.overlapsBox(clipBox)) {
	                        var label = point.label;
	                        var note = point.note;

	                        if (label && label.options.visible) {
	                            if (label.alignToClipBox) {
	                                label.alignToClipBox(clipBox);
	                            }
	                            label.options.noclip = true;
	                        }

	                        if (note && note.options.visible) {
	                            note.options.noclip = true;
	                        }
	                    }
	                }
	            }
	        }
	    }, {
	        key: 'destroy',
	        value: function destroy() {
	            _get(ChartContainer.prototype.__proto__ || Object.getPrototypeOf(ChartContainer.prototype), 'destroy', this).call(this);

	            delete this.parent;
	        }
	    }]);

	    return ChartContainer;
	}(_core.ChartElement);

	exports.default = ChartContainer;

/***/ }

/******/ });