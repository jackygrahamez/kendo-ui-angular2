(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(283);


/***/ },

/***/ 13:
/***/ function(module, exports) {

	module.exports = require("@angular/core");

/***/ },

/***/ 278:
/***/ function(module, exports) {

	module.exports = require("./base-tooltip");

/***/ },

/***/ 283:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(13);
	var series_tooltip_template_directive_1 = __webpack_require__(284);
	var shared_tooltip_template_directive_1 = __webpack_require__(285);
	var tooltip_template_point_1 = __webpack_require__(286);
	var base_tooltip_1 = __webpack_require__(278);
	var has_parent_1 = __webpack_require__(287);
	var tooltip_template_service_1 = __webpack_require__(288);
	var SHARED_TOOLTIP_CLASS = 'k-chart-shared-tooltip';
	/**
	 * @hidden
	 */
	var TooltipPopupComponent = (function (_super) {
	    __extends(TooltipPopupComponent, _super);
	    function TooltipPopupComponent(element, templateService) {
	        _super.call(this);
	        this.element = element;
	        this.templateService = templateService;
	        this.seriesTooltipContext = {};
	        this.seriesSharedTooltipContext = {};
	    }
	    TooltipPopupComponent.prototype.show = function (e) {
	        _super.prototype.show.call(this, e);
	        this.shared = e.shared;
	        this.popupClasses[SHARED_TOOLTIP_CLASS] = e.shared;
	        if (!e.shared) {
	            this.seriesTooltipContext = new tooltip_template_point_1.TooltipTemplatePoint(e.point, e.format);
	            this.seriesTooltipTemplateRef = this.pointTemplateRef(e.point);
	        }
	        else {
	            this.seriesSharedTooltipTemplateRef = this.templateService.getSharedTemplate()
	                || this.defaultSharedTooltipTemplate.templateRef;
	            this.seriesSharedTooltipContext = {
	                category: e.category,
	                categoryText: e.categoryText,
	                points: this.wrapPoints(e.points, e.format)
	            };
	        }
	    };
	    TooltipPopupComponent.prototype.containsElement = function (element) {
	        var tooltipElement = this.element.nativeElement;
	        return has_parent_1.hasParent(element, tooltipElement);
	    };
	    TooltipPopupComponent.prototype.pointTemplateRef = function (point) {
	        return this.templateService.getTemplate(point.series.index) || this.defaultSeriesTooltipTemplate.templateRef;
	    };
	    TooltipPopupComponent.prototype.wrapPoints = function (points, format) {
	        var result = [];
	        for (var idx = 0; idx < points.length; idx++) {
	            var point = points[idx];
	            var template = this.pointTemplateRef(point);
	            result.push(new tooltip_template_point_1.TooltipTemplatePoint(point, format, template));
	        }
	        return result;
	    };
	    __decorate([
	        core_1.ViewChild(series_tooltip_template_directive_1.SeriesTooltipTemplateDirective), 
	        __metadata('design:type', series_tooltip_template_directive_1.SeriesTooltipTemplateDirective)
	    ], TooltipPopupComponent.prototype, "defaultSeriesTooltipTemplate", void 0);
	    __decorate([
	        core_1.ViewChild(shared_tooltip_template_directive_1.SharedTooltipTemplateDirective), 
	        __metadata('design:type', shared_tooltip_template_directive_1.SharedTooltipTemplateDirective)
	    ], TooltipPopupComponent.prototype, "defaultSharedTooltipTemplate", void 0);
	    TooltipPopupComponent = __decorate([
	        core_1.Component({
	            selector: 'kendo-chart-tooltip-popup',
	            template: "\n    <kendo-popup [offset]=\"offset\" [popupAlign]=\"align\" [collision]=\"collision\" *ngIf=\"active\" >\n        <div [ngClass]=\"popupClasses\" [ngStyle]=\"style\">\n          <template [ngTemplateOutlet]=\"seriesTooltipTemplateRef\" *ngIf=\"!shared\"\n                    [ngOutletContext]=\"seriesTooltipContext\">\n          </template>\n          <template [ngTemplateOutlet]=\"seriesSharedTooltipTemplateRef\" *ngIf=\"shared\"\n                    [ngOutletContext]=\"seriesSharedTooltipContext\">\n          </template>\n        </div>\n    </kendo-popup>\n    <template kendoSeriesTooltipTemplate let-formattedValue=\"formattedValue\">\n        <span [innerHTML]=\"formattedValue\"></span>\n    </template>\n    <template kendoSharedTooltipTemplate let-points=\"points\" let-categoryText=\"categoryText\">\n        <table>\n            <tr><th colspan='3'> {{ categoryText }} </th></tr>\n            <tr *ngFor=\"let point of points\">\n                <td><span class='k-chart-shared-tooltip-marker' [style.background-color]='point.series.color'></span></td>\n                <td *ngIf=\"point.series.name\"> {{ point.series.name }}</td>\n                <td>\n                  <template [ngTemplateOutlet]=\"point.template\"\n                            [ngOutletContext]=\"point\">\n                  </template>\n                </td>\n            </tr>\n        </table>\n    </template>\n    "
	        }), 
	        __metadata('design:paramtypes', [core_1.ElementRef, tooltip_template_service_1.TooltipTemplateService])
	    ], TooltipPopupComponent);
	    return TooltipPopupComponent;
	}(base_tooltip_1.BaseTooltip));
	exports.TooltipPopupComponent = TooltipPopupComponent;


/***/ },

/***/ 284:
/***/ function(module, exports) {

	module.exports = require("./series-tooltip-template.directive");

/***/ },

/***/ 285:
/***/ function(module, exports) {

	module.exports = require("./shared-tooltip-template.directive");

/***/ },

/***/ 286:
/***/ function(module, exports) {

	module.exports = require("./tooltip-template-point");

/***/ },

/***/ 287:
/***/ function(module, exports) {

	module.exports = require("../../common/has-parent");

/***/ },

/***/ 288:
/***/ function(module, exports) {

	module.exports = require("../../common/tooltip-template.service");

/***/ }

/******/ })));
//# sourceMappingURL=tooltip-popup.component.js.map