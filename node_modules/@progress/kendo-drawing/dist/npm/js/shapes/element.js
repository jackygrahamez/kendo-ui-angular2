module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(269);


/***/ },

/***/ 3:
/***/ function(module, exports) {

	module.exports = require("../common/defined");

/***/ },

/***/ 23:
/***/ function(module, exports) {

	module.exports = require("../geometry/transform");

/***/ },

/***/ 76:
/***/ function(module, exports) {

	module.exports = require("../common/is-transparent");

/***/ },

/***/ 77:
/***/ function(module, exports) {

	module.exports = require("../common/value-or-default");

/***/ },

/***/ 104:
/***/ function(module, exports) {

	module.exports = require("../mixins/observers-mixin");

/***/ },

/***/ 193:
/***/ function(module, exports) {

	module.exports = require("../common/to-matrix");

/***/ },

/***/ 217:
/***/ function(module, exports) {

	module.exports = require("../common/definition-id");

/***/ },

/***/ 220:
/***/ function(module, exports) {

	module.exports = require("../core/options-store");

/***/ },

/***/ 232:
/***/ function(module, exports) {

	module.exports = require("../geometry/matrix");

/***/ },

/***/ 244:
/***/ function(module, exports) {

	module.exports = require("../geometry/rect");

/***/ },

/***/ 269:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _optionsStore = __webpack_require__(220);

	var _optionsStore2 = _interopRequireDefault(_optionsStore);

	var _observersMixin = __webpack_require__(104);

	var _observersMixin2 = _interopRequireDefault(_observersMixin);

	var _rect = __webpack_require__(244);

	var _rect2 = _interopRequireDefault(_rect);

	var _matrix = __webpack_require__(232);

	var _matrix2 = _interopRequireDefault(_matrix);

	var _transform2 = __webpack_require__(23);

	var _transform3 = _interopRequireDefault(_transform2);

	var _valueOrDefault = __webpack_require__(77);

	var _valueOrDefault2 = _interopRequireDefault(_valueOrDefault);

	var _definitionId = __webpack_require__(217);

	var _definitionId2 = _interopRequireDefault(_definitionId);

	var _defined = __webpack_require__(3);

	var _defined2 = _interopRequireDefault(_defined);

	var _toMatrix = __webpack_require__(193);

	var _toMatrix2 = _interopRequireDefault(_toMatrix);

	var _isTransparent = __webpack_require__(76);

	var _isTransparent2 = _interopRequireDefault(_isTransparent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Element = function () {
	    function Element(options) {
	        _classCallCheck(this, Element);

	        this._initOptions(options);
	    }

	    _createClass(Element, [{
	        key: '_initOptions',
	        value: function _initOptions() {
	            var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	            var clip = options.clip;
	            var transform = options.transform;


	            if (transform) {
	                options.transform = (0, _transform3.default)(transform);
	            }

	            if (clip && !clip.id) {
	                clip.id = (0, _definitionId2.default)();
	            }

	            this.options = new _optionsStore2.default(options);
	            this.options.addObserver(this);
	        }
	    }, {
	        key: 'transform',
	        value: function transform(_transform) {
	            if ((0, _defined2.default)(_transform)) {
	                this.options.set("transform", (0, _transform3.default)(_transform));
	            } else {
	                return this.options.get("transform");
	            }
	        }
	    }, {
	        key: 'parentTransform',
	        value: function parentTransform() {
	            var element = this;
	            var parentMatrix = void 0;

	            while (element.parent) {
	                element = element.parent;
	                var transformation = element.transform();
	                if (transformation) {
	                    parentMatrix = transformation.matrix().multiplyCopy(parentMatrix || _matrix2.default.unit());
	                }
	            }

	            if (parentMatrix) {
	                return (0, _transform3.default)(parentMatrix);
	            }
	        }
	    }, {
	        key: 'currentTransform',
	        value: function currentTransform() {
	            var parentTransform = arguments.length <= 0 || arguments[0] === undefined ? this.parentTransform() : arguments[0];

	            var elementTransform = this.transform();
	            var elementMatrix = (0, _toMatrix2.default)(elementTransform);

	            var parentMatrix = (0, _toMatrix2.default)(parentTransform);
	            var combinedMatrix = void 0;

	            if (elementMatrix && parentMatrix) {
	                combinedMatrix = parentMatrix.multiplyCopy(elementMatrix);
	            } else {
	                combinedMatrix = elementMatrix || parentMatrix;
	            }

	            if (combinedMatrix) {
	                return (0, _transform3.default)(combinedMatrix);
	            }
	        }
	    }, {
	        key: 'visible',
	        value: function visible(_visible) {
	            if ((0, _defined2.default)(_visible)) {
	                this.options.set("visible", _visible);
	                return this;
	            }

	            return this.options.get("visible") !== false;
	        }
	    }, {
	        key: 'clip',
	        value: function clip(_clip) {
	            var options = this.options;
	            if ((0, _defined2.default)(_clip)) {
	                if (_clip && !_clip.id) {
	                    _clip.id = (0, _definitionId2.default)();
	                }
	                options.set("clip", _clip);
	                return this;
	            }

	            return options.get("clip");
	        }
	    }, {
	        key: 'opacity',
	        value: function opacity(value) {
	            if ((0, _defined2.default)(value)) {
	                this.options.set("opacity", value);
	                return this;
	            }

	            return (0, _valueOrDefault2.default)(this.options.get("opacity"), 1);
	        }
	    }, {
	        key: 'clippedBBox',
	        value: function clippedBBox(transformation) {
	            var bbox = this._clippedBBox(transformation);
	            if (bbox) {
	                var clip = this.clip();
	                return clip ? _rect2.default.intersect(bbox, clip.bbox(transformation)) : bbox;
	            }
	        }
	    }, {
	        key: 'containsPoint',
	        value: function containsPoint(point, parentTransform) {
	            if (this.visible()) {
	                var transform = this.currentTransform(parentTransform);
	                var transformedPoint = point;
	                if (transform) {
	                    transformedPoint = point.transformCopy(transform.matrix().invert());
	                }
	                return this._hasFill() && this._containsPoint(transformedPoint) || this._isOnPath && this._hasStroke() && this._isOnPath(transformedPoint);
	            }
	            return false;
	        }
	    }, {
	        key: '_hasFill',
	        value: function _hasFill() {
	            var fill = this.options.fill;
	            return fill && !(0, _isTransparent2.default)(fill.color);
	        }
	    }, {
	        key: '_hasStroke',
	        value: function _hasStroke() {
	            var stroke = this.options.stroke;
	            return stroke && stroke.width > 0 && !(0, _isTransparent2.default)(stroke.color);
	        }
	    }, {
	        key: '_clippedBBox',
	        value: function _clippedBBox(transformation) {
	            return this.bbox(transformation);
	        }
	    }]);

	    return Element;
	}();

	Element.prototype.nodeType = "Element";

	_observersMixin2.default.extend(Element.prototype);

	exports.default = Element;

/***/ }

/******/ });