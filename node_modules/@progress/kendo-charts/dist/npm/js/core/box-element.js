module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(470);


/***/ },

/***/ 23:
/***/ function(module, exports) {

	module.exports = require("@progress/kendo-drawing");

/***/ },

/***/ 60:
/***/ function(module, exports) {

	module.exports = require("../common/constants");

/***/ },

/***/ 111:
/***/ function(module, exports) {

	module.exports = require("../common/set-default-options");

/***/ },

/***/ 457:
/***/ function(module, exports) {

	module.exports = require("./chart-element");

/***/ },

/***/ 461:
/***/ function(module, exports) {

	module.exports = require("./box");

/***/ },

/***/ 467:
/***/ function(module, exports) {

	module.exports = require("../common/get-spacing");

/***/ },

/***/ 470:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _kendoDrawing = __webpack_require__(23);

	var _chartElement = __webpack_require__(457);

	var _chartElement2 = _interopRequireDefault(_chartElement);

	var _box = __webpack_require__(461);

	var _box2 = _interopRequireDefault(_box);

	var _constants = __webpack_require__(60);

	var _setDefaultOptions = __webpack_require__(111);

	var _setDefaultOptions2 = _interopRequireDefault(_setDefaultOptions);

	var _valueOrDefault = __webpack_require__(471);

	var _valueOrDefault2 = _interopRequireDefault(_valueOrDefault);

	var _getSpacing = __webpack_require__(467);

	var _getSpacing2 = _interopRequireDefault(_getSpacing);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var BoxElement = function (_ChartElement) {
	    _inherits(BoxElement, _ChartElement);

	    function BoxElement(options) {
	        _classCallCheck(this, BoxElement);

	        var _this = _possibleConstructorReturn(this, (BoxElement.__proto__ || Object.getPrototypeOf(BoxElement)).call(this, options));

	        _this.options.margin = (0, _getSpacing2.default)(_this.options.margin);
	        _this.options.padding = (0, _getSpacing2.default)(_this.options.padding);
	        return _this;
	    }

	    _createClass(BoxElement, [{
	        key: 'reflow',
	        value: function reflow(targetBox) {
	            var _this2 = this;

	            var options = this.options;
	            var width = options.width;
	            var height = options.height;
	            var shrinkToFit = options.shrinkToFit;

	            var hasSetSize = width && height;
	            var margin = options.margin;
	            var padding = options.padding;
	            var borderWidth = options.border.width;
	            var box = void 0;

	            var reflowPaddingBox = function reflowPaddingBox() {
	                _this2.align(targetBox, _constants.X, options.align);
	                _this2.align(targetBox, _constants.Y, options.vAlign);
	                _this2.paddingBox = box.clone().unpad(margin).unpad(borderWidth);
	            };

	            var contentBox = targetBox.clone();
	            if (hasSetSize) {
	                contentBox.x2 = contentBox.x1 + width;
	                contentBox.y2 = contentBox.y1 + height;
	            }

	            if (shrinkToFit) {
	                contentBox.unpad(margin).unpad(borderWidth).unpad(padding);
	            }

	            _get(BoxElement.prototype.__proto__ || Object.getPrototypeOf(BoxElement.prototype), 'reflow', this).call(this, contentBox);

	            if (hasSetSize) {
	                box = this.box = new _box2.default(0, 0, width, height);
	            } else {
	                box = this.box;
	            }

	            if (shrinkToFit && hasSetSize) {
	                reflowPaddingBox();
	                contentBox = this.contentBox = this.paddingBox.clone().unpad(padding);
	            } else {
	                contentBox = this.contentBox = box.clone();
	                box.pad(padding).pad(borderWidth).pad(margin);
	                reflowPaddingBox();
	            }

	            this.translateChildren(box.x1 - contentBox.x1 + margin.left + borderWidth + padding.left, box.y1 - contentBox.y1 + margin.top + borderWidth + padding.top);

	            var children = this.children;
	            for (var i = 0; i < children.length; i++) {
	                var item = children[i];
	                item.reflow(item.box);
	            }
	        }
	    }, {
	        key: 'align',
	        value: function align(targetBox, axis, alignment) {
	            this.box.align(targetBox, axis, alignment);
	        }
	    }, {
	        key: 'hasBox',
	        value: function hasBox() {
	            var options = this.options;
	            return options.border.width || options.background;
	        }
	    }, {
	        key: 'createVisual',
	        value: function createVisual() {
	            _get(BoxElement.prototype.__proto__ || Object.getPrototypeOf(BoxElement.prototype), 'createVisual', this).call(this);

	            var options = this.options;
	            if (options.visible && this.hasBox()) {
	                this.visual.append(_kendoDrawing.drawing.Path.fromRect(this.paddingBox.toRect(), this.visualStyle()));
	            }
	        }
	    }, {
	        key: 'visualStyle',
	        value: function visualStyle() {
	            var options = this.options;
	            var border = options.border || {};

	            return {
	                stroke: {
	                    width: border.width,
	                    color: border.color,
	                    opacity: (0, _valueOrDefault2.default)(border.opacity, options.opacity),
	                    dashType: border.dashType
	                },
	                fill: {
	                    color: options.background,
	                    opacity: options.opacity
	                },
	                cursor: options.cursor
	            };
	        }
	    }]);

	    return BoxElement;
	}(_chartElement2.default);

	(0, _setDefaultOptions2.default)(BoxElement.prototype, {
	    align: _constants.LEFT,
	    vAlign: _constants.TOP,
	    margin: {},
	    padding: {},
	    border: {
	        color: _constants.BLACK,
	        width: 0
	    },
	    background: "",
	    shrinkToFit: false,
	    width: 0,
	    height: 0,
	    visible: true
	});

	exports.default = BoxElement;

/***/ },

/***/ 471:
/***/ function(module, exports) {

	module.exports = require("../common/value-or-default");

/***/ }

/******/ });