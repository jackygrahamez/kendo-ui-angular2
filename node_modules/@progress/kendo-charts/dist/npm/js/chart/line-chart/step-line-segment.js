module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(184);


/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = require("../../common/constants");

/***/ },

/***/ 23:
/***/ function(module, exports) {

	module.exports = require("@progress/kendo-drawing");

/***/ },

/***/ 24:
/***/ function(module, exports) {

	module.exports = require("../constants");

/***/ },

/***/ 177:
/***/ function(module, exports) {

	module.exports = require("./line-segment");

/***/ },

/***/ 184:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _kendoDrawing = __webpack_require__(23);

	var _lineSegment = __webpack_require__(177);

	var _lineSegment2 = _interopRequireDefault(_lineSegment);

	var _constants = __webpack_require__(24);

	var _constants2 = __webpack_require__(5);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var StepLineSegment = function (_LineSegment) {
	    _inherits(StepLineSegment, _LineSegment);

	    function StepLineSegment() {
	        _classCallCheck(this, StepLineSegment);

	        return _possibleConstructorReturn(this, (StepLineSegment.__proto__ || Object.getPrototypeOf(StepLineSegment)).apply(this, arguments));
	    }

	    _createClass(StepLineSegment, [{
	        key: 'points',
	        value: function points(visualPoints) {
	            var points = this.calculateStepPoints(this.linePoints);

	            if (visualPoints && visualPoints.length) {
	                points = points.concat(this.calculateStepPoints(visualPoints).reverse());
	            }

	            return points;
	        }
	    }, {
	        key: 'calculateStepPoints',
	        value: function calculateStepPoints(points) {
	            var chart = this.parent;
	            var plotArea = chart.plotArea;
	            var categoryAxis = plotArea.seriesCategoryAxis(this.series);
	            var isInterpolate = chart.seriesMissingValues(this.series) === _constants.INTERPOLATE;
	            var reverse = categoryAxis.options.reverse;
	            var vertical = categoryAxis.options.vertical;
	            var dir = reverse ? 2 : 1;
	            var revDir = reverse ? 1 : 2;
	            var length = points.length;
	            var result = [];

	            for (var i = 1; i < length; i++) {
	                var prevPoint = points[i - 1];
	                var point = points[i];
	                var prevMarkerBoxCenter = prevPoint.markerBox().center();
	                var markerBoxCenter = point.markerBox().center();
	                if (categoryAxis.options.justified) {
	                    result.push(new _kendoDrawing.geometry.Point(prevMarkerBoxCenter.x, prevMarkerBoxCenter.y));
	                    if (vertical) {
	                        result.push(new _kendoDrawing.geometry.Point(prevMarkerBoxCenter.x, markerBoxCenter.y));
	                    } else {
	                        result.push(new _kendoDrawing.geometry.Point(markerBoxCenter.x, prevMarkerBoxCenter.y));
	                    }
	                    result.push(new _kendoDrawing.geometry.Point(markerBoxCenter.x, markerBoxCenter.y));
	                } else {
	                    if (vertical) {
	                        result.push(new _kendoDrawing.geometry.Point(prevMarkerBoxCenter.x, prevPoint.box[_constants2.Y + dir]));
	                        result.push(new _kendoDrawing.geometry.Point(prevMarkerBoxCenter.x, prevPoint.box[_constants2.Y + revDir]));
	                        if (isInterpolate) {
	                            result.push(new _kendoDrawing.geometry.Point(prevMarkerBoxCenter.x, point.box[_constants2.Y + dir]));
	                        }
	                        result.push(new _kendoDrawing.geometry.Point(markerBoxCenter.x, point.box[_constants2.Y + dir]));
	                        result.push(new _kendoDrawing.geometry.Point(markerBoxCenter.x, point.box[_constants2.Y + revDir]));
	                    } else {
	                        result.push(new _kendoDrawing.geometry.Point(prevPoint.box[_constants2.X + dir], prevMarkerBoxCenter.y));
	                        result.push(new _kendoDrawing.geometry.Point(prevPoint.box[_constants2.X + revDir], prevMarkerBoxCenter.y));
	                        if (isInterpolate) {
	                            result.push(new _kendoDrawing.geometry.Point(point.box[_constants2.X + dir], prevMarkerBoxCenter.y));
	                        }
	                        result.push(new _kendoDrawing.geometry.Point(point.box[_constants2.X + dir], markerBoxCenter.y));
	                        result.push(new _kendoDrawing.geometry.Point(point.box[_constants2.X + revDir], markerBoxCenter.y));
	                    }
	                }
	            }

	            return result || [];
	        }
	    }]);

	    return StepLineSegment;
	}(_lineSegment2.default);

	exports.default = StepLineSegment;

/***/ }

/******/ });