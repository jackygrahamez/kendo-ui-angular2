import { Point } from './geometry';

export class Gradient {

    stops: any;

    constructor(options?: GradientOptions);


    addStop(offset: number, color: string, opacity: number): GradientStop;
    removeStop(stop: GradientStop): void;

}

export interface GradientOptions {
    name?: string;
    stops?: any;
}    

export class GradientStop {

    options: GradientStopOptions;

    constructor(options?: GradientStopOptions);
}

export interface GradientStopOptions {
    offset?: number;
    color?: string;
    opacity?: number;
}

export class LinearGradient extends Gradient {

    options: LinearGradientOptions;

    stops: any;

    constructor(options?: LinearGradientOptions);

    addStop(offset: number, color: string, opacity: number): GradientStop;
    end(): Point;
    end(end: any): void;
    end(end: Point): void;
    start(): Point;
    start(start: any): void;
    start(start: Point): void;
    removeStop(stop: GradientStop): void;

}

export interface LinearGradientOptions {
    name?: string;
    stops?: any;
}

export class RadialGradient extends Gradient {

    options: RadialGradientOptions;

    stops: any;

    constructor(options?: RadialGradientOptions);

    addStop(offset: number, color: string, opacity: number): GradientStop;
    center(): Point;
    center(center: any): void;
    center(center: Point): void;
    radius(): number;
    radius(value: number): void;
    removeStop(stop: GradientStop): void;
    
}

export interface RadialGradientOptions {
    name?: string;
    center?: any|Point;
    radius?: number;
    stops?: any;
}