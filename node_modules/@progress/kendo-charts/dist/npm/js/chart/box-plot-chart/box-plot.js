module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(79);


/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = require("../../common/constants");

/***/ },

/***/ 7:
/***/ function(module, exports) {

	module.exports = require("../../common/defined");

/***/ },

/***/ 24:
/***/ function(module, exports) {

	module.exports = require("../constants");

/***/ },

/***/ 25:
/***/ function(module, exports) {

	module.exports = require("../../common/set-default-options");

/***/ },

/***/ 50:
/***/ function(module, exports) {

	module.exports = require("../../common/deep-extend");

/***/ },

/***/ 55:
/***/ function(module, exports) {

	module.exports = require("../../core");

/***/ },

/***/ 63:
/***/ function(module, exports) {

	module.exports = require("../utils/color");

/***/ },

/***/ 65:
/***/ function(module, exports) {

	module.exports = require("../mixins/point-events-mixin");

/***/ },

/***/ 79:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _candlestick = __webpack_require__(80);

	var _candlestick2 = _interopRequireDefault(_candlestick);

	var _pointEventsMixin = __webpack_require__(65);

	var _pointEventsMixin2 = _interopRequireDefault(_pointEventsMixin);

	var _core = __webpack_require__(55);

	var _constants = __webpack_require__(24);

	var _color = __webpack_require__(63);

	var _color2 = _interopRequireDefault(_color);

	var _constants2 = __webpack_require__(5);

	var _setDefaultOptions = __webpack_require__(25);

	var _setDefaultOptions2 = _interopRequireDefault(_setDefaultOptions);

	var _deepExtend = __webpack_require__(50);

	var _deepExtend2 = _interopRequireDefault(_deepExtend);

	var _defined = __webpack_require__(7);

	var _defined2 = _interopRequireDefault(_defined);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var BoxPlot = function (_Candlestick) {
	    _inherits(BoxPlot, _Candlestick);

	    function BoxPlot(value, options) {
	        _classCallCheck(this, BoxPlot);

	        var _this = _possibleConstructorReturn(this, (BoxPlot.__proto__ || Object.getPrototypeOf(BoxPlot)).call(this, value, options));

	        _this.createNote();
	        return _this;
	    }

	    _createClass(BoxPlot, [{
	        key: 'reflow',
	        value: function reflow(box) {
	            var options = this.options;
	            var value = this.value;
	            var chart = this.owner;

	            var valueAxis = chart.seriesValueAxis(options);
	            var whiskerSlot = void 0,
	                boxSlot = void 0;

	            this.boxSlot = boxSlot = valueAxis.getSlot(value.q1, value.q3);
	            this.realBody = boxSlot;
	            this.reflowBoxSlot(box);

	            this.whiskerSlot = whiskerSlot = valueAxis.getSlot(value.lower, value.upper);
	            this.reflowWhiskerSlot(box);

	            var medianSlot = valueAxis.getSlot(value.median);

	            if (value.mean) {
	                var meanSlot = valueAxis.getSlot(value.mean);
	                this.meanPoints = this.calcMeanPoints(box, meanSlot);
	            }

	            this.whiskerPoints = this.calcWhiskerPoints(boxSlot, whiskerSlot);
	            this.medianPoints = this.calcMedianPoints(box, medianSlot);

	            this.box = whiskerSlot.clone().wrap(boxSlot);
	            this.reflowNote();
	        }
	    }, {
	        key: 'reflowBoxSlot',
	        value: function reflowBoxSlot(box) {
	            this.boxSlot.x1 = box.x1;
	            this.boxSlot.x2 = box.x2;
	        }
	    }, {
	        key: 'reflowWhiskerSlot',
	        value: function reflowWhiskerSlot(box) {
	            this.whiskerSlot.x1 = box.x1;
	            this.whiskerSlot.x2 = box.x2;
	        }
	    }, {
	        key: 'calcMeanPoints',
	        value: function calcMeanPoints(box, meanSlot) {
	            return [[[box.x1, meanSlot.y1], [box.x2, meanSlot.y1]]];
	        }
	    }, {
	        key: 'calcWhiskerPoints',
	        value: function calcWhiskerPoints(boxSlot, whiskerSlot) {
	            var mid = whiskerSlot.center().x;
	            return [[[mid - 5, whiskerSlot.y1], [mid + 5, whiskerSlot.y1], [mid, whiskerSlot.y1], [mid, boxSlot.y1]], [[mid - 5, whiskerSlot.y2], [mid + 5, whiskerSlot.y2], [mid, whiskerSlot.y2], [mid, boxSlot.y2]]];
	        }
	    }, {
	        key: 'calcMedianPoints',
	        value: function calcMedianPoints(box, medianSlot) {
	            return [[[box.x1, medianSlot.y1], [box.x2, medianSlot.y1]]];
	        }
	    }, {
	        key: 'renderOutliers',
	        value: function renderOutliers(options) {
	            var value = this.value;
	            var outliers = value.outliers || [];
	            var outerFence = Math.abs(value.q3 - value.q1) * 3;
	            var elements = [];
	            var markers = options.markers || {};

	            for (var i = 0; i < outliers.length; i++) {
	                var outlierValue = outliers[i];
	                if (outlierValue < value.q3 + outerFence && outlierValue > value.q1 - outerFence) {
	                    markers = options.outliers;
	                } else {
	                    markers = options.extremes;
	                }
	                var markersBorder = (0, _deepExtend2.default)({}, markers.border);

	                if (!(0, _defined2.default)(markersBorder.color)) {
	                    if ((0, _defined2.default)(this.color)) {
	                        markersBorder.color = this.color;
	                    } else {
	                        markersBorder.color = new _color2.default(markers.background).brightness(_constants.BORDER_BRIGHTNESS).toHex();
	                    }
	                }

	                var shape = new _core.ShapeElement({
	                    type: markers.type,
	                    width: markers.size,
	                    height: markers.size,
	                    rotation: markers.rotation,
	                    background: markers.background,
	                    border: markersBorder,
	                    opacity: markers.opacity
	                });

	                shape.value = outlierValue;

	                elements.push(shape);
	            }

	            this.reflowOutliers(elements);
	            return elements;
	        }
	    }, {
	        key: 'reflowOutliers',
	        value: function reflowOutliers(outliers) {
	            var valueAxis = this.owner.seriesValueAxis(this.options);
	            var center = this.box.center();

	            for (var i = 0; i < outliers.length; i++) {
	                var outlierValue = outliers[i].value;
	                var markerBox = valueAxis.getSlot(outlierValue);

	                if (this.options.vertical) {
	                    markerBox.move(center.x);
	                } else {
	                    markerBox.move(undefined, center.y);
	                }

	                this.box = this.box.wrap(markerBox);
	                outliers[i].reflow(markerBox);
	            }
	        }
	    }, {
	        key: 'mainVisual',
	        value: function mainVisual(options) {
	            var group = _get(BoxPlot.prototype.__proto__ || Object.getPrototypeOf(BoxPlot.prototype), 'mainVisual', this).call(this, options);
	            var outliers = this.renderOutliers(options);

	            for (var i = 0; i < outliers.length; i++) {
	                var element = outliers[i].getElement();
	                if (element) {
	                    group.append(element);
	                }
	            }

	            return group;
	        }
	    }, {
	        key: 'createLines',
	        value: function createLines(container, options) {
	            this.drawLines(container, options, this.whiskerPoints, options.line);
	            this.drawLines(container, options, this.medianPoints, options.median);
	            this.drawLines(container, options, this.meanPoints, options.mean);
	        }
	    }, {
	        key: 'getBorderColor',
	        value: function getBorderColor() {
	            if (this.color) {
	                return this.color;
	            }

	            return _get(BoxPlot.prototype.__proto__ || Object.getPrototypeOf(BoxPlot.prototype), 'getBorderColor', this).call(this);
	        }
	    }]);

	    return BoxPlot;
	}(_candlestick2.default);

	(0, _setDefaultOptions2.default)(BoxPlot.prototype, {
	    border: {
	        _brightness: 0.8
	    },
	    line: {
	        width: 2
	    },
	    mean: {
	        width: 2,
	        dashType: "dash"
	    },
	    overlay: {
	        gradient: _constants.GLASS
	    },
	    tooltip: {
	        format: '<table>\n                    <tr><th colspan="2">{6:d}</th></tr>\n                    <tr><td>Lower:</td><td>{0:C}</td></tr>\n                    <tr><td>Q1:</td><td>{1:C}</td></tr>\n                    <tr><td>Median:</td><td>{2:C}</td></tr>\n                    <tr><td>Mean:</td><td>{5:C}</td></tr>\n                    <tr><td>Q3:</td><td>{3:C}</td></tr>\n                    <tr><td>Upper:</td><td>{4:C}</td></tr>\n                </table>'
	    },
	    highlight: {
	        opacity: 1,
	        border: {
	            width: 1,
	            opacity: 1
	        },
	        line: {
	            width: 1,
	            opacity: 1
	        }
	    },
	    notes: {
	        visible: true,
	        label: {}
	    },
	    outliers: {
	        visible: true,
	        size: _constants.LINE_MARKER_SIZE,
	        type: _constants2.CROSS,
	        background: _constants2.WHITE,
	        border: {
	            width: 2,
	            opacity: 1
	        },
	        opacity: 0
	    },
	    extremes: {
	        visible: true,
	        size: _constants.LINE_MARKER_SIZE,
	        type: _constants2.CIRCLE,
	        background: _constants2.WHITE,
	        border: {
	            width: 2,
	            opacity: 1
	        },
	        opacity: 0
	    }
	});

	(0, _deepExtend2.default)(BoxPlot.prototype, _pointEventsMixin2.default);

	exports.default = BoxPlot;

/***/ },

/***/ 80:
/***/ function(module, exports) {

	module.exports = require("../candlestick-chart/candlestick");

/***/ }

/******/ });