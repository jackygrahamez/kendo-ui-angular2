module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(103);


/***/ },

/***/ 103:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _observersMixin = __webpack_require__(104);

	var _observersMixin2 = _interopRequireDefault(_observersMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var _push = [].push;
	var _pop = [].pop;
	var splice = [].splice;
	var _shift = [].shift;
	var _slice = [].slice;
	var _unshift = [].unshift;

	var ElementsArray = function () {
	    function ElementsArray() {
	        var array = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

	        _classCallCheck(this, ElementsArray);

	        this.length = 0;
	        this._splice(0, array.length, array);
	    }

	    _createClass(ElementsArray, [{
	        key: 'elements',
	        value: function elements(_elements) {
	            if (_elements) {
	                this._splice(0, this.length, _elements);

	                this._change();
	                return this;
	            }

	            return this.slice(0);
	        }
	    }, {
	        key: 'push',
	        value: function push() {
	            var elements = arguments;
	            var result = _push.apply(this, elements);

	            this._add(elements);

	            return result;
	        }
	    }, {
	        key: 'slice',
	        value: function slice() {
	            return _slice.call(this);
	        }
	    }, {
	        key: 'pop',
	        value: function pop() {
	            var length = this.length;
	            var result = _pop.apply(this);

	            if (length) {
	                this._remove([result]);
	            }

	            return result;
	        }
	    }, {
	        key: 'splice',
	        value: function splice(index, howMany) {
	            var elements = _slice.call(arguments, 2);
	            var result = this._splice(index, howMany, elements);

	            this._change();

	            return result;
	        }
	    }, {
	        key: 'shift',
	        value: function shift() {
	            var length = this.length;
	            var result = _shift.apply(this);

	            if (length) {
	                this._remove([result]);
	            }

	            return result;
	        }
	    }, {
	        key: 'unshift',
	        value: function unshift() {
	            var elements = arguments;
	            var result = _unshift.apply(this, elements);

	            this._add(elements);

	            return result;
	        }
	    }, {
	        key: 'indexOf',
	        value: function indexOf(element) {
	            var length = this.length;

	            for (var idx = 0; idx < length; idx++) {
	                if (this[idx] === element) {
	                    return idx;
	                }
	            }
	            return -1;
	        }
	    }, {
	        key: '_splice',
	        value: function _splice(index, howMany, elements) {
	            var result = splice.apply(this, [index, howMany].concat(elements));

	            this._clearObserver(result);
	            this._setObserver(elements);

	            return result;
	        }
	    }, {
	        key: '_add',
	        value: function _add(elements) {
	            this._setObserver(elements);
	            this._change();
	        }
	    }, {
	        key: '_remove',
	        value: function _remove(elements) {
	            this._clearObserver(elements);
	            this._change();
	        }
	    }, {
	        key: '_setObserver',
	        value: function _setObserver(elements) {
	            for (var idx = 0; idx < elements.length; idx++) {
	                elements[idx].addObserver(this);
	            }
	        }
	    }, {
	        key: '_clearObserver',
	        value: function _clearObserver(elements) {
	            for (var idx = 0; idx < elements.length; idx++) {
	                elements[idx].removeObserver(this);
	            }
	        }
	    }, {
	        key: '_change',
	        value: function _change() {}
	    }]);

	    return ElementsArray;
	}();

	_observersMixin2.default.extend(ElementsArray.prototype);

	exports.default = ElementsArray;

/***/ },

/***/ 104:
/***/ function(module, exports) {

	module.exports = require("../mixins/observers-mixin");

/***/ }

/******/ });