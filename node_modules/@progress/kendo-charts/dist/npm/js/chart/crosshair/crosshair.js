module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(143);


/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = require("../../common/constants");

/***/ },

/***/ 23:
/***/ function(module, exports) {

	module.exports = require("@progress/kendo-drawing");

/***/ },

/***/ 25:
/***/ function(module, exports) {

	module.exports = require("../../common/set-default-options");

/***/ },

/***/ 50:
/***/ function(module, exports) {

	module.exports = require("../../common/deep-extend");

/***/ },

/***/ 55:
/***/ function(module, exports) {

	module.exports = require("../../core");

/***/ },

/***/ 143:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _kendoDrawing = __webpack_require__(23);

	var _core = __webpack_require__(55);

	var _crosshairTooltip = __webpack_require__(144);

	var _crosshairTooltip2 = _interopRequireDefault(_crosshairTooltip);

	var _constants = __webpack_require__(5);

	var _setDefaultOptions = __webpack_require__(25);

	var _setDefaultOptions2 = _interopRequireDefault(_setDefaultOptions);

	var _deepExtend = __webpack_require__(50);

	var _deepExtend2 = _interopRequireDefault(_deepExtend);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Crosshair = function (_ChartElement) {
	    _inherits(Crosshair, _ChartElement);

	    function Crosshair(chart, axis, options) {
	        _classCallCheck(this, Crosshair);

	        var _this = _possibleConstructorReturn(this, (Crosshair.__proto__ || Object.getPrototypeOf(Crosshair)).call(this, options));

	        _this.axis = axis;
	        _this.stickyMode = axis instanceof _core.CategoryAxis;

	        var tooltipOptions = _this.options.tooltip;

	        if (tooltipOptions.visible) {
	            _this.tooltip = new _crosshairTooltip2.default(chart, _this, (0, _deepExtend2.default)({}, tooltipOptions, { stickyMode: _this.stickyMode }));
	        }
	        return _this;
	    }

	    _createClass(Crosshair, [{
	        key: 'showAt',
	        value: function showAt(point) {
	            this.point = point;
	            this.moveLine();
	            this.line.visible(true);

	            if (this.tooltip) {
	                this.tooltip.showAt(point);
	            }
	        }
	    }, {
	        key: 'hide',
	        value: function hide() {
	            this.line.visible(false);

	            if (this.tooltip) {
	                this.tooltip.hide();
	            }
	        }
	    }, {
	        key: 'moveLine',
	        value: function moveLine() {
	            var axis = this.axis;
	            var point = this.point;

	            var vertical = axis.options.vertical;
	            var box = this.getBox();
	            var dim = vertical ? _constants.Y : _constants.X;
	            var lineStart = new _kendoDrawing.geometry.Point(box.x1, box.y1);
	            var lineEnd = void 0;

	            if (vertical) {
	                lineEnd = new _kendoDrawing.geometry.Point(box.x2, box.y1);
	            } else {
	                lineEnd = new _kendoDrawing.geometry.Point(box.x1, box.y2);
	            }

	            if (point) {
	                if (this.stickyMode) {
	                    var slot = axis.getSlot(axis.pointCategoryIndex(point));
	                    lineStart[dim] = lineEnd[dim] = slot.center()[dim];
	                } else {
	                    lineStart[dim] = lineEnd[dim] = point[dim];
	                }
	            }

	            this.box = box;

	            this.line.moveTo(lineStart).lineTo(lineEnd);
	        }
	    }, {
	        key: 'getBox',
	        value: function getBox() {
	            var axis = this.axis;
	            var axes = axis.pane.axes;
	            var length = axes.length;
	            var vertical = axis.options.vertical;
	            var box = axis.lineBox().clone();
	            var dim = vertical ? _constants.X : _constants.Y;
	            var axisLineBox = void 0;

	            for (var i = 0; i < length; i++) {
	                var currentAxis = axes[i];
	                if (currentAxis.options.vertical !== vertical) {
	                    if (!axisLineBox) {
	                        axisLineBox = currentAxis.lineBox().clone();
	                    } else {
	                        axisLineBox.wrap(currentAxis.lineBox());
	                    }
	                }
	            }

	            box[dim + 1] = axisLineBox[dim + 1];
	            box[dim + 2] = axisLineBox[dim + 2];

	            return box;
	        }
	    }, {
	        key: 'createVisual',
	        value: function createVisual() {
	            _get(Crosshair.prototype.__proto__ || Object.getPrototypeOf(Crosshair.prototype), 'createVisual', this).call(this);

	            var options = this.options;
	            this.line = new _kendoDrawing.drawing.Path({
	                stroke: {
	                    color: options.color,
	                    width: options.width,
	                    opacity: options.opacity,
	                    dashType: options.dashType
	                },
	                visible: false
	            });

	            this.moveLine();
	            this.visual.append(this.line);
	        }
	    }, {
	        key: 'destroy',
	        value: function destroy() {
	            if (this.tooltip) {
	                this.tooltip.destroy();
	            }

	            _get(Crosshair.prototype.__proto__ || Object.getPrototypeOf(Crosshair.prototype), 'destroy', this).call(this);
	        }
	    }]);

	    return Crosshair;
	}(_core.ChartElement);

	(0, _setDefaultOptions2.default)(Crosshair.prototype, {
	    color: _constants.BLACK,
	    width: 1,
	    zIndex: -1,
	    tooltip: {
	        visible: false
	    }
	});

	exports.default = Crosshair;

/***/ },

/***/ 144:
/***/ function(module, exports) {

	module.exports = require("./crosshair-tooltip");

/***/ }

/******/ });