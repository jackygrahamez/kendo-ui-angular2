module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(285);


/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = require("../../common/constants");

/***/ },

/***/ 6:
/***/ function(module, exports) {

	module.exports = require("../../common/is-number");

/***/ },

/***/ 72:
/***/ function(module, exports) {

	module.exports = require("../categorical-chart");

/***/ },

/***/ 86:
/***/ function(module, exports) {

	module.exports = require("../../common/auto-format");

/***/ },

/***/ 96:
/***/ function(module, exports) {

	module.exports = require("../bar-chart/bar-chart");

/***/ },

/***/ 285:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _barChart = __webpack_require__(96);

	var _barChart2 = _interopRequireDefault(_barChart);

	var _rangeBar = __webpack_require__(286);

	var _rangeBar2 = _interopRequireDefault(_rangeBar);

	var _categoricalChart = __webpack_require__(72);

	var _categoricalChart2 = _interopRequireDefault(_categoricalChart);

	var _constants = __webpack_require__(5);

	var _autoFormat = __webpack_require__(86);

	var _autoFormat2 = _interopRequireDefault(_autoFormat);

	var _isNumber = __webpack_require__(6);

	var _isNumber2 = _interopRequireDefault(_isNumber);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var RangeBarChart = function (_BarChart) {
	    _inherits(RangeBarChart, _BarChart);

	    function RangeBarChart() {
	        _classCallCheck(this, RangeBarChart);

	        return _possibleConstructorReturn(this, (RangeBarChart.__proto__ || Object.getPrototypeOf(RangeBarChart)).apply(this, arguments));
	    }

	    _createClass(RangeBarChart, [{
	        key: 'pointType',
	        value: function pointType() {
	            return _rangeBar2.default;
	        }
	    }, {
	        key: 'pointValue',
	        value: function pointValue(data) {
	            return data.valueFields;
	        }
	    }, {
	        key: 'formatPointValue',
	        value: function formatPointValue(point, format) {
	            if (point.value.from === null && point.value.to === null) {
	                return "";
	            }

	            return (0, _autoFormat2.default)(format, point.value.from, point.value.to);
	        }
	    }, {
	        key: 'plotRange',
	        value: function plotRange(point) {
	            if (!point) {
	                return 0;
	            }

	            return [point.value.from, point.value.to];
	        }
	    }, {
	        key: 'updateRange',
	        value: function updateRange(value, fields) {
	            var axisName = fields.series.axis;
	            var from = value.from;
	            var to = value.to;

	            var axisRange = this.valueAxisRanges[axisName];

	            if (value !== null && (0, _isNumber2.default)(from) && (0, _isNumber2.default)(to)) {
	                axisRange = this.valueAxisRanges[axisName] = axisRange || { min: _constants.MAX_VALUE, max: _constants.MIN_VALUE };

	                axisRange.min = Math.min(axisRange.min, from);
	                axisRange.max = Math.max(axisRange.max, from);

	                axisRange.min = Math.min(axisRange.min, to);
	                axisRange.max = Math.max(axisRange.max, to);
	            }
	        }
	    }, {
	        key: 'aboveAxis',
	        value: function aboveAxis(point) {
	            var value = point.value;
	            return value.from < value.to;
	        }
	    }]);

	    return RangeBarChart;
	}(_barChart2.default);

	RangeBarChart.prototype.plotLimits = _categoricalChart2.default.prototype.plotLimits;

	exports.default = RangeBarChart;

/***/ },

/***/ 286:
/***/ function(module, exports) {

	module.exports = require("./range-bar");

/***/ }

/******/ });