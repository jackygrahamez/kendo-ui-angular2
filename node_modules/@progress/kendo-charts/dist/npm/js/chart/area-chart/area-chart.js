module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(41);


/***/ },

/***/ 24:
/***/ function(module, exports) {

	module.exports = require("../constants");

/***/ },

/***/ 41:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _lineChart = __webpack_require__(42);

	var _lineChart2 = _interopRequireDefault(_lineChart);

	var _linePoint = __webpack_require__(43);

	var _linePoint2 = _interopRequireDefault(_linePoint);

	var _areaSegment = __webpack_require__(44);

	var _areaSegment2 = _interopRequireDefault(_areaSegment);

	var _stepAreaSegment = __webpack_require__(45);

	var _stepAreaSegment2 = _interopRequireDefault(_stepAreaSegment);

	var _splineAreaSegment = __webpack_require__(46);

	var _splineAreaSegment2 = _interopRequireDefault(_splineAreaSegment);

	var _constants = __webpack_require__(24);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var AreaChart = function (_LineChart) {
	    _inherits(AreaChart, _LineChart);

	    function AreaChart() {
	        _classCallCheck(this, AreaChart);

	        return _possibleConstructorReturn(this, (AreaChart.__proto__ || Object.getPrototypeOf(AreaChart)).apply(this, arguments));
	    }

	    _createClass(AreaChart, [{
	        key: 'createSegment',
	        value: function createSegment(linePoints, currentSeries, seriesIx, prevSegment) {
	            var isStacked = this.options.isStacked;
	            var style = (currentSeries.line || {}).style;

	            var stackPoints = void 0;
	            if (isStacked && seriesIx > 0 && prevSegment) {
	                var missingValues = this.seriesMissingValues(currentSeries);
	                if (missingValues !== "gap") {
	                    stackPoints = prevSegment.linePoints;
	                } else {
	                    stackPoints = this._gapStackPoints(linePoints, seriesIx, style);
	                }

	                if (style !== _constants.STEP) {
	                    stackPoints = stackPoints.slice(0).reverse();
	                }
	            }

	            if (style === _constants.SMOOTH) {
	                return new _splineAreaSegment2.default(linePoints, prevSegment, isStacked, currentSeries, seriesIx);
	            }

	            var pointType = void 0;
	            if (style === _constants.STEP) {
	                pointType = _stepAreaSegment2.default;
	            } else {
	                pointType = _areaSegment2.default;
	            }

	            return new pointType(linePoints, stackPoints, currentSeries, seriesIx);
	        }
	    }, {
	        key: 'reflow',
	        value: function reflow(targetBox) {
	            _get(AreaChart.prototype.__proto__ || Object.getPrototypeOf(AreaChart.prototype), 'reflow', this).call(this, targetBox);

	            var stackPoints = this._stackPoints;
	            if (stackPoints) {
	                for (var idx = 0; idx < stackPoints.length; idx++) {
	                    var stackPoint = stackPoints[idx];
	                    var pointSlot = this.categoryAxis.getSlot(stackPoint.categoryIx);
	                    stackPoint.reflow(pointSlot);
	                }
	            }
	        }
	    }, {
	        key: '_gapStackPoints',
	        value: function _gapStackPoints(linePoints, seriesIx, style) {
	            var seriesPoints = this.seriesPoints;
	            var startIdx = linePoints[0].categoryIx;
	            var endIdx = startIdx + linePoints.length;
	            var stackPoints = [];

	            this._stackPoints = this._stackPoints || [];
	            for (var idx = startIdx; idx < endIdx; idx++) {
	                var currentSeriesIx = seriesIx;
	                var point = void 0;

	                do {
	                    currentSeriesIx--;
	                    point = seriesPoints[currentSeriesIx][idx];
	                } while (currentSeriesIx > 0 && !point);

	                if (point) {
	                    if (style !== _constants.STEP && idx > startIdx && !seriesPoints[currentSeriesIx][idx - 1]) {
	                        stackPoints.push(this._previousSegmentPoint(idx, idx - 1, currentSeriesIx));
	                    }

	                    stackPoints.push(point);

	                    if (style !== _constants.STEP && idx + 1 < endIdx && !seriesPoints[currentSeriesIx][idx + 1]) {
	                        stackPoints.push(this._previousSegmentPoint(idx, idx + 1, currentSeriesIx));
	                    }
	                } else {
	                    var gapStackPoint = this._createGapStackPoint(idx);
	                    this._stackPoints.push(gapStackPoint);
	                    stackPoints.push(gapStackPoint);
	                }
	            }

	            return stackPoints;
	        }
	    }, {
	        key: '_previousSegmentPoint',
	        value: function _previousSegmentPoint(categoryIx, segmentIx, seriesIdx) {
	            var seriesPoints = this.seriesPoints;
	            var index = seriesIdx;
	            var point = void 0;

	            while (index > 0 && !point) {
	                index--;
	                point = seriesPoints[index][segmentIx];
	            }

	            if (!point) {
	                point = this._createGapStackPoint(categoryIx);
	                this._stackPoints.push(point);
	            } else {
	                point = seriesPoints[index][categoryIx];
	            }

	            return point;
	        }
	    }, {
	        key: '_createGapStackPoint',
	        value: function _createGapStackPoint(categoryIx) {
	            var options = this.pointOptions({}, 0);
	            var point = new _linePoint2.default(0, options);
	            point.categoryIx = categoryIx;
	            point.series = {};

	            return point;
	        }
	    }, {
	        key: 'seriesMissingValues',
	        value: function seriesMissingValues(series) {
	            return series.missingValues || _constants.ZERO;
	        }
	    }]);

	    return AreaChart;
	}(_lineChart2.default);

	exports.default = AreaChart;

/***/ },

/***/ 42:
/***/ function(module, exports) {

	module.exports = require("../line-chart/line-chart");

/***/ },

/***/ 43:
/***/ function(module, exports) {

	module.exports = require("../line-chart/line-point");

/***/ },

/***/ 44:
/***/ function(module, exports) {

	module.exports = require("./area-segment");

/***/ },

/***/ 45:
/***/ function(module, exports) {

	module.exports = require("./step-area-segment");

/***/ },

/***/ 46:
/***/ function(module, exports) {

	module.exports = require("./spline-area-segment");

/***/ }

/******/ });