module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(81);


/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = require("../../common/constants");

/***/ },

/***/ 7:
/***/ function(module, exports) {

	module.exports = require("../../common/defined");

/***/ },

/***/ 73:
/***/ function(module, exports) {

	module.exports = require("../cluster-layout");

/***/ },

/***/ 81:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _candlestickChart = __webpack_require__(82);

	var _candlestickChart2 = _interopRequireDefault(_candlestickChart);

	var _verticalBoxPlot = __webpack_require__(83);

	var _verticalBoxPlot2 = _interopRequireDefault(_verticalBoxPlot);

	var _boxPlot = __webpack_require__(84);

	var _boxPlot2 = _interopRequireDefault(_boxPlot);

	var _clusterLayout = __webpack_require__(73);

	var _clusterLayout2 = _interopRequireDefault(_clusterLayout);

	var _areNumbers = __webpack_require__(85);

	var _areNumbers2 = _interopRequireDefault(_areNumbers);

	var _constants = __webpack_require__(5);

	var _defined = __webpack_require__(7);

	var _defined2 = _interopRequireDefault(_defined);

	var _autoFormat = __webpack_require__(86);

	var _autoFormat2 = _interopRequireDefault(_autoFormat);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var BoxPlotChart = function (_CandlestickChart) {
	    _inherits(BoxPlotChart, _CandlestickChart);

	    function BoxPlotChart() {
	        _classCallCheck(this, BoxPlotChart);

	        return _possibleConstructorReturn(this, (BoxPlotChart.__proto__ || Object.getPrototypeOf(BoxPlotChart)).apply(this, arguments));
	    }

	    _createClass(BoxPlotChart, [{
	        key: 'addValue',
	        value: function addValue(data, fields) {
	            var categoryIx = fields.categoryIx;
	            var category = fields.category;
	            var series = fields.series;
	            var seriesIx = fields.seriesIx;
	            var children = this.children;
	            var options = this.options;

	            var value = data.valueFields;
	            var valueParts = this.splitValue(value);
	            var hasValue = (0, _areNumbers2.default)(valueParts);
	            var dataItem = series.data[categoryIx];
	            var categoryPoints = this.categoryPoints[categoryIx];
	            var point = void 0;

	            if (!categoryPoints) {
	                this.categoryPoints[categoryIx] = categoryPoints = [];
	            }

	            if (hasValue) {
	                point = this.createPoint(data, fields);
	            }

	            var cluster = children[categoryIx];
	            if (!cluster) {
	                cluster = new _clusterLayout2.default({
	                    vertical: options.invertAxes,
	                    gap: options.gap,
	                    spacing: options.spacing
	                });
	                this.append(cluster);
	            }

	            if (point) {
	                this.updateRange(value, fields);

	                cluster.append(point);

	                point.categoryIx = categoryIx;
	                point.category = category;
	                point.series = series;
	                point.seriesIx = seriesIx;
	                point.owner = this;
	                point.dataItem = dataItem;
	            }

	            this.points.push(point);
	            categoryPoints.push(point);
	        }
	    }, {
	        key: 'pointType',
	        value: function pointType() {
	            if (this.options.invertAxes) {
	                return _verticalBoxPlot2.default;
	            }

	            return _boxPlot2.default;
	        }
	    }, {
	        key: 'splitValue',
	        value: function splitValue(value) {
	            return [value.lower, value.q1, value.median, value.q3, value.upper];
	        }
	    }, {
	        key: 'updateRange',
	        value: function updateRange(value, fields) {
	            var axisName = fields.series.axis;
	            var axisRange = this.valueAxisRanges[axisName];
	            var parts = this.splitValue(value).concat(this.filterOutliers(value.outliers));

	            if ((0, _defined2.default)(value.mean)) {
	                parts = parts.concat(value.mean);
	            }

	            axisRange = this.valueAxisRanges[axisName] = axisRange || { min: _constants.MAX_VALUE, max: _constants.MIN_VALUE };

	            axisRange = this.valueAxisRanges[axisName] = {
	                min: Math.min.apply(Math, parts.concat([axisRange.min])),
	                max: Math.max.apply(Math, parts.concat([axisRange.max]))
	            };
	        }
	    }, {
	        key: 'formatPointValue',
	        value: function formatPointValue(point, format) {
	            var value = point.value;

	            return (0, _autoFormat2.default)(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);
	        }
	    }, {
	        key: 'filterOutliers',
	        value: function filterOutliers(items) {
	            var length = (items || []).length;
	            var result = [];

	            for (var i = 0; i < length; i++) {
	                var item = items[i];
	                if ((0, _defined2.default)(item) && item !== null) {
	                    result.push(item);
	                }
	            }

	            return result;
	        }
	    }]);

	    return BoxPlotChart;
	}(_candlestickChart2.default);

	exports.default = BoxPlotChart;

/***/ },

/***/ 82:
/***/ function(module, exports) {

	module.exports = require("../candlestick-chart/candlestick-chart");

/***/ },

/***/ 83:
/***/ function(module, exports) {

	module.exports = require("./vertical-box-plot");

/***/ },

/***/ 84:
/***/ function(module, exports) {

	module.exports = require("./box-plot");

/***/ },

/***/ 85:
/***/ function(module, exports) {

	module.exports = require("../utils/are-numbers");

/***/ },

/***/ 86:
/***/ function(module, exports) {

	module.exports = require("../../common/auto-format");

/***/ }

/******/ });