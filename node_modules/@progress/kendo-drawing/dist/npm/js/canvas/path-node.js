module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(75);


/***/ },

/***/ 59:
/***/ function(module, exports) {

	module.exports = require("./node-map");

/***/ },

/***/ 60:
/***/ function(module, exports) {

	module.exports = require("./utils/render-path");

/***/ },

/***/ 67:
/***/ function(module, exports) {

	module.exports = require("./node");

/***/ },

/***/ 75:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _node = __webpack_require__(67);

	var _node2 = _interopRequireDefault(_node);

	var _isTransparent = __webpack_require__(76);

	var _isTransparent2 = _interopRequireDefault(_isTransparent);

	var _valueOrDefault = __webpack_require__(77);

	var _valueOrDefault2 = _interopRequireDefault(_valueOrDefault);

	var _linearGradient = __webpack_require__(78);

	var _linearGradient2 = _interopRequireDefault(_linearGradient);

	var _radialGradient = __webpack_require__(79);

	var _radialGradient2 = _interopRequireDefault(_radialGradient);

	var _constants = __webpack_require__(80);

	var _renderPath = __webpack_require__(60);

	var _renderPath2 = _interopRequireDefault(_renderPath);

	var _nodeMap = __webpack_require__(59);

	var _nodeMap2 = _interopRequireDefault(_nodeMap);

	var _chromaJs = __webpack_require__(81);

	var _chromaJs2 = _interopRequireDefault(_chromaJs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function addGradientStops(gradient, stops) {
	    for (var idx = 0; idx < stops.length; idx++) {
	        var stop = stops[idx];
	        var color = (0, _chromaJs2.default)(stop.color());
	        color.alpha(color.alpha() * stop.opacity());
	        gradient.addColorStop(stop.offset(), color.css());
	    }
	}

	var PathNode = function (_Node) {
	    _inherits(PathNode, _Node);

	    function PathNode() {
	        _classCallCheck(this, PathNode);

	        return _possibleConstructorReturn(this, (PathNode.__proto__ || Object.getPrototypeOf(PathNode)).apply(this, arguments));
	    }

	    _createClass(PathNode, [{
	        key: 'renderTo',
	        value: function renderTo(ctx) {
	            ctx.save();

	            this.setTransform(ctx);
	            this.setClip(ctx);
	            this.setOpacity(ctx);

	            ctx.beginPath();

	            this.renderPoints(ctx, this.srcElement);

	            this.setLineDash(ctx);
	            this.setLineCap(ctx);
	            this.setLineJoin(ctx);

	            this.setFill(ctx);
	            this.setStroke(ctx);

	            ctx.restore();
	        }
	    }, {
	        key: 'setFill',
	        value: function setFill(ctx) {
	            var fill = this.srcElement.options.fill;
	            var hasFill = false;

	            if (fill) {
	                if (fill.nodeType === "Gradient") {
	                    this.setGradientFill(ctx, fill);
	                    hasFill = true;
	                } else if (!(0, _isTransparent2.default)(fill.color)) {
	                    ctx.fillStyle = fill.color;

	                    ctx.save();
	                    this.globalAlpha(ctx, fill.opacity);
	                    ctx.fill();
	                    ctx.restore();

	                    hasFill = true;
	                }
	            }

	            return hasFill;
	        }
	    }, {
	        key: 'setGradientFill',
	        value: function setGradientFill(ctx, fill) {
	            var bbox = this.srcElement.rawBBox();
	            var gradient = void 0;

	            if (fill instanceof _linearGradient2.default) {
	                var start = fill.start();
	                var end = fill.end();
	                gradient = ctx.createLinearGradient(start.x, start.y, end.x, end.y);
	            } else if (fill instanceof _radialGradient2.default) {
	                var center = fill.center();
	                gradient = ctx.createRadialGradient(center.x, center.y, 0, center.x, center.y, fill.radius());
	            }

	            addGradientStops(gradient, fill.stops);

	            ctx.save();

	            if (!fill.userSpace()) {
	                ctx.transform(bbox.width(), 0, 0, bbox.height(), bbox.origin.x, bbox.origin.y);
	            }
	            ctx.fillStyle = gradient;
	            ctx.fill();

	            ctx.restore();
	        }
	    }, {
	        key: 'setStroke',
	        value: function setStroke(ctx) {
	            var stroke = this.srcElement.options.stroke;
	            if (stroke && !(0, _isTransparent2.default)(stroke.color) && stroke.width > 0) {
	                ctx.strokeStyle = stroke.color;
	                ctx.lineWidth = (0, _valueOrDefault2.default)(stroke.width, 1);

	                ctx.save();
	                this.globalAlpha(ctx, stroke.opacity);
	                ctx.stroke();
	                ctx.restore();

	                return true;
	            }
	        }
	    }, {
	        key: 'dashType',
	        value: function dashType() {
	            var stroke = this.srcElement.options.stroke;
	            if (stroke && stroke.dashType) {
	                return stroke.dashType.toLowerCase();
	            }
	        }
	    }, {
	        key: 'setLineDash',
	        value: function setLineDash(ctx) {
	            var dashType = this.dashType();
	            if (dashType && dashType !== _constants.SOLID) {
	                var dashArray = _constants.DASH_ARRAYS[dashType];
	                if (ctx.setLineDash) {
	                    ctx.setLineDash(dashArray);
	                } else {
	                    ctx.mozDash = dashArray;
	                    ctx.webkitLineDash = dashArray;
	                }
	            }
	        }
	    }, {
	        key: 'setLineCap',
	        value: function setLineCap(ctx) {
	            var dashType = this.dashType();
	            var stroke = this.srcElement.options.stroke;
	            if (dashType && dashType !== _constants.SOLID) {
	                ctx.lineCap = _constants.BUTT;
	            } else if (stroke && stroke.lineCap) {
	                ctx.lineCap = stroke.lineCap;
	            }
	        }
	    }, {
	        key: 'setLineJoin',
	        value: function setLineJoin(ctx) {
	            var stroke = this.srcElement.options.stroke;
	            if (stroke && stroke.lineJoin) {
	                ctx.lineJoin = stroke.lineJoin;
	            }
	        }
	    }, {
	        key: 'renderPoints',
	        value: function renderPoints(ctx, path) {
	            (0, _renderPath2.default)(ctx, path);
	        }
	    }]);

	    return PathNode;
	}(_node2.default);

	_nodeMap2.default.Path = PathNode;

	exports.default = PathNode;

/***/ },

/***/ 76:
/***/ function(module, exports) {

	module.exports = require("../common/is-transparent");

/***/ },

/***/ 77:
/***/ function(module, exports) {

	module.exports = require("../common/value-or-default");

/***/ },

/***/ 78:
/***/ function(module, exports) {

	module.exports = require("../gradients/linear-gradient");

/***/ },

/***/ 79:
/***/ function(module, exports) {

	module.exports = require("../gradients/radial-gradient");

/***/ },

/***/ 80:
/***/ function(module, exports) {

	module.exports = require("../core/constants");

/***/ },

/***/ 81:
/***/ function(module, exports) {

	module.exports = require("chroma-js");

/***/ }

/******/ });