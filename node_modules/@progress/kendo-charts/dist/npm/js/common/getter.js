module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(397);


/***/ },

/***/ 377:
/***/ function(module, exports) {

	module.exports = require("./defined");

/***/ },

/***/ 397:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = getter;

	var _defined = __webpack_require__(377);

	var _defined2 = _interopRequireDefault(_defined);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var FIELD_REGEX = /\[(\d+)\]|([^\.]+)/g;
	var getterCache = {};

	getterCache['undefined'] = function (obj) {
	    return obj;
	};

	function getter(field) {
	    if (getterCache[field]) {
	        return getterCache[field];
	    }

	    var fields = [];
	    field.replace(FIELD_REGEX, function (match, index, field) {
	        fields.push((0, _defined2.default)(index) ? index : field);
	    });

	    getterCache[field] = function (obj) {
	        var result = obj;
	        for (var idx = 0; idx < fields.length && result; idx++) {
	            result = result[fields[idx]];
	        }

	        return result;
	    };

	    return getterCache[field];
	}

/***/ }

/******/ });