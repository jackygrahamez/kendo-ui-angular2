module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(341);


/***/ },

/***/ 23:
/***/ function(module, exports) {

	module.exports = require("../geometry/transform");

/***/ },

/***/ 65:
/***/ function(module, exports) {

	module.exports = require("../shapes/group");

/***/ },

/***/ 87:
/***/ function(module, exports) {

	module.exports = require("../core/surface");

/***/ },

/***/ 88:
/***/ function(module, exports) {

	module.exports = require("../core/surface-factory");

/***/ },

/***/ 90:
/***/ function(module, exports) {

	module.exports = require("./root-node");

/***/ },

/***/ 159:
/***/ function(module, exports) {

	module.exports = require("./constants");

/***/ },

/***/ 333:
/***/ function(module, exports) {

	module.exports = require("./utils/render-svg");

/***/ },

/***/ 341:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _surface = __webpack_require__(87);

	var _surface2 = _interopRequireDefault(_surface);

	var _surfaceFactory = __webpack_require__(88);

	var _surfaceFactory2 = _interopRequireDefault(_surfaceFactory);

	var _rootNode = __webpack_require__(90);

	var _rootNode2 = _interopRequireDefault(_rootNode);

	var _group = __webpack_require__(65);

	var _group2 = _interopRequireDefault(_group);

	var _transform = __webpack_require__(23);

	var _transform2 = _interopRequireDefault(_transform);

	var _renderSvg = __webpack_require__(333);

	var _renderSvg2 = _interopRequireDefault(_renderSvg);

	var _constants = __webpack_require__(159);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function alignToScreen(element) {
	    var ctm = void 0;

	    try {
	        ctm = element.getScreenCTM ? element.getScreenCTM() : null;
	    } catch (e) {} // eslint-disable-line no-empty

	    if (ctm) {
	        var left = -ctm.e % 1;
	        var top = -ctm.f % 1;
	        var style = element.style;

	        if (left !== 0 || top !== 0) {
	            style.left = left + "px";
	            style.top = top + "px";
	        }
	    }
	}

	var Surface = function (_BaseSurface) {
	    _inherits(Surface, _BaseSurface);

	    function Surface(element, options) {
	        _classCallCheck(this, Surface);

	        var _this = _possibleConstructorReturn(this, (Surface.__proto__ || Object.getPrototypeOf(Surface)).call(this, element, options));

	        _this._root = new _rootNode2.default(_this.options);

	        (0, _renderSvg2.default)(_this.element, _this._template());

	        _this._rootElement = _this.element.firstElementChild;

	        alignToScreen(_this._rootElement);

	        _this._root.attachTo(_this._rootElement);

	        _this.element.addEventListener("click", _this._click, false);
	        _this.element.addEventListener("mouseover", _this._mouseenter, false);
	        _this.element.addEventListener("mouseout", _this._mouseleave, false);
	        _this.element.addEventListener("mousemove", _this._mousemove, false);

	        _this.resize();
	        return _this;
	    }

	    _createClass(Surface, [{
	        key: 'destroy',
	        value: function destroy() {
	            if (this._root) {
	                this._root.destroy();
	                this._root = null;
	                this._rootElement = null;
	                this.element.removeEventListener("click", this._click, false);
	                this.element.removeEventListener("mouseover", this._mouseenter, false);
	                this.element.removeEventListener("mouseout", this._mouseleave, false);
	                this.element.removeEventListener("mousemove", this._mousemove, false);
	            }

	            _get(Surface.prototype.__proto__ || Object.getPrototypeOf(Surface.prototype), 'destroy', this).call(this);
	        }
	    }, {
	        key: 'translate',
	        value: function translate(offset) {
	            var viewBox = Math.round(offset.x) + ' ' + Math.round(offset.y) + ' ' + this._size.width + ' ' + this._size.height;

	            this._offset = offset;
	            this._rootElement.setAttribute("viewBox", viewBox);
	        }
	    }, {
	        key: 'draw',
	        value: function draw(element) {
	            _get(Surface.prototype.__proto__ || Object.getPrototypeOf(Surface.prototype), 'draw', this).call(this, element);
	            this._root.load([element]);
	        }
	    }, {
	        key: 'clear',
	        value: function clear() {
	            _get(Surface.prototype.__proto__ || Object.getPrototypeOf(Surface.prototype), 'clear', this).call(this);
	            this._root.clear();
	        }
	    }, {
	        key: 'svg',
	        value: function svg() {
	            return "<?xml version='1.0' ?>" + this._template();
	        }
	    }, {
	        key: 'exportVisual',
	        value: function exportVisual() {
	            var visual = this._visual;
	            var offset = this._offset;


	            if (offset) {
	                var wrap = new _group2.default();
	                wrap.children.push(visual);

	                wrap.transform((0, _transform2.default)().translate(-offset.x, -offset.y));

	                visual = wrap;
	            }

	            return visual;
	        }
	    }, {
	        key: '_resize',
	        value: function _resize() {
	            if (this._offset) {
	                this.translate(this._offset);
	            }
	        }
	    }, {
	        key: '_template',
	        value: function _template() {
	            return '<svg style=\'width: 100%; height: 100%; overflow: hidden;\'\n                xmlns=\'' + _constants.SVG_NS + '\' xmlns:xlink=\'http://www.w3.org/1999/xlink\'\n                version=\'1.1\'>' + this._root.render() + '</svg>';
	        }
	    }]);

	    return Surface;
	}(_surface2.default);

	Surface.prototype.type = "svg";

	if (typeof document !== "undefined" && document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1")) {
	    _surfaceFactory2.default.current.register("svg", Surface, 10);
	}

	exports.default = Surface;

/***/ }

/******/ });