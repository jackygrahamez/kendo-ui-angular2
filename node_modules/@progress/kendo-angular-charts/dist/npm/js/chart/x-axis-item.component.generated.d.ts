import { CollectionService } from '../common/collection.service';
import { CollectionItemComponent } from '../common/collection-item.component';
import { ConfigurationService } from '../common/configuration.service';
import { AxisLine, AxisTicks, GridLines, PlotBand } from '../common/property-types';
/**
 * @hidden
 */
export declare abstract class XAxisItemComponentGenerated extends CollectionItemComponent {
    protected configurationService: ConfigurationService;
    protected collectionService: CollectionService;
    /**
     * (Only for objects) The value at which the y axis crosses this axis.
     *
     * (Only for arrays) The value indices at which the y axes cross the value axis.
     *
     * (Only for dates) The date at which the y axis crosses this axis.
     *
     * To denote the far end of the axis, set a value greater than or equal to the axis maximum value.
     */
    axisCrossingValue: any[];
    /**
     * The background color of the axis.
     */
    background: string;
    /**
     * The base time interval for the axis labels. The default `baseUnit` is automatically determined from
     * the value range.
     *
     * The available options are:
     *
     * - milliseconds
     * - seconds
     * - minutes
     * - hours
     * - days
     * - weeks
     * - months
     * - years
     */
    baseUnit: string;
    /**
     * The color of the axis. Accepts a valid CSS color string, including hex and rgb.
     */
    color: string;
    /**
     * The configuration of the axis lines. Also affects the major and minor ticks, but not the grid lines.
     */
    line: AxisLine;
    /**
     * The configuration of the major grid lines. These are the lines that are an extension of the major
     * ticks through the body of the Chart.
     */
    majorGridLines: GridLines;
    /**
     * The configuration of the scatter chart x axis major ticks.
     */
    majorTicks: AxisTicks;
    /**
     * The interval between major divisions.
     * If this is a date axis, the value represents the number of `xAxis.baseUnits` between major divisions.
     * If the `xAxis.type` is set to `"log"`, the `majorUnit` value is used for the base of the logarithm.
     */
    majorUnit: number;
    /**
     * The maximum value of the axis.
     */
    max: any;
    /**
     * The minimum value of the axis.
     */
    min: any;
    /**
     * The configuration of the minor grid lines. These are the lines that are an extension of the minor
     * ticks through the body of the Chart.
     */
    minorGridLines: GridLines;
    /**
     * The configuration of the x-axis minor ticks.
     */
    minorTicks: AxisTicks;
    /**
     * The interval between minor divisions. It defaults to 1/5 of the `xAxis.majorUnit`.
     * If the `xAxis.type` is set to `"log"`, the `minorUnit` value represents the number of divisions between
     * two major units and defaults to the major unit minus one.
     */
    minorUnit: number;
    /**
     * The unique axis name. Used to associate a series with a x axis by using the `series.xAxis` option.
     */
    name: string;
    /**
     * If set to `true`, the Chart prevents the automatic axis range from snapping to 0.
     * Setting it to `false` forces the automatic axis range to snap to 0.
     */
    narrowRange: boolean;
    /**
     * The name of the pane that the axis has to be rendered in.
     * If not set, the axis is rendered in the first (default) pane.
     */
    pane: string;
    /**
     * The plot bands of the x axis.
     */
    plotBands: PlotBand[];
    /**
     * If set to `true`, the value axis direction is reversed. By default, values increase from left to
     * right and from bottom to top.
     */
    reverse: boolean;
    /**
     * The angle (in degrees) where the 0 value is placed.
     *
     * Angles increase counterclockwise and zero is to the right. Negative values are acceptable.
     */
    startAngle: number;
    /**
     * The axis type.
     *
     * The supported values are:
     *
     * - `"numeric"`&mdash;Numeric axis.
     * - `"date"`&mdash;Specialized axis for displaying chronological data.
     * - `"log"`&mdash;Logarithmic axis.
     *
     * The Chart automatically switches to a date axis if the series x value
     * is of type Date. To avoid this behavior, set the `xAsix.type`.
     */
    type: string;
    /**
     * If set to `true`, the Chart displays the x axis. By default, the x axis is visible.
     */
    visible: boolean;
    /**
     * The crosshair configuration options.
     *
     * The crosshair is displayed when the `xAxis.crosshair.visible` option is set to `true`.
     */
    crosshair: any;
    /**
     * The axis labels configuration.
     */
    labels: any;
    /**
     * The x-axis notes configuration.
     */
    notes: any;
    /**
     * The title configuration of the Scatter Chart x axis.
     *
     * To display the title, set the `xAxis.title.text` option.
     */
    title: any;
    constructor(configurationService: ConfigurationService, collectionService: CollectionService);
}
