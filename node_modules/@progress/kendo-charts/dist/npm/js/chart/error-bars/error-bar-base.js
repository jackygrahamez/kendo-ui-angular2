module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(156);


/***/ },

/***/ 23:
/***/ function(module, exports) {

	module.exports = require("@progress/kendo-drawing");

/***/ },

/***/ 24:
/***/ function(module, exports) {

	module.exports = require("../constants");

/***/ },

/***/ 25:
/***/ function(module, exports) {

	module.exports = require("../../common/set-default-options");

/***/ },

/***/ 55:
/***/ function(module, exports) {

	module.exports = require("../../core");

/***/ },

/***/ 156:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _kendoDrawing = __webpack_require__(23);

	var _core = __webpack_require__(55);

	var _constants = __webpack_require__(24);

	var _setDefaultOptions = __webpack_require__(25);

	var _setDefaultOptions2 = _interopRequireDefault(_setDefaultOptions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var DEFAULT_ERROR_BAR_WIDTH = 4;

	var ErrorBarBase = function (_ChartElement) {
	    _inherits(ErrorBarBase, _ChartElement);

	    function ErrorBarBase(low, high, isVertical, chart, series, options) {
	        _classCallCheck(this, ErrorBarBase);

	        var _this = _possibleConstructorReturn(this, (ErrorBarBase.__proto__ || Object.getPrototypeOf(ErrorBarBase)).call(this, options));

	        _this.low = low;
	        _this.high = high;
	        _this.isVertical = isVertical;
	        _this.chart = chart;
	        _this.series = series;
	        return _this;
	    }

	    _createClass(ErrorBarBase, [{
	        key: 'reflow',
	        value: function reflow(targetBox) {
	            var endCaps = this.options.endCaps;
	            var isVertical = this.isVertical;
	            var axis = this.getAxis();
	            var valueBox = axis.getSlot(this.low, this.high);
	            var centerBox = targetBox.center();
	            var capsWidth = this.getCapsWidth(targetBox, isVertical);
	            var capValue = isVertical ? centerBox.x : centerBox.y;
	            var capStart = capValue - capsWidth;
	            var capEnd = capValue + capsWidth;
	            var linePoints = void 0;

	            if (isVertical) {
	                linePoints = [new _core.Point(centerBox.x, valueBox.y1), new _core.Point(centerBox.x, valueBox.y2)];
	                if (endCaps) {
	                    linePoints.push(new _core.Point(capStart, valueBox.y1), new _core.Point(capEnd, valueBox.y1), new _core.Point(capStart, valueBox.y2), new _core.Point(capEnd, valueBox.y2));
	                }
	                this.box = new _core.Box(capStart, valueBox.y1, capEnd, valueBox.y2);
	            } else {
	                linePoints = [new _core.Point(valueBox.x1, centerBox.y), new _core.Point(valueBox.x2, centerBox.y)];
	                if (endCaps) {
	                    linePoints.push(new _core.Point(valueBox.x1, capStart), new _core.Point(valueBox.x1, capEnd), new _core.Point(valueBox.x2, capStart), new _core.Point(valueBox.x2, capEnd));
	                }
	                this.box = new _core.Box(valueBox.x1, capStart, valueBox.x2, capEnd);
	            }

	            this.linePoints = linePoints;
	        }
	    }, {
	        key: 'getCapsWidth',
	        value: function getCapsWidth(box, isVertical) {
	            var boxSize = isVertical ? box.width() : box.height();
	            var capsWidth = Math.min(Math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;

	            return capsWidth;
	        }
	    }, {
	        key: 'createVisual',
	        value: function createVisual() {
	            var _this2 = this;

	            var options = this.options;
	            var visual = options.visual;

	            if (visual) {
	                this.visual = visual({
	                    low: this.low,
	                    high: this.high,
	                    rect: this.box.toRect(),
	                    sender: this.getChart(),
	                    options: {
	                        endCaps: options.endCaps,
	                        color: options.color,
	                        line: options.line
	                    },
	                    createVisual: function createVisual() {
	                        _this2.createDefaultVisual();
	                        var defaultVisual = _this2.visual;
	                        delete _this2.visual;
	                        return defaultVisual;
	                    }
	                });
	            } else {
	                this.createDefaultVisual();
	            }
	        }
	    }, {
	        key: 'createDefaultVisual',
	        value: function createDefaultVisual() {
	            var options = this.options;
	            var linePoints = this.linePoints;

	            var lineOptions = {
	                stroke: {
	                    color: options.color,
	                    width: options.line.width,
	                    dashType: options.line.dashType
	                }
	            };

	            _get(ErrorBarBase.prototype.__proto__ || Object.getPrototypeOf(ErrorBarBase.prototype), 'createVisual', this).call(this);

	            for (var idx = 0; idx < linePoints.length; idx += 2) {
	                var line = new _kendoDrawing.drawing.Path(lineOptions).moveTo(linePoints[idx].x, linePoints[idx].y).lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);

	                this.visual.append(line);
	            }
	        }
	    }]);

	    return ErrorBarBase;
	}(_core.ChartElement);

	(0, _setDefaultOptions2.default)(ErrorBarBase.prototype, {
	    animation: {
	        type: _constants.FADEIN,
	        delay: _constants.INITIAL_ANIMATION_DURATION
	    },
	    endCaps: true,
	    line: {
	        width: 1
	    },
	    zIndex: 1
	});

	exports.default = ErrorBarBase;

/***/ }

/******/ });