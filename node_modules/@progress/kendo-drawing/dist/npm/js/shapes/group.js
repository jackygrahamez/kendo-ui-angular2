module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(271);


/***/ },

/***/ 68:
/***/ function(module, exports) {

	module.exports = require("../mixins/traversable");

/***/ },

/***/ 245:
/***/ function(module, exports) {

	module.exports = require("../common/append");

/***/ },

/***/ 262:
/***/ function(module, exports) {

	module.exports = require("./element");

/***/ },

/***/ 271:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _element = __webpack_require__(262);

	var _element2 = _interopRequireDefault(_element);

	var _traversable = __webpack_require__(68);

	var _traversable2 = _interopRequireDefault(_traversable);

	var _append2 = __webpack_require__(245);

	var _append3 = _interopRequireDefault(_append2);

	var _elementsBoundingBox = __webpack_require__(272);

	var _elementsBoundingBox2 = _interopRequireDefault(_elementsBoundingBox);

	var _elementsClippendBoundingBox = __webpack_require__(273);

	var _elementsClippendBoundingBox2 = _interopRequireDefault(_elementsClippendBoundingBox);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Group = function (_Element) {
	    _inherits(Group, _Element);

	    function Group(options) {
	        _classCallCheck(this, Group);

	        var _this = _possibleConstructorReturn(this, (Group.__proto__ || Object.getPrototypeOf(Group)).call(this, options));

	        _this.children = [];
	        return _this;
	    }

	    _createClass(Group, [{
	        key: 'childrenChange',
	        value: function childrenChange(action, items, index) {
	            this.trigger("childrenChange", {
	                action: action,
	                items: items,
	                index: index
	            });
	        }
	    }, {
	        key: 'append',
	        value: function append() {
	            (0, _append3.default)(this.children, arguments);
	            this._reparent(arguments, this);

	            this.childrenChange("add", arguments);

	            return this;
	        }
	    }, {
	        key: 'insert',
	        value: function insert(index, element) {
	            this.children.splice(index, 0, element);
	            element.parent = this;

	            this.childrenChange("add", [element], index);

	            return this;
	        }
	    }, {
	        key: 'remove',
	        value: function remove(element) {
	            var index = this.children.indexOf(element);
	            if (index >= 0) {
	                this.children.splice(index, 1);
	                element.parent = null;
	                this.childrenChange("remove", [element], index);
	            }

	            return this;
	        }
	    }, {
	        key: 'removeAt',
	        value: function removeAt(index) {
	            if (0 <= index && index < this.children.length) {
	                var element = this.children[index];
	                this.children.splice(index, 1);
	                element.parent = null;
	                this.childrenChange("remove", [element], index);
	            }

	            return this;
	        }
	    }, {
	        key: 'clear',
	        value: function clear() {
	            var items = this.children;
	            this.children = [];
	            this._reparent(items, null);

	            this.childrenChange("remove", items, 0);

	            return this;
	        }
	    }, {
	        key: 'bbox',
	        value: function bbox(transformation) {
	            return (0, _elementsBoundingBox2.default)(this.children, true, this.currentTransform(transformation));
	        }
	    }, {
	        key: 'rawBBox',
	        value: function rawBBox() {
	            return (0, _elementsBoundingBox2.default)(this.children, false);
	        }
	    }, {
	        key: '_clippedBBox',
	        value: function _clippedBBox(transformation) {
	            return (0, _elementsClippendBoundingBox2.default)(this.children, this.currentTransform(transformation));
	        }
	    }, {
	        key: 'currentTransform',
	        value: function currentTransform(transformation) {
	            return _element2.default.prototype.currentTransform.call(this, transformation) || null;
	        }
	    }, {
	        key: 'containsPoint',
	        value: function containsPoint(point, parentTransform) {
	            if (this.visible()) {
	                var children = this.children;
	                var transform = this.currentTransform(parentTransform);
	                for (var idx = 0; idx < children.length; idx++) {
	                    if (children[idx].containsPoint(point, transform)) {
	                        return true;
	                    }
	                }
	            }
	            return false;
	        }
	    }, {
	        key: '_reparent',
	        value: function _reparent(elements, newParent) {
	            for (var i = 0; i < elements.length; i++) {
	                var child = elements[i];
	                var parent = child.parent;
	                if (parent && parent !== this && parent.remove) {
	                    parent.remove(child);
	                }

	                child.parent = newParent;
	            }
	        }
	    }]);

	    return Group;
	}(_element2.default);

	Group.prototype.nodeType = "Group";

	_traversable2.default.extend(Group.prototype, "children");

	exports.default = Group;

/***/ },

/***/ 272:
/***/ function(module, exports) {

	module.exports = require("./utils/elements-bounding-box");

/***/ },

/***/ 273:
/***/ function(module, exports) {

	module.exports = require("./utils/elements-clippend-bounding-box");

/***/ }

/******/ });