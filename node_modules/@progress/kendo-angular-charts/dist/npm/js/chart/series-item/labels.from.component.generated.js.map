{"version":3,"sources":["webpack:///webpack/bootstrap ad3edd743ed361bd0e56?6e3f*****************************************************************************************","webpack:///external \"@angular/core\"?73d1****************************************************************************","webpack:///external \"../../common/settings.component\"?7c8e**************************","webpack:///./src/chart/series-item/labels.from.component.generated.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACtCA,2C;;;;;;;ACAA,6D;;;;;;;;;;;;;;;;;;;;;;ACAA,kCAAsB,EAAe,CAAC;AAEtC,gDAAkC,GAAiC,CAAC;AAGpE;;IAEG;AACH;KAAiE,sDAAiB;KAwEhF,4CAAmB,oBAA0C;SAC3D,kBAAM,aAAa,EAAE,oBAAoB,CAAC,CAAC;SAD1B,yBAAoB,GAApB,oBAAoB,CAAsB;KAE7D,CAAC;KAtED;SAAC,YAAK,EAAE;;2EAAA;KAKR;SAAC,YAAK,EAAE;;uEAAA;KAKR;SAAC,YAAK,EAAE;;sEAAA;KAoBR;SAAC,YAAK,EAAE;;wEAAA;KAKR;SAAC,YAAK,EAAE;;qEAAA;KAKR;SAAC,YAAK,EAAE;;uEAAA;KAKR;SAAC,YAAK,EAAE;;uEAAA;KAKR;SAAC,YAAK,EAAE;;wEAAA;KAUR;SAAC,YAAK,EAAE;;yEAAA;KAMR;SAAC,YAAK,EAAE;;wEAAA;KAKV,yCAAC;AAAD,EAAC,CA3EgE,sCAAiB,GA2EjF;AA3EqB,2CAAkC,qCA2EvD","file":"src/chart/series-item/labels.from.component.generated.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ad3edd743ed361bd0e56\n **/","module.exports = require(\"@angular/core\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@angular/core\"\n ** module id = 13\n ** module chunksn **/","module.exports = require(\"../../common/settings.component\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"../../common/settings.component\"\n ** module id = 128\n ** module chunks = 18 20 22 24 28 30 32 34 36 38 40 42 51 53 57 65 67 69 71 73 75 77 81 83 85 87 89 91 93 95 97 99 101 103 120 122 124 126 128 130 132 138 140 142 144 146 148 150 156 158 160 162 164 166 168\n **/","import { Input } from '@angular/core';\r\nimport { ConfigurationService } from '../../common/configuration.service';\r\nimport { SettingsComponent } from '../../common/settings.component';\r\nimport { Border, Margin, Padding } from '../../common/property-types';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport abstract class SeriesLabelsFromComponentGenerated extends SettingsComponent {\r\n  /**\r\n   * The background color of the from labels. Accepts a valid CSS color string, including hex and rgb.\r\n   */\r\n  @Input() public background: string;\r\n\r\n  /**\r\n   * The border of the from labels.\r\n   */\r\n  @Input() public border: Border;\r\n\r\n  /**\r\n   * The text color of the from labels. Accepts a valid CSS color string, including hex and rgb.\r\n   */\r\n  @Input() public color: string;\r\n\r\n  /**\r\n   * The template which renders the Chart series from label.\r\n   *\r\n   * The fields that can be used in the template are:\r\n   *\r\n   * - `category`&mdash;The category name. Available for the Area, Bar, Column, Bubble, Donut, Line, Pie, and\r\n   * Waterfall series.\r\n   * - `dataItem`&mdash;The original data item used to construct the point. If binding to an array, it will be `null`.\r\n   * - `percentage`&mdash;The point value represented as a percentage value. Available only for the Donut, Pie, and\r\n   * 100% stacked charts.\r\n   * - `series`&mdash;The data series.\r\n   * - `value`&mdash;The point value. Can be a number or object containing each bound field.\r\n   * - `runningTotal`&mdash;The sum of point values since the last `\"runningTotal\"` summary point. Available for\r\n   * the Waterfall series.\r\n   * - `total`&mdash;The sum of all previous series values. Available for the Waterfall series.\r\n   *\r\n   * The text can be split into multiple lines by using line feed characters (`\"\\n\"`).\r\n   */\r\n  @Input() public content: (e: any) => string;\r\n\r\n  /**\r\n   * The font style of the from labels.\r\n   */\r\n  @Input() public font: string;\r\n\r\n  /**\r\n   * The format of the from labels. Uses `kendo.format`.\r\n   */\r\n  @Input() public format: string;\r\n\r\n  /**\r\n   * The margin of the from labels. A numeric value sets all margins.\r\n   */\r\n  @Input() public margin: Margin | number;\r\n\r\n  /**\r\n   * The padding of the from labels. A numeric value sets all paddings.\r\n   */\r\n  @Input() public padding: Padding | number;\r\n\r\n  /**\r\n   * The position of the from labels.\r\n   *\r\n   * - `\"center\"`&mdash;The label is positioned at the point center.\r\n   * - `\"insideBase\"`&mdash;The label is positioned inside, near the base of the bar.\r\n   * - `\"insideEnd\"`&mdash;The label is positioned inside, near the end of the point.\r\n   * - `\"outsideEnd\"`&mdash;The label is positioned outside, near the end of the point.\r\n   */\r\n  @Input() public position: string;\r\n\r\n  /**\r\n   * If set to `true`, the Chart displays the series from labels. By default, the Chart series from labels\r\n   * are not displayed.\r\n   */\r\n  @Input() public visible: boolean;\r\n\r\n  constructor(public configurationService: ConfigurationService) {\r\n    super('labels.from', configurationService);\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/chart/series-item/labels.from.component.generated.ts\n **/"],"sourceRoot":""}