{"version":3,"sources":["webpack:///webpack/bootstrap ad3edd743ed361bd0e56?6e3f**************************","webpack:///external \"@angular/core\"?73d1*************","webpack:///./src/chart/category-axis-item.component.generated.ts","webpack:///external \"../common/collection-item.component\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACtCA,2C;;;;;;;;;;;;;;;;;;;;;;ACAA,kCAAsB,EAAe,CAAC;AAEtC,uDAAwC,GAAqC,CAAC;AAI9E;;IAEG;AACH;KAAiE,sDAAuB;KAqMtF,4CAAsB,oBAA0C,EAC1C,iBAAoC;SACxD,kBAAM,oBAAoB,EAAE,iBAAiB,CAAC,CAAC;SAF3B,yBAAoB,GAApB,oBAAoB,CAAsB;SAC1C,sBAAiB,GAAjB,iBAAiB,CAAmB;KAE1D,CAAC;KAhMD;SAAC,YAAK,EAAE;;kFAAA;KAIR;SAAC,YAAK,EAAE;;2EAAA;KAsBR;SAAC,YAAK,EAAE;;yEAAA;KAOR;SAAC,YAAK,EAAE;;6EAAA;KAIR;SAAC,YAAK,EAAE;;2EAAA;KAKR;SAAC,YAAK,EAAE;;sEAAA;KAUR;SAAC,YAAK,EAAE;;0EAAA;KAIR;SAAC,YAAK,EAAE;;qEAAA;KAKR;SAAC,YAAK,EAAE;;+EAAA;KAIR;SAAC,YAAK,EAAE;;2EAAA;KAOR;SAAC,YAAK,EAAE;;oEAAA;KAMR;SAAC,YAAK,EAAE;;8EAAA;KAOR;SAAC,YAAK,EAAE;;oEAAA;KAKR;SAAC,YAAK,EAAE;;+EAAA;KAIR;SAAC,YAAK,EAAE;;2EAAA;KAKR;SAAC,YAAK,EAAE;;qEAAA;KAKR;SAAC,YAAK,EAAE;;qEAAA;KAIR;SAAC,YAAK,EAAE;;0EAAA;KAKR;SAAC,YAAK,EAAE;;wEAAA;KAOR;SAAC,YAAK,EAAE;;gFAAA;KAMR;SAAC,YAAK,EAAE;;2EAAA;KASR;SAAC,YAAK,EAAE;;qEAAA;KAIR;SAAC,YAAK,EAAE;;wEAAA;KAcR;SAAC,YAAK,EAAE;;6EAAA;KAQR;SAAC,YAAK,EAAE;;0EAAA;KAIR;SAAC,YAAK,EAAE;;uEAAA;KAIR;SAAC,YAAK,EAAE;;sEAAA;KAYR;SAAC,YAAK,EAAE;;uEAAA;KAMR;SAAC,YAAK,EAAE;;sEAAA;KAMV,yCAAC;AAAD,EAAC,CAzMgE,mDAAuB,GAyMvF;AAzMqB,2CAAkC,qCAyMvD;;;;;;;;AClND,iE","file":"src/chart/category-axis-item.component.generated.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ad3edd743ed361bd0e56\n **/","module.exports = require(\"@angular/core\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@angular/core\"\n ** module id = 13\n ** module chunksn **/","import { Input } from '@angular/core';\r\nimport { CollectionService } from '../common/collection.service';\r\nimport { CollectionItemComponent } from '../common/collection-item.component';\r\nimport { ConfigurationService } from '../common/configuration.service';\r\nimport { AxisLine, AxisTicks, GridLines, PlotBand } from '../common/property-types';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport abstract class CategoryAxisItemComponentGenerated extends CollectionItemComponent {\r\n  /**\r\n   * The category index at which the first value axis crosses this axis (when set as an object).\r\n   *\r\n   * The category indices at which the value axes cross the category axis (when set as an array).\r\n   *\r\n   * To denote the far end of the axis, set an index greater than or equal to the number of categories.\r\n   */\r\n  @Input() public axisCrossingValue: any[];\r\n  /**\r\n   * The background color of the axis.\r\n   */\r\n  @Input() public background: string;\r\n  /**\r\n   * The base time interval for the date axis. The default base unit is determined automatically from the\r\n   * minimum difference between subsequent categories.\r\n   *\r\n   * The supported values are:\r\n   *\r\n   * - `\"fit\"`\r\n   * - `\"milliseconds\"`\r\n   * - `\"seconds\"`\r\n   * - `\"minutes\"`\r\n   * - `\"hours\"`\r\n   * - `\"days\"`\r\n   * - `\"weeks\"`\r\n   * - `\"months\"`\r\n   * - `\"years\"`\r\n   *\r\n   * Setting `baseUnit` to `\"fit\"` will set such a base unit and `categoryAxis.baseUnitStep`\r\n   * so that the total number of categories does not exceed `categoryAxis.maxDateGroups`.\r\n   *\r\n   * Series data is aggregated for the specified base unit by using the `series.aggregate` function.\r\n   */\r\n  @Input() public baseUnit: string;\r\n  /**\r\n   * The step (interval) between the categories in base units. Setting it to `\"auto\"` sets the step to such\r\n   * a value that the total number of categories does not exceed `categoryAxis.maxDateGroups`.\r\n   *\r\n   * This option is ignored if `categoryAxis.baseUnit` is set to `\"fit\"`.\r\n   */\r\n  @Input() public baseUnitStep: any;\r\n  /**\r\n   * The category names. The Chart will create a category for every item of the array.\r\n   */\r\n  @Input() public categories: any[];\r\n  /**\r\n   * The color to apply to all axis elements. Accepts a valid CSS color string, including hex and rgb.\r\n   * Can be overridden by `categoryAxis.labels.color` and `categoryAxis.line.color`.\r\n   */\r\n  @Input() public color: string;\r\n  /**\r\n   * If set to `true`, the Chart will position categories and series points on major ticks. This removes the\r\n   * empty space before and after the series.\r\n   *\r\n   * The default value is `false` except for `\"area\"` and `\"verticalArea\"`.\r\n   *\r\n   * This option is ignored if the `series.type` option is set to `\"bar\"`, `\"column\"`, `\"boxPlot\"`, `\"ohlc\"`,\r\n   * `\"candlestick\"`, or `\"waterfall\"`.\r\n   */\r\n  @Input() public justified: boolean;\r\n  /**\r\n   * The configuration of the axis lines. Also affects the major and minor ticks, but not the grid lines.\r\n   */\r\n  @Input() public line: AxisLine;\r\n  /**\r\n   * The configuration of the major grid lines. These are the lines that are an extension of the major\r\n   * ticks through the body of the Chart.\r\n   */\r\n  @Input() public majorGridLines: GridLines;\r\n  /**\r\n   * The configuration of the category axis major ticks.\r\n   */\r\n  @Input() public majorTicks: AxisTicks;\r\n  /**\r\n   * The last date displayed on the category date axis. By default, the minimum date is the same as the\r\n   * last category.\r\n   * This is often used in combination with the `categoryAxis.min` and `categoryAxis.roundToBaseUnit` options\r\n   * to set up a fixed date range.\r\n   */\r\n  @Input() public max: any;\r\n  /**\r\n   * The maximum number of groups (categories) to display when\r\n   * `categoryAxis.baseUnit` is set to `\"fit\"` or\r\n   * `categoryAxis.baseUnitStep` is set to `\"auto\"`.\r\n   */\r\n  @Input() public maxDateGroups: number;\r\n  /**\r\n   * The first date displayed on the category date axis. By default, the minimum date is the same as the\r\n   * first category.\r\n   * This is often used in combination with the `categoryAxis.min` and `categoryAxis.roundToBaseUnit` options\r\n   * to set up a fixed date range.\r\n   */\r\n  @Input() public min: any;\r\n  /**\r\n   * The configuration of the minor grid lines. These are the lines that are an extension of the minor\r\n   * ticks through the body of the Chart.\r\n   */\r\n  @Input() public minorGridLines: GridLines;\r\n  /**\r\n   * The configuration of the category axis minor ticks.\r\n   */\r\n  @Input() public minorTicks: AxisTicks;\r\n  /**\r\n   * The unique axis name. Used to associate a series with a category axis using the `series.categoryAxis`\r\n   * option.\r\n   */\r\n  @Input() public name: string;\r\n  /**\r\n   * The name of the pane that the category axis has to be rendered in.\r\n   * If not set, the axis will be rendered in the first (default) pane.\r\n   */\r\n  @Input() public pane: string;\r\n  /**\r\n   * The plot bands of the category axis.\r\n   */\r\n  @Input() public plotBands: PlotBand[];\r\n  /**\r\n   * If set to `true`, the category axis direction is reversed. By default, categories are listed from\r\n   * left to right and from bottom to top.\r\n   */\r\n  @Input() public reverse: boolean;\r\n  /**\r\n   * If set to `true`, the Chart rounds the first and last date to the nearest base unit.\r\n   *\r\n   * The `roundToBaseUnit` option will be ignored if `series.type` is set to `\"bar\"`, `\"column\"`, `\"boxPlot\"`,\r\n   * `\"ohlc\"`, `\"candlestick\"`, or `\"waterfall\"`.\r\n   */\r\n  @Input() public roundToBaseUnit: boolean;\r\n  /**\r\n   * The angle (degrees) of the first category on the axis.\r\n   *\r\n   * Angles increase clockwise and zero is to the left. Negative values are acceptable.\r\n   */\r\n  @Input() public startAngle: number;\r\n  /**\r\n   * The category axis type.\r\n   *\r\n   * The supported values are:\r\n   *\r\n   * - `\"category\"`&mdash;Discrete category axis.\r\n   * - `\"date\"`&mdash;Specialized axis for displaying chronological data.\r\n   */\r\n  @Input() public type: string;\r\n  /**\r\n   * If set to `true`, the Chart displays the category axis. By default, the category axis is visible.\r\n   */\r\n  @Input() public visible: boolean;\r\n  /**\r\n   * The week start day when `categoryAxis.baseUnit` is set to `\"weeks\"`.\r\n   *\r\n   * The supported values are:\r\n   *\r\n   * - `kendo.days.Sunday`&mdash;Equal to 0.\r\n   * - `kendo.days.Monday`&mdash;Equal to 1.\r\n   * - `kendo.days.Tuesday`&mdash;Equal to 2.\r\n   * - `kendo.days.Wednesday`&mdash;Equal to 3.\r\n   * - `kendo.days.Thursday`&mdash;Equal to 4.\r\n   * - `kendo.days.Friday`&mdash;Equal to 5.\r\n   * - `kendo.days.Saturday`&mdash;Equal to 6.\r\n   */\r\n  @Input() public weekStartDay: number;\r\n\r\n  // These options are also available as child components\r\n  /**\r\n   * The crosshair configuration options.\r\n   *\r\n   * The crosshair is displayed when the `categoryAxis.crosshair.visible` option is set to `true`.\r\n   */\r\n  @Input() public crosshair: any;\r\n  /**\r\n   * The axis labels configuration.\r\n   */\r\n  @Input() public labels: any;\r\n  /**\r\n   * The category axis notes configuration.\r\n   */\r\n  @Input() public notes: any;\r\n  /**\r\n   * The selected axis range. If set, the axis selection will be enabled.\r\n   *\r\n   * The range is index-based, starting from 0.\r\n   * Categories with indexes in the range [`select.from`, `select.to`) will be selected.\r\n   * That is, the last category in the range will not be included in the selection.\r\n   *\r\n   * If the categories are dates, the range has to be also specified with date values.\r\n   *\r\n   * Selection is only supported if the axis is horizontal.\r\n   */\r\n  @Input() public select: any;\r\n  /**\r\n   * The title configuration of the category axis.\r\n   *\r\n   * To display the title, set the `categoryAxis.title.text` option.\r\n   */\r\n  @Input() public title: any;\r\n\r\n  constructor(protected configurationService: ConfigurationService,\r\n              protected collectionService: CollectionService) {\r\n    super(configurationService, collectionService);\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/chart/category-axis-item.component.generated.ts\n **/","module.exports = require(\"../common/collection-item.component\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"../common/collection-item.component\"\n ** module id = 142\n ** module chunks = 26 55 79 118 136 154\n **/"],"sourceRoot":""}