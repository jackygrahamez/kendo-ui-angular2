(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(384);


/***/ },

/***/ 384:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var configuration_service_1 = __webpack_require__(385);
	/**
	 * @hidden
	 */
	var CollectionComponent = (function () {
	    function CollectionComponent(configKey, configurationService, collectionService) {
	        var _this = this;
	        this.configKey = configKey;
	        this.configurationService = configurationService;
	        this.collectionService = collectionService;
	        this.items = [];
	        this.subscription = collectionService.onItemChange$.subscribe(function (changes) { return _this.processChanges(changes); });
	    }
	    CollectionComponent.prototype.ngOnDestroy = function () {
	        this.subscription.unsubscribe();
	    };
	    CollectionComponent.prototype.ngAfterContentInit = function () {
	        var _this = this;
	        this.readItems();
	        this.children.changes.subscribe(function () { return _this.readItems(); });
	    };
	    CollectionComponent.prototype.processChanges = function (changes) {
	        if (!this.children) {
	            return;
	        }
	        var index = this.children.toArray().indexOf(changes.sender);
	        if (index < 0) {
	            return;
	        }
	        this.items[index] = changes.options;
	        this.change();
	    };
	    CollectionComponent.prototype.readItems = function () {
	        this.items = this.children.map(function (s) { return s.options; });
	        this.change();
	    };
	    CollectionComponent.prototype.change = function () {
	        this.configurationService.notify(new configuration_service_1.Change(this.configKey, this.items));
	    };
	    return CollectionComponent;
	}());
	exports.CollectionComponent = CollectionComponent;


/***/ },

/***/ 385:
/***/ function(module, exports) {

	module.exports = require("./configuration.service");

/***/ }

/******/ })));
//# sourceMappingURL=collection.component.js.map