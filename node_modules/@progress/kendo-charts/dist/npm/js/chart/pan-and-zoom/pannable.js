module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(198);


/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = require("../../common/constants");

/***/ },

/***/ 50:
/***/ function(module, exports) {

	module.exports = require("../../common/deep-extend");

/***/ },

/***/ 197:
/***/ function(module, exports) {

	module.exports = require("./to-chart-axis-ranges");

/***/ },

/***/ 198:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _acceptKey = __webpack_require__(199);

	var _acceptKey2 = _interopRequireDefault(_acceptKey);

	var _toChartAxisRanges = __webpack_require__(197);

	var _toChartAxisRanges2 = _interopRequireDefault(_toChartAxisRanges);

	var _constants = __webpack_require__(5);

	var _deepExtend = __webpack_require__(50);

	var _deepExtend2 = _interopRequireDefault(_deepExtend);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Pannable = function () {
	    function Pannable(plotArea, options) {
	        _classCallCheck(this, Pannable);

	        this.plotArea = plotArea;
	        this.options = (0, _deepExtend2.default)({}, this.options, options);
	    }

	    _createClass(Pannable, [{
	        key: 'start',
	        value: function start(e) {
	            this._active = (0, _acceptKey2.default)(e, this.options.key);
	            return this._active;
	        }
	    }, {
	        key: 'move',
	        value: function move(e) {
	            if (this._active) {
	                var axisRanges = this.axisRanges = this._panAxes(e, _constants.X).concat(this._panAxes(e, _constants.Y));
	                if (axisRanges.length) {
	                    this.axisRanges = axisRanges;
	                    return (0, _toChartAxisRanges2.default)(axisRanges);
	                }
	            }
	        }
	    }, {
	        key: 'end',
	        value: function end() {
	            var active = this._active;
	            this._active = false;

	            return active;
	        }
	    }, {
	        key: 'pan',
	        value: function pan() {
	            var plotArea = this.plotArea;
	            var axisRanges = this.axisRanges;

	            if (axisRanges.length) {
	                for (var idx = 0; idx < axisRanges.length; idx++) {
	                    var range = axisRanges[idx];
	                    plotArea.updateAxisOptions(range.axis, range.range);
	                }
	                plotArea.redraw(plotArea.panes);
	            }
	        }
	    }, {
	        key: 'destroy',
	        value: function destroy() {
	            delete this.plotArea;
	        }
	    }, {
	        key: '_panAxes',
	        value: function _panAxes(e, position) {
	            var plotArea = this.plotArea;
	            var delta = -e[position].delta;
	            var lock = (this.options.lock || "").toLowerCase();
	            var updatedAxes = [];

	            if (delta !== 0 && (lock || "").toLowerCase() !== position) {
	                var axes = plotArea.axes;
	                for (var idx = 0; idx < axes.length; idx++) {
	                    var axis = axes[idx];

	                    if (position === _constants.X && !axis.options.vertical || position === _constants.Y && axis.options.vertical) {
	                        var range = axis.pan(delta);

	                        if (range) {
	                            range.limitRange = true;
	                            updatedAxes.push({
	                                axis: axis,
	                                range: range
	                            });
	                        }
	                    }
	                }
	            }

	            return updatedAxes;
	        }
	    }]);

	    return Pannable;
	}();

	Pannable.prototype.options = {
	    key: "none",
	    lock: "none"
	};

	exports.default = Pannable;

/***/ },

/***/ 199:
/***/ function(module, exports) {

	module.exports = require("./accept-key");

/***/ }

/******/ });