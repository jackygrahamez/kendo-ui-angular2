{"version":3,"sources":["webpack:///webpack/bootstrap ad3edd743ed361bd0e56?6e3f*********************************************************************************************************************","webpack:///external \"@angular/core\"?73d1******************************************************************************************************","webpack:///external \"../common/collection-item.component\"?2549**","webpack:///./src/chart/value-axis-item.component.generated.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACtCA,2C;;;;;;;ACAA,iE;;;;;;;;;;;;;;;;;;;;;;ACAA,kCAAsB,EAAe,CAAC;AAEtC,uDAAwC,GAAqC,CAAC;AAI9E;;IAEG;AACH;KAA8D,mDAAuB;KAwHnF,yCAAsB,oBAA0C,EAC1C,iBAAoC;SACxD,kBAAM,oBAAoB,EAAE,iBAAiB,CAAC,CAAC;SAF3B,yBAAoB,GAApB,oBAAoB,CAAsB;SAC1C,sBAAiB,GAAjB,iBAAiB,CAAmB;KAE1D,CAAC;KAnHD;SAAC,YAAK,EAAE;;+EAAA;KAIR;SAAC,YAAK,EAAE;;wEAAA;KAIR;SAAC,YAAK,EAAE;;mEAAA;KAIR;SAAC,YAAK,EAAE;;kEAAA;KAKR;SAAC,YAAK,EAAE;;4EAAA;KAIR;SAAC,YAAK,EAAE;;wEAAA;KAMR;SAAC,YAAK,EAAE;;uEAAA;KAIR;SAAC,YAAK,EAAE;;iEAAA;KAIR;SAAC,YAAK,EAAE;;iEAAA;KAKR;SAAC,YAAK,EAAE;;4EAAA;KAIR;SAAC,YAAK,EAAE;;wEAAA;KAMR;SAAC,YAAK,EAAE;;uEAAA;KAIR;SAAC,YAAK,EAAE;;kEAAA;KAKR;SAAC,YAAK,EAAE;;yEAAA;KAKR;SAAC,YAAK,EAAE;;kEAAA;KAIR;SAAC,YAAK,EAAE;;uEAAA;KAOR;SAAC,YAAK,EAAE;;qEAAA;KASR;SAAC,YAAK,EAAE;;kEAAA;KAIR;SAAC,YAAK,EAAE;;qEAAA;KAQR;SAAC,YAAK,EAAE;;uEAAA;KAIR;SAAC,YAAK,EAAE;;oEAAA;KAIR;SAAC,YAAK,EAAE;;mEAAA;KAMR;SAAC,YAAK,EAAE;;mEAAA;KAMV,sCAAC;AAAD,EAAC,CA5H6D,mDAAuB,GA4HpF;AA5HqB,wCAA+B,kCA4HpD","file":"src/chart/value-axis-item.component.generated.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ad3edd743ed361bd0e56\n **/","module.exports = require(\"@angular/core\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@angular/core\"\n ** module id = 13\n ** module chunksn **/","module.exports = require(\"../common/collection-item.component\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"../common/collection-item.component\"\n ** module id = 142\n ** module chunks = 26 55 79 118 136 154\n **/","import { Input } from '@angular/core';\r\nimport { CollectionService } from '../common/collection.service';\r\nimport { CollectionItemComponent } from '../common/collection-item.component';\r\nimport { ConfigurationService } from '../common/configuration.service';\r\nimport { AxisLine, AxisTicks, GridLines, PlotBand } from '../common/property-types';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport abstract class ValueAxisItemComponentGenerated extends CollectionItemComponent {\r\n  /**\r\n   * (Only for objects) The value at which the category axis crosses this axis.\r\n   *\r\n   * (Only for arrays) The value indices at which the category axes cross the value axis.\r\n   *\r\n   * (Only for dates) The date at which the category axis crosses this axis.\r\n   */\r\n  @Input() public axisCrossingValue: any[];\r\n  /**\r\n   * The background color of the axis.\r\n   */\r\n  @Input() public background: string;\r\n  /**\r\n   * The color of the value axis. Accepts a valid CSS color string, including hex and rgb.\r\n   */\r\n  @Input() public color: string;\r\n  /**\r\n   * The configuration of the axis lines. Also affects the major and minor ticks, but not the grid lines.\r\n   */\r\n  @Input() public line: AxisLine;\r\n  /**\r\n   * The configuration of the major grid lines. These are the lines that are an extension of the major\r\n   * ticks through the body of the Chart.\r\n   */\r\n  @Input() public majorGridLines: GridLines;\r\n  /**\r\n   * The configuration of the value axis major ticks.\r\n   */\r\n  @Input() public majorTicks: AxisTicks;\r\n  /**\r\n   * The interval between major divisions.\r\n   * If the `valueAxis.type` is set to `\"log\"`, the `majorUnit` value is used for the base of the\r\n   * logarithm.\r\n   */\r\n  @Input() public majorUnit: number;\r\n  /**\r\n   * The maximum value of the axis.\r\n   */\r\n  @Input() public max: any;\r\n  /**\r\n   * The minimum value of the axis.\r\n   */\r\n  @Input() public min: any;\r\n  /**\r\n   * The configuration of the minor grid lines. These are the lines that are an extension of the minor\r\n   * ticks through the body of the Chart.\r\n   */\r\n  @Input() public minorGridLines: GridLines;\r\n  /**\r\n   * The configuration of the value axis minor ticks.\r\n   */\r\n  @Input() public minorTicks: AxisTicks;\r\n  /**\r\n   * The interval between minor divisions. It defaults to 1/5 of the `valueAxis.majorUnit`.\r\n   * If the `valueAxis.type` is set to `\"log\"`, the `minorUnit` value represents the number of divisions\r\n   * between two major units and defaults to the major unit minus one.\r\n   */\r\n  @Input() public minorUnit: number;\r\n  /**\r\n   * The unique axis name. Used to associate a series with a value axis using the `series.axis` option.\r\n   */\r\n  @Input() public name: string;\r\n  /**\r\n   * If set to `true`, the Chart prevents the automatic axis range from snapping to 0.\r\n   * Setting it to `false` forces the automatic axis range to snap to 0.\r\n   */\r\n  @Input() public narrowRange: boolean;\r\n  /**\r\n   * The name of the pane that the value axis has to be rendered in.\r\n   * If not set, the axis is rendered in the first (default) pane.\r\n   */\r\n  @Input() public pane: string;\r\n  /**\r\n   * The plot bands of the value axis.\r\n   */\r\n  @Input() public plotBands: PlotBand[];\r\n  /**\r\n   * If set to `true`, the value axis direction is reversed. By default, the categories are listed from left\r\n   * to right and from bottom to top.\r\n   *\r\n   * > A reverse value axis is not supported for Radar and Polar Charts.\r\n   */\r\n  @Input() public reverse: boolean;\r\n  /**\r\n   * The axis type.\r\n   *\r\n   * The supported values are:\r\n   *\r\n   * - `\"numeric\"`&mdash;Numeric axis.\r\n   * - `\"log\"`&mdash;Logarithmic axis.\r\n   */\r\n  @Input() public type: string;\r\n  /**\r\n   * If set to `true`, the Chart displays the value axis. By default, the value axis is visible.\r\n   */\r\n  @Input() public visible: boolean;\r\n\r\n  // These options are also available as child components\r\n  /**\r\n   * The crosshair configuration options.\r\n   *\r\n   * The crosshair is displayed when the `valueAxis.crosshair.visible` option is set to `true`.\r\n   */\r\n  @Input() public crosshair: any;\r\n  /**\r\n   * The axis labels configuration.\r\n   */\r\n  @Input() public labels: any;\r\n  /**\r\n   * The value axis notes configuration.\r\n   */\r\n  @Input() public notes: any;\r\n  /**\r\n   * The title configuration of the value axis.\r\n   *\r\n   * To display the title, set the `valueAxis.title.text` option.\r\n   */\r\n  @Input() public title: any;\r\n\r\n  constructor(protected configurationService: ConfigurationService,\r\n              protected collectionService: CollectionService) {\r\n    super(configurationService, collectionService);\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/chart/value-axis-item.component.generated.ts\n **/"],"sourceRoot":""}