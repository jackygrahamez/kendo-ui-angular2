module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(196);


/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = require("../../common/constants");

/***/ },

/***/ 50:
/***/ function(module, exports) {

	module.exports = require("../../common/deep-extend");

/***/ },

/***/ 196:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _toChartAxisRanges = __webpack_require__(197);

	var _toChartAxisRanges2 = _interopRequireDefault(_toChartAxisRanges);

	var _constants = __webpack_require__(5);

	var _deepExtend = __webpack_require__(50);

	var _deepExtend2 = _interopRequireDefault(_deepExtend);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var MousewheelZoom = function () {
	    function MousewheelZoom(chart, options) {
	        _classCallCheck(this, MousewheelZoom);

	        this.chart = chart;
	        this.options = (0, _deepExtend2.default)({}, this.options, options);
	    }

	    _createClass(MousewheelZoom, [{
	        key: 'updateRanges',
	        value: function updateRanges(delta) {
	            var lock = (this.options.lock || "").toLowerCase();
	            var axisRanges = [];
	            var axes = this.chart._plotArea.axes;

	            for (var idx = 0; idx < axes.length; idx++) {
	                var axis = axes[idx];
	                var vertical = axis.options.vertical;

	                if (!(lock === _constants.X && !vertical) && !(lock === _constants.Y && vertical)) {
	                    var range = axis.zoomRange(-delta);

	                    if (range) {
	                        axisRanges.push({
	                            axis: axis,
	                            range: range
	                        });
	                    }
	                }
	            }

	            this.axisRanges = axisRanges;
	            return (0, _toChartAxisRanges2.default)(axisRanges);
	        }
	    }, {
	        key: 'zoom',
	        value: function zoom() {
	            var axisRanges = this.axisRanges;
	            if (axisRanges && axisRanges.length) {
	                var plotArea = this.chart._plotArea;
	                for (var idx = 0; idx < axisRanges.length; idx++) {
	                    var axisRange = axisRanges[idx];
	                    plotArea.updateAxisOptions(axisRange.axis, axisRange.range);
	                }
	                plotArea.redraw(plotArea.panes);
	            }
	        }
	    }, {
	        key: 'destroy',
	        value: function destroy() {
	            delete this.chart;
	        }
	    }]);

	    return MousewheelZoom;
	}();

	exports.default = MousewheelZoom;

/***/ },

/***/ 197:
/***/ function(module, exports) {

	module.exports = require("./to-chart-axis-ranges");

/***/ }

/******/ });