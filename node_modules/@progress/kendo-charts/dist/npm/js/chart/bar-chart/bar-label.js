module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(76);


/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = require("../../common/constants");

/***/ },

/***/ 24:
/***/ function(module, exports) {

	module.exports = require("../constants");

/***/ },

/***/ 25:
/***/ function(module, exports) {

	module.exports = require("../../common/set-default-options");

/***/ },

/***/ 55:
/***/ function(module, exports) {

	module.exports = require("../../core");

/***/ },

/***/ 76:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _core = __webpack_require__(55);

	var _constants = __webpack_require__(24);

	var _constants2 = __webpack_require__(5);

	var _getSpacing = __webpack_require__(77);

	var _getSpacing2 = _interopRequireDefault(_getSpacing);

	var _setDefaultOptions = __webpack_require__(25);

	var _setDefaultOptions2 = _interopRequireDefault(_setDefaultOptions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var BarLabel = function (_ChartElement) {
	    _inherits(BarLabel, _ChartElement);

	    function BarLabel(content, options) {
	        _classCallCheck(this, BarLabel);

	        var _this = _possibleConstructorReturn(this, (BarLabel.__proto__ || Object.getPrototypeOf(BarLabel)).call(this, options));

	        _this.textBox = new _core.TextBox(content, _this.options);
	        _this.append(_this.textBox);
	        return _this;
	    }

	    _createClass(BarLabel, [{
	        key: 'createVisual',
	        value: function createVisual() {
	            this.textBox.options.noclip = this.options.noclip;
	        }
	    }, {
	        key: 'reflow',
	        value: function reflow(targetBox) {
	            var options = this.options;
	            var vertical = options.vertical;
	            var aboveAxis = options.aboveAxis;

	            var text = this.children[0];
	            var textOptions = text.options;
	            var box = text.box;
	            var padding = text.options.padding;
	            var labelBox = targetBox;

	            textOptions.align = vertical ? _constants2.CENTER : _constants2.LEFT;
	            textOptions.vAlign = vertical ? _constants2.TOP : _constants2.CENTER;

	            if (options.position === _constants.INSIDE_END) {
	                if (vertical) {
	                    textOptions.vAlign = _constants2.TOP;

	                    if (!aboveAxis && box.height() < targetBox.height()) {
	                        textOptions.vAlign = _constants2.BOTTOM;
	                    }
	                } else {
	                    textOptions.align = aboveAxis ? _constants2.RIGHT : _constants2.LEFT;
	                }
	            } else if (options.position === _constants2.CENTER) {
	                textOptions.vAlign = _constants2.CENTER;
	                textOptions.align = _constants2.CENTER;
	            } else if (options.position === _constants.INSIDE_BASE) {
	                if (vertical) {
	                    textOptions.vAlign = aboveAxis ? _constants2.BOTTOM : _constants2.TOP;
	                } else {
	                    textOptions.align = aboveAxis ? _constants2.LEFT : _constants2.RIGHT;
	                }
	            } else if (options.position === _constants.OUTSIDE_END) {
	                if (vertical) {
	                    if (aboveAxis) {
	                        labelBox = new _core.Box(targetBox.x1, targetBox.y1 - box.height(), targetBox.x2, targetBox.y1);
	                    } else {
	                        labelBox = new _core.Box(targetBox.x1, targetBox.y2, targetBox.x2, targetBox.y2 + box.height());
	                    }
	                } else {
	                    textOptions.align = _constants2.CENTER;
	                    if (aboveAxis) {
	                        labelBox = new _core.Box(targetBox.x2, targetBox.y1, targetBox.x2 + box.width(), targetBox.y2);
	                    } else {
	                        labelBox = new _core.Box(targetBox.x1 - box.width(), targetBox.y1, targetBox.x1, targetBox.y2);
	                    }
	                }
	            }

	            if (!options.rotation) {
	                if (vertical) {
	                    padding.left = padding.right = (labelBox.width() - text.contentBox.width()) / 2;
	                } else {
	                    padding.top = padding.bottom = (labelBox.height() - text.contentBox.height()) / 2;
	                }
	            }

	            text.reflow(labelBox);
	        }
	    }, {
	        key: 'alignToClipBox',
	        value: function alignToClipBox(clipBox) {
	            var vertical = this.options.vertical;
	            var field = vertical ? _constants2.Y : _constants2.X;
	            var start = field + "1";
	            var end = field + "2";
	            var text = this.children[0];
	            var parentBox = this.parent.box;

	            if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {
	                var targetBox = text.paddingBox.clone();
	                targetBox[start] = Math.max(parentBox[start], clipBox[start]);
	                targetBox[end] = Math.min(parentBox[end], clipBox[end]);

	                this.reflow(targetBox);
	            }
	        }
	    }]);

	    return BarLabel;
	}(_core.ChartElement);

	(0, _setDefaultOptions2.default)(BarLabel.prototype, {
	    position: _constants.OUTSIDE_END,
	    margin: (0, _getSpacing2.default)(3),
	    padding: (0, _getSpacing2.default)(4),
	    color: _constants2.BLACK,
	    background: "",
	    border: {
	        width: 1,
	        color: ""
	    },
	    aboveAxis: true,
	    vertical: false,
	    animation: {
	        type: _constants.FADEIN,
	        delay: _constants.INITIAL_ANIMATION_DURATION
	    },
	    zIndex: 2
	});

	exports.default = BarLabel;

/***/ },

/***/ 77:
/***/ function(module, exports) {

	module.exports = require("../../common/get-spacing");

/***/ }

/******/ });