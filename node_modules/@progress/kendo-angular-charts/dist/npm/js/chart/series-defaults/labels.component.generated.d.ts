import { ConfigurationService } from '../../common/configuration.service';
import { SettingsComponent } from '../../common/settings.component';
import { Border, Margin, Padding, SeriesLabelsVisualArgs } from '../../common/property-types';
/**
 * @hidden
 */
export declare abstract class SeriesDefaultsLabelsComponentGenerated extends SettingsComponent {
    configurationService: ConfigurationService;
    /**
     * The background color of the labels. Accepts a valid CSS color string, including hex and rgb.
     */
    background: string;
    /**
     * The border of the labels.
     */
    border: Border;
    /**
     * The text color of the labels. Accepts a valid CSS color string, including hex and rgb.
     */
    color: string;
    /**
     * The template which renders the Chart series label.
     *
     * The fields which can be used in the template are:
     *
     * - `category`&mdash;The category name. Available for the Area, Bar, Column, Bubble, Donut, Funnel, Line, and Pie
     * series.
     * - `dataItem`&mdash;The original data item used to construct the point. If binding to an array, it will be `null`.
     * - `percentage`&mdash;The point value represented as a percentage value. Available for the Donut, Funnel, and
     * Pie series.
     * - `series`&mdash;The data series.
     * - `value`&mdash;The point value. Can be a number or object containing each bound field.
     * - `runningTotal`&mdash;The sum of point values since the last `"runningTotal"` summary point. Available for
     * the Waterfall series.
     * - `total`&mdash;The sum of all previous series values. Available for the Waterfall series.
     *
     * The text can be split into multiple lines by using line feed characters (`"\n"`).
     */
    content: (e: any) => string;
    /**
     * The font style of the labels.
     */
    font: string;
    /**
     * The format of the labels. Uses `kendo.format`.
     */
    format: string;
    /**
     * The margin of the labels. A numeric value sets all margins.
     */
    margin: Margin | number;
    /**
     * The padding of the labels. A numeric value sets all margins.
     */
    padding: Padding | number;
    /**
     * If set to `true`, the Chart displays the series labels. By default, the Chart series labels are not
     * displayed.
     */
    visible: boolean;
    /**
     * A function that can be used to create a custom visual for the labels.
     *
     * The available argument fields are:
     *
     * - `text`&mdash;The label text.
     * - `rect`&mdash;The `kendo.geometry.Rect` that defines where the visual has to be rendered.
     * - `sender`&mdash;The Chart instance (might be `undefined`).
     * - `options`&mdash;The label options.
     * - `createVisual`&mdash;A function that can be used to get the default visual.
     */
    visual: (e: SeriesLabelsVisualArgs) => void;
    /**
     * The Chart series from label configuration.
     *
     * The Chart displays the series labels when either the `seriesDefaults.labels.visible` or
     * the `seriesDefaults.labels.from.visible` option is set to `true`.
     */
    from: any;
    /**
     * The Chart series to label configuration.
     *
     * The Chart displays the series labels when either of the `seriesDefaults.labels.visible` or
     * the `seriesDefaults.labels.to.visible` option is set to `true`.
     */
    to: any;
    constructor(configurationService: ConfigurationService);
}
