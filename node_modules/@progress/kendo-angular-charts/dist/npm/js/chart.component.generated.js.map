{"version":3,"sources":["webpack:///webpack/bootstrap ad3edd743ed361bd0e56?6e3f************","webpack:///external \"@angular/core\"?73d1*","webpack:///./src/chart.component.generated.ts","webpack:///external \"./common/copy-changes\""],"names":[],"mappings":"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","file":"src/chart.component.generated.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ad3edd743ed361bd0e56\n **/","module.exports = require(\"@angular/core\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@angular/core\"\n ** module id = 13\n ** module chunksn **/","import { Input, OnChanges, SimpleChange } from '@angular/core';\r\nimport { EventEmitter, Output } from '@angular/core';\r\nimport { ConfigurationService } from './common/configuration.service';\r\nimport { copyChanges } from './common/copy-changes';\r\nimport { DragAction } from './common/property-types';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport abstract class ChartComponentGenerated implements OnChanges {\r\n  /**\r\n   * Specifies if it is possible to pan the Chart.\r\n   */\r\n  @Input() public pannable: DragAction;\r\n\r\n  /**\r\n   * Sets the preferred rendering engine.\r\n   * If it is not supported by the browser, the Chart will switch to the first available mode.\r\n   *\r\n   * The supported values are:\r\n   *\r\n   * - `\"svg\"`&mdash;If available, renders the widget as an inline SVG document.\r\n   * - `\"vml\"`&mdash;If available, renders the widget as a VML.\r\n   * - `\"canvas\"`&mdash;If available, renders the widget as a Canvas element.\r\n   */\r\n  @Input() public renderAs: string;\r\n\r\n  /**\r\n   * The default colors for the Chart series. When all colors are used, new colors are pulled from the\r\n   * start again.\r\n   */\r\n  @Input() public seriesColors: string[];\r\n\r\n  /**\r\n   * The Chart title configuration options or text.\r\n   */\r\n  @Input() public title: string | any;\r\n\r\n  /**\r\n   * If set to `true`, the Chart will play animations when displaying the series. By default, animations are\r\n   * enabled.\r\n   */\r\n  @Input() public transitions: boolean;\r\n\r\n  /**\r\n   * Specifies if the Chart can be zoomed.\r\n   */\r\n  @Input() public zoomable: boolean | any;\r\n\r\n  // These options are also available as child components\r\n\r\n  /**\r\n   * The default options for all Chart axes. Accepts the options supported by `categoryAxis`, `valueAxis`,\r\n   * `xAxis`, and `yAxis`.\r\n   */\r\n  @Input() public axisDefaults: any;\r\n\r\n  /**\r\n   * The category axis configuration options.\r\n   */\r\n  @Input() public categoryAxis: any;\r\n\r\n  /**\r\n   * The Chart area configuration options. Represents the entire visible area of the Chart.\r\n   */\r\n  @Input() public chartArea: any;\r\n\r\n  /**\r\n   * The Chart legend configuration options.\r\n   */\r\n  @Input() public legend: any;\r\n\r\n  /**\r\n   * The Chart panes configuration.\r\n   *\r\n   * Panes are used to split the Chart in two or more parts. The panes are ordered from top to bottom.\r\n   *\r\n   * Each axis can be associated with a pane by setting its pane option to the name of the desired pane.\r\n   * Axis that do not have a specified pane are placed in the top (default) pane.\r\n   *\r\n   * Series are moved to the desired pane by associating them with an axis.\r\n   */\r\n  @Input() public panes: any;\r\n\r\n  /**\r\n   * The plot area configuration options. The plot area is the area which displays the series.\r\n   */\r\n  @Input() public plotArea: any;\r\n\r\n  /**\r\n   * The configuration of the Chart series.\r\n   *\r\n   * The series type is determined by the value of the type field.\r\n   * If a type value is missing, the type is assumed to be the one specified in `seriesDefaults`.\r\n   *\r\n   * Some options accept functions as an argument. They will be evaluated for each point (supplied as\r\n   * parameter). If no value is returned, the `theme` or `seriesDefaults` value are used.\r\n   */\r\n  @Input() public series: any;\r\n\r\n  /**\r\n   * The default options for all series.\r\n   */\r\n  @Input() public seriesDefaults: any;\r\n\r\n  /**\r\n   * The configuration options of the chart series tooltips.\r\n   *\r\n   * The chart series tooltip is displayed when the `tooltip.visible` option is set to `true`.\r\n   */\r\n  @Input() public tooltip: any;\r\n\r\n  /**\r\n   * The value axis configuration options.\r\n   */\r\n  @Input() public valueAxis: any;\r\n\r\n  /**\r\n   * The x-axis configuration options of the Scatter Chart. Supports all `valueAxis` options.\r\n   */\r\n  @Input() public xAxis: any;\r\n\r\n  /**\r\n   * The y-axis configuration options of the Scatter Chart. Supports all `valueAxis` options.\r\n   */\r\n  @Input() public yAxis: any;\r\n\r\n  /**\r\n   * Fired when the user clicks an axis label.\r\n   *\r\n   * The event handler function context (available via the `this` keyword) will be set to the widget\r\n   * instance.\r\n   */\r\n  @Output()\r\n  public axisLabelClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired as long as the user is dragging the Chart using the mouse or swipe gestures.\r\n   *\r\n   * The event handler function context (available via the `this` keyword) will be set to the widget\r\n   * instance.\r\n   */\r\n  @Output()\r\n  public drag: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired when the user stops dragging the Chart.\r\n   *\r\n   * The event handler function context (available via the this keyword) will be set to the widget\r\n   * instance.\r\n   */\r\n  @Output()\r\n  public dragEnd: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired when the user starts dragging the Chart.\r\n   *\r\n   * The event handler function context (available via the `this` keyword) will be set to the widget\r\n   * instance.\r\n   */\r\n  @Output()\r\n  public dragStart: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fires when a legend item is hovered.\r\n   */\r\n  @Output()\r\n  public legendItemHover: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired when the user clicks one of the notes.\r\n   *\r\n   * The event handler function context (available via the `this` keyword) will be set to the widget\r\n   * instance.\r\n   */\r\n  @Output()\r\n  public noteClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired when the user hovers one of the notes.\r\n   *\r\n   * The event handler function context (available via the `this` keyword) will be set to the widget\r\n   * instance.\r\n   */\r\n  @Output()\r\n  public noteHover: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired when the user clicks the plot area.\r\n   *\r\n   * The click event will be triggered by the `tap` and `contextmenu` events. The `e.originalEvent.type` field can\r\n   * be inspected to distinguish between the original events.\r\n   */\r\n  @Output()\r\n  public plotAreaClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired when the user hovers the plot area.\r\n   */\r\n  @Output()\r\n  public plotAreaHover: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired when the Chart is ready to render on screen.\r\n   *\r\n   * For example, it is possible to use it to remove loading indicators.\r\n   * Changes to options will be ignored.\r\n   *\r\n   * The event handler function context (available via the `this` keyword) will be set to the widget\r\n   * instance.\r\n   */\r\n  @Output()\r\n  public render: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired when the user modifies the selection.\r\n   *\r\n   * The range units are:\r\n   *\r\n   * - Generic axis&mdash;Category index (0-based).\r\n   * - Date axis&mdash;Date instance.\r\n   *\r\n   * The event handler function context (available via the `this` keyword) will be set to the widget\r\n   * instance.\r\n   */\r\n  @Output()\r\n  public select: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired when the user completes modifying the selection.\r\n   *\r\n   * The range units are:\r\n   *\r\n   * - Generic axis&mdash;Category index (0-based).\r\n   * - Date axis&mdash;Date instance.\r\n   *\r\n   * The event handler function context (available via the this keyword) will be set to the widget\r\n   * instance.\r\n   */\r\n  @Output()\r\n  public selectEnd: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired when the user starts modifying the axis selection.\r\n   *\r\n   * The range units are:\r\n   *\r\n   * - Generic axis&mdash;Category index (0-based).\r\n   * - Date axis&mdash;Date instance.\r\n   *\r\n   * The event handler function context (available via the `this` keyword) will be set to the widget\r\n   * instance.\r\n   */\r\n  @Output()\r\n  public selectStart: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired when the user clicks the Chart series.\r\n   *\r\n   * The click event will be triggered by the `tap` and `contextmenu` events. To distinguish between the original events,\r\n   * inspect the `e.originalEvent.type` field.\r\n   */\r\n  @Output()\r\n  public seriesClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired when the user hovers the Chart series.\r\n   *\r\n   * The event handler function context (available via the `this` keyword) will be set to the widget\r\n   * instance.\r\n   */\r\n  @Output()\r\n  public seriesHover: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired as long as the user is zooming the Chart using the mousewheel operation.\r\n   *\r\n   * The event handler function context (available via the `this` keyword) will be set to the widget\r\n   * instance.\r\n   */\r\n  @Output()\r\n  public zoom: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired when the user stops zooming the Chart.\r\n   *\r\n   * The event handler function context (available via the `this` keyword) will be set to the widget\r\n   * instance.\r\n   */\r\n  @Output()\r\n  public zoomEnd: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Fired when the user uses the mousewheel to zoom the Chart.\r\n   *\r\n   * The event handler function context (available via the `this` keyword) will be set to the widget\r\n   * instance.\r\n   */\r\n  @Output()\r\n  public zoomStart: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  protected instance: any;\r\n  private handlers: any = {};\r\n\r\n  constructor(public configurationService: ConfigurationService) {\r\n  }\r\n\r\n  public ngOnChanges(changes: {[propertyName: string]: SimpleChange}): void {\r\n    const store = this.configurationService.store;\r\n    copyChanges(changes, store);\r\n\r\n    this.configurationService.push(store);\r\n  }\r\n\r\n  protected bindEvents(): void {\r\n    this.bindHandler('axisLabelClick', (e) => this.axisLabelClick.emit(e));\r\n    this.bindHandler('drag', (e) => this.drag.emit(e));\r\n    this.bindHandler('dragEnd', (e) => this.dragEnd.emit(e));\r\n    this.bindHandler('dragStart', (e) => this.dragStart.emit(e));\r\n    this.bindHandler('legendItemHover', (e) => this.legendItemHover.emit(e));\r\n    this.bindHandler('noteClick', (e) => this.noteClick.emit(e));\r\n    this.bindHandler('noteHover', (e) => this.noteHover.emit(e));\r\n    this.bindHandler('plotAreaClick', (e) => this.plotAreaClick.emit(e));\r\n    this.bindHandler('plotAreaHover', (e) => this.plotAreaHover.emit(e));\r\n    this.bindHandler('render', (e) => this.render.emit(e));\r\n    this.bindHandler('select', (e) => this.select.emit(e));\r\n    this.bindHandler('selectEnd', (e) => this.selectEnd.emit(e));\r\n    this.bindHandler('selectStart', (e) => this.selectStart.emit(e));\r\n    this.bindHandler('seriesClick', (e) => this.seriesClick.emit(e));\r\n    this.bindHandler('seriesHover', (e) => this.seriesHover.emit(e));\r\n    this.bindHandler('zoom', (e) => this.zoom.emit(e));\r\n    this.bindHandler('zoomEnd', (e) => this.zoomEnd.emit(e));\r\n    this.bindHandler('zoomStart', (e) => this.zoomStart.emit(e));\r\n  }\r\n\r\n  protected unbindEvents(): void {\r\n    this.unbindHandler('axisLabelClick');\r\n    this.unbindHandler('drag');\r\n    this.unbindHandler('dragEnd');\r\n    this.unbindHandler('dragStart');\r\n    this.unbindHandler('legendItemHover');\r\n    this.unbindHandler('noteClick');\r\n    this.unbindHandler('noteHover');\r\n    this.unbindHandler('plotAreaClick');\r\n    this.unbindHandler('plotAreaHover');\r\n    this.unbindHandler('render');\r\n    this.unbindHandler('select');\r\n    this.unbindHandler('selectEnd');\r\n    this.unbindHandler('selectStart');\r\n    this.unbindHandler('seriesClick');\r\n    this.unbindHandler('seriesHover');\r\n    this.unbindHandler('zoom');\r\n    this.unbindHandler('zoomEnd');\r\n    this.unbindHandler('zoomStart');\r\n  }\r\n\r\n  private bindHandler(name: string, handler: any): void {\r\n    if (this[name].observers.length > 0) {\r\n      this.handlers[name] = handler;\r\n      this.instance.bind(name, handler);\r\n    }\r\n  }\r\n\r\n  private unbindHandler(name: string): void {\r\n      let handler = this.handlers[name];\r\n      if (handler) {\r\n        this.instance.unbind(name, handler);\r\n        this.handlers[name] = undefined;\r\n      }\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/chart.component.generated.ts\n **/","module.exports = require(\"./common/copy-changes\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"./common/copy-changes\"\n ** module id = 34\n ** module chunks = 12\n **/"],"sourceRoot":""}