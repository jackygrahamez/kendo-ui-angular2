module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(515);


/***/ },

/***/ 23:
/***/ function(module, exports) {

	module.exports = require("@progress/kendo-drawing");

/***/ },

/***/ 60:
/***/ function(module, exports) {

	module.exports = require("../common/constants");

/***/ },

/***/ 111:
/***/ function(module, exports) {

	module.exports = require("../common/set-default-options");

/***/ },

/***/ 112:
/***/ function(module, exports) {

	module.exports = require("../common/deep-extend");

/***/ },

/***/ 461:
/***/ function(module, exports) {

	module.exports = require("./box");

/***/ },

/***/ 467:
/***/ function(module, exports) {

	module.exports = require("../common/get-spacing");

/***/ },

/***/ 468:
/***/ function(module, exports) {

	module.exports = require("../common/in-array");

/***/ },

/***/ 473:
/***/ function(module, exports) {

	module.exports = require("./axis");

/***/ },

/***/ 475:
/***/ function(module, exports) {

	module.exports = require("../common/limit-value");

/***/ },

/***/ 492:
/***/ function(module, exports) {

	module.exports = require("./numeric-axis");

/***/ },

/***/ 515:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _kendoDrawing = __webpack_require__(23);

	var _gridLinesMixin = __webpack_require__(516);

	var _gridLinesMixin2 = _interopRequireDefault(_gridLinesMixin);

	var _radarCategoryAxis = __webpack_require__(517);

	var _radarCategoryAxis2 = _interopRequireDefault(_radarCategoryAxis);

	var _numericAxis = __webpack_require__(492);

	var _numericAxis2 = _interopRequireDefault(_numericAxis);

	var _axis = __webpack_require__(473);

	var _axis2 = _interopRequireDefault(_axis);

	var _ring = __webpack_require__(518);

	var _ring2 = _interopRequireDefault(_ring);

	var _box = __webpack_require__(461);

	var _box2 = _interopRequireDefault(_box);

	var _constants = __webpack_require__(60);

	var _setDefaultOptions = __webpack_require__(111);

	var _setDefaultOptions2 = _interopRequireDefault(_setDefaultOptions);

	var _deepExtend = __webpack_require__(112);

	var _deepExtend2 = _interopRequireDefault(_deepExtend);

	var _limitValue = __webpack_require__(475);

	var _limitValue2 = _interopRequireDefault(_limitValue);

	var _inArray = __webpack_require__(468);

	var _inArray2 = _interopRequireDefault(_inArray);

	var _getSpacing = __webpack_require__(467);

	var _getSpacing2 = _interopRequireDefault(_getSpacing);

	var _deg = __webpack_require__(519);

	var _deg2 = _interopRequireDefault(_deg);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PolarAxis = function (_Axis) {
	    _inherits(PolarAxis, _Axis);

	    function PolarAxis(options) {
	        _classCallCheck(this, PolarAxis);

	        var _this = _possibleConstructorReturn(this, (PolarAxis.__proto__ || Object.getPrototypeOf(PolarAxis)).call(this, options));

	        var instanceOptions = _this.options;

	        instanceOptions.minorUnit = instanceOptions.minorUnit || instanceOptions.majorUnit / 2;
	        return _this;
	    }

	    _createClass(PolarAxis, [{
	        key: 'getDivisions',
	        value: function getDivisions(stepValue) {
	            return _numericAxis2.default.prototype.getDivisions.call(this, stepValue) - 1;
	        }
	    }, {
	        key: 'reflow',
	        value: function reflow(box) {
	            this.box = box;
	            this.reflowLabels();
	        }
	    }, {
	        key: 'reflowLabels',
	        value: function reflowLabels() {
	            var options = this.options;
	            var labels = this.labels;
	            var _options$labels = this.options.labels;
	            var _options$labels$skip = _options$labels.skip;
	            var skip = _options$labels$skip === undefined ? 0 : _options$labels$skip;
	            var _options$labels$step = _options$labels.step;
	            var step = _options$labels$step === undefined ? 1 : _options$labels$step;

	            var measureBox = new _box2.default();
	            var divs = this.intervals(options.majorUnit, skip, step);

	            for (var i = 0; i < labels.length; i++) {
	                labels[i].reflow(measureBox);
	                var labelBox = labels[i].box;

	                labels[i].reflow(this.getSlot(divs[i]).adjacentBox(0, labelBox.width(), labelBox.height()));
	            }
	        }
	    }, {
	        key: 'lineBox',
	        value: function lineBox() {
	            return this.box;
	        }
	    }, {
	        key: 'intervals',
	        value: function intervals(size) {
	            var skip = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
	            var step = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];
	            var skipAngles = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];

	            var min = this.options.min;
	            var divisions = this.getDivisions(size);
	            var divs = [];

	            for (var i = skip; i < divisions; i += step) {
	                var current = (360 + min + i * size) % 360;
	                if (!(skipAngles && (0, _inArray2.default)(current, skipAngles))) {
	                    divs.push(current);
	                }
	            }

	            return divs;
	        }
	    }, {
	        key: 'majorIntervals',
	        value: function majorIntervals() {
	            return this.intervals(this.options.majorUnit);
	        }
	    }, {
	        key: 'minorIntervals',
	        value: function minorIntervals() {
	            return this.intervals(this.options.minorUnit);
	        }
	    }, {
	        key: 'intervalAngle',
	        value: function intervalAngle(i) {
	            return (540 - i - this.options.startAngle) % 360;
	        }
	    }, {
	        key: 'createLine',
	        value: function createLine() {
	            return [];
	        }
	    }, {
	        key: 'majorGridLineAngles',
	        value: function majorGridLineAngles(altAxis) {
	            var majorGridLines = this.options.majorGridLines;
	            return this.gridLineAngles(altAxis, this.options.majorUnit, majorGridLines.skip, majorGridLines.step);
	        }
	    }, {
	        key: 'minorGridLineAngles',
	        value: function minorGridLineAngles(altAxis, skipMajor) {
	            var options = this.options;
	            var minorGridLines = options.minorGridLines;
	            var majorGridLines = options.majorGridLines;

	            var majorGridLineAngles = skipMajor ? this.intervals(options.majorUnit, majorGridLines.skip, majorGridLines.step) : null;

	            return this.gridLineAngles(altAxis, options.minorUnit, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);
	        }
	    }, {
	        key: 'plotBandSlot',
	        value: function plotBandSlot(band) {
	            return this.getSlot(band.from, band.to);
	        }
	    }, {
	        key: 'getSlot',
	        value: function getSlot(a, b) {
	            var options = this.options;
	            var box = this.box;

	            var startAngle = options.startAngle;
	            var start = (0, _limitValue2.default)(a, options.min, options.max);
	            var end = (0, _limitValue2.default)(b || start, start, options.max);

	            if (options.reverse) {
	                start *= -1;
	                end *= -1;
	            }

	            start = (540 - start - startAngle) % 360;
	            end = (540 - end - startAngle) % 360;

	            if (end < start) {
	                var tmp = start;
	                start = end;
	                end = tmp;
	            }

	            return new _ring2.default(box.center(), 0, box.height() / 2, start, end - start);
	        }
	    }, {
	        key: 'slot',
	        value: function slot(from) {
	            var to = arguments.length <= 1 || arguments[1] === undefined ? from : arguments[1];

	            var options = this.options;
	            var start = 360 - options.startAngle;
	            var slot = this.getSlot(from, to);
	            var min = Math.min(from, to);
	            var max = Math.max(from, to);
	            var startAngle = void 0,
	                endAngle = void 0;

	            if (options.reverse) {
	                startAngle = min;
	                endAngle = max;
	            } else {
	                startAngle = 360 - max;
	                endAngle = 360 - min;
	            }

	            startAngle = (startAngle + start) % 360;
	            endAngle = (endAngle + start) % 360;

	            return new _kendoDrawing.geometry.Arc([slot.center.x, slot.center.y], {
	                startAngle: startAngle,
	                endAngle: endAngle,
	                radiusX: slot.radius,
	                radiusY: slot.radius
	            });
	        }
	    }, {
	        key: 'getValue',
	        value: function getValue(point) {
	            var options = this.options;
	            var center = this.box.center();
	            var dx = point.x - center.x;
	            var dy = point.y - center.y;
	            var theta = Math.round((0, _deg2.default)(Math.atan2(dy, dx)));
	            var start = options.startAngle;

	            if (!options.reverse) {
	                theta *= -1;
	                start *= -1;
	            }

	            return (theta + start + 360) % 360;
	        }
	    }, {
	        key: 'valueRange',
	        value: function valueRange() {
	            return {
	                min: 0,
	                max: Math.PI * 2
	            };
	        }
	    }]);

	    return PolarAxis;
	}(_axis2.default);

	(0, _setDefaultOptions2.default)(PolarAxis.prototype, {
	    type: "polar",
	    startAngle: 0,
	    reverse: false,
	    majorUnit: 60,
	    min: 0,
	    max: 360,
	    labels: {
	        margin: (0, _getSpacing2.default)(10)
	    },
	    majorGridLines: {
	        color: _constants.BLACK,
	        visible: true,
	        width: 1
	    },
	    minorGridLines: {
	        color: "#aaa"
	    }
	});

	(0, _deepExtend2.default)(PolarAxis.prototype, _gridLinesMixin2.default, {
	    createPlotBands: _radarCategoryAxis2.default.prototype.createPlotBands,
	    majorAngles: _radarCategoryAxis2.default.prototype.majorAngles,
	    range: _numericAxis2.default.prototype.range,
	    labelsCount: _numericAxis2.default.prototype.labelsCount,
	    createAxisLabel: _numericAxis2.default.prototype.createAxisLabel
	});

	exports.default = PolarAxis;

/***/ },

/***/ 516:
/***/ function(module, exports) {

	module.exports = require("./mixins/grid-lines-mixin");

/***/ },

/***/ 517:
/***/ function(module, exports) {

	module.exports = require("./radar-category-axis");

/***/ },

/***/ 518:
/***/ function(module, exports) {

	module.exports = require("./ring");

/***/ },

/***/ 519:
/***/ function(module, exports) {

	module.exports = require("../common/deg");

/***/ }

/******/ });