{"version":3,"sources":["webpack:///webpack/bootstrap fdb80bb9d2d218e6acc9?1cfc***","webpack:///external \"@angular/core\"?73d1*","webpack:///./src/intl-error-handler.ts","webpack:///external \"./errors\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;ACtCA,2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,kCAAgD,CAAe,CAAC;AAChE,oCAAuB,EAAU,CAAC;AAElC;;;IAGG;AACH;KAAsC,oCAAY;KAChD;;;;;QAKG;KACH,0BAAsC,QAAgB;SAClD,iBAAO,CAAC;SAD0B,aAAQ,GAAR,QAAQ,CAAQ;SAGlD,6CAA6C;SAC7C,sCAAsC;SACtC,oCAAoC;SACpC,EAAE;SACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KACrD,CAAC;KAEM,sCAAW,GAAlB,UAAmB,KAAU;SACzB,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAE1C,gBAAK,CAAC,WAAW,YAAC,KAAK,CAAC,CAAC;KAC7B,CAAC;KAEM,wCAAa,GAApB,UAAqB,EAAO;SACxB,IAAM,SAAS,GAAG,eAAM,CAAC,MAAM,CAAC,IAAI,CAAC,eAAM,CAAC,CAAC,MAAM,CAAC,WAAC,IAAI,SAAE,CAAC,OAAO,CAAC,OAAO,CAAC,eAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAzC,CAAyC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACxG,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC;KAC3E,CAAC;KAnBW;oBAAC,aAAM,CAAC,gBAAS,CAAC;;yBAAA;KAoBhC,uBAAC;AAAD,EAAC,CA3BqC,mBAAY,GA2BjD;AA3BY,yBAAgB,mBA2B5B;;;;;;;AClCD,sC","file":"src/intl-error-handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fdb80bb9d2d218e6acc9\n **/","module.exports = require(\"@angular/core\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@angular/core\"\n ** module id = 2\n ** module chunks = 0 1 4 5 6 8\n **/","import { ErrorHandler, Inject, LOCALE_ID } from '@angular/core';\nimport { errors } from './errors';\n\n/**\n * @hidden\n * The Intl Error Handler\n */\nexport class IntlErrorHandler extends ErrorHandler {\n  /**\n   * Creates a new instance of the service with the ID of the specified locale.\n   *\n   * Note that the parts of the locale ID can be separated by either `_` (underscore)\n   * or `-` (dash).\n   */\n  constructor(@Inject(LOCALE_ID) public localeId: string) {\n      super();\n\n      // Angular locales use underscore, e.g. en_US\n      // while IETF BCP-47 specifies a dash.\n      // https://tools.ietf.org/html/bcp47\n      //\n      this.localeId = this.localeId.replace(/_/g, '-');\n  }\n\n  public handleError(error: any): void {\n      error.message = this.formatMessage(error);\n\n      super.handleError(error);\n  }\n\n  public formatMessage(ex: any): string {\n      const intlError = errors[Object.keys(errors).filter(k => ex.message.indexOf(errors[k].name) !== -1)[0]];\n      return intlError ? intlError.formatMessage(this.localeId) : ex.message;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/intl-error-handler.ts\n **/","module.exports = require(\"./errors\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"./errors\"\n ** module id = 10\n ** module chunks = 4\n **/"],"sourceRoot":""}