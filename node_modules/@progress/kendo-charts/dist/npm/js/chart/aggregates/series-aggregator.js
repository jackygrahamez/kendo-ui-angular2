module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(10);


/***/ },
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */
/***/ function(module, exports) {

	module.exports = require("../../common/is-number");

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = require("../../common/defined");

/***/ },
/* 8 */,
/* 9 */,
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _aggregates = __webpack_require__(11);

	var _aggregates2 = _interopRequireDefault(_aggregates);

	var _isObject = __webpack_require__(12);

	var _isObject2 = _interopRequireDefault(_isObject);

	var _isFunction = __webpack_require__(13);

	var _isFunction2 = _interopRequireDefault(_isFunction);

	var _isArray = __webpack_require__(14);

	var _isArray2 = _interopRequireDefault(_isArray);

	var _isNumber = __webpack_require__(6);

	var _isNumber2 = _interopRequireDefault(_isNumber);

	var _inArray = __webpack_require__(15);

	var _inArray2 = _interopRequireDefault(_inArray);

	var _defined = __webpack_require__(7);

	var _defined2 = _interopRequireDefault(_defined);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var SeriesAggregator = function () {
	    function SeriesAggregator(series, binder, defaultAggregates) {
	        _classCallCheck(this, SeriesAggregator);

	        var canonicalFields = binder.canonicalFields(series);
	        var valueFields = binder.valueFields(series);
	        var sourceFields = binder.sourceFields(series, canonicalFields);
	        var seriesFields = this._seriesFields = [];
	        var defaults = defaultAggregates.query(series.type);
	        var rootAggregate = series.aggregate || defaults;

	        this._series = series;
	        this._binder = binder;

	        for (var i = 0; i < canonicalFields.length; i++) {
	            var field = canonicalFields[i];
	            var fieldAggregate = void 0;

	            if ((0, _isObject2.default)(rootAggregate)) {
	                fieldAggregate = rootAggregate[field];
	            } else if (i === 0 || (0, _inArray2.default)(field, valueFields)) {
	                fieldAggregate = rootAggregate;
	            } else {
	                break;
	            }

	            if (fieldAggregate) {
	                seriesFields.push({
	                    canonicalName: field,
	                    name: sourceFields[i],
	                    transform: (0, _isFunction2.default)(fieldAggregate) ? fieldAggregate : _aggregates2.default[fieldAggregate]
	                });
	            }
	        }
	    }

	    _createClass(SeriesAggregator, [{
	        key: 'aggregatePoints',
	        value: function aggregatePoints(srcPoints, group) {
	            var series = this._series;
	            var seriesFields = this._seriesFields;

	            var data = this._bindPoints(srcPoints || []);
	            var firstDataItem = data.dataItems[0];
	            var result = {};

	            if (firstDataItem && !(0, _isNumber2.default)(firstDataItem) && !(0, _isArray2.default)(firstDataItem)) {
	                var fn = function fn() {};
	                fn.prototype = firstDataItem;
	                result = new fn();
	            }

	            for (var i = 0; i < seriesFields.length; i++) {
	                var field = seriesFields[i];
	                var srcValues = this._bindField(data.values, field.canonicalName);
	                var value = field.transform(srcValues, series, data.dataItems, group);

	                if (value !== null && (0, _isObject2.default)(value) && !(0, _defined2.default)(value.length) && !(value instanceof Date)) {
	                    result = value;
	                    break;
	                } else {
	                    if ((0, _defined2.default)(value)) {
	                        setValue(field.name, result, value);
	                    }
	                }
	            }

	            return result;
	        }
	    }, {
	        key: '_bindPoints',
	        value: function _bindPoints(points) {
	            var binder = this._binder;
	            var series = this._series;

	            var values = [];
	            var dataItems = [];

	            for (var i = 0; i < points.length; i++) {
	                var pointIx = points[i];

	                values.push(binder.bindPoint(series, pointIx));
	                dataItems.push(series.data[pointIx]);
	            }

	            return {
	                values: values,
	                dataItems: dataItems
	            };
	        }
	    }, {
	        key: '_bindField',
	        value: function _bindField(data, field) {
	            var values = [];
	            var count = data.length;

	            for (var i = 0; i < count; i++) {
	                var item = data[i];
	                var _valueFields = item.valueFields;
	                var value = void 0;

	                if ((0, _defined2.default)(_valueFields[field])) {
	                    value = _valueFields[field];
	                } else {
	                    value = item.fields[field];
	                }

	                values.push(value);
	            }

	            return values;
	        }
	    }]);

	    return SeriesAggregator;
	}();

	function setValue(fieldName, target, value) {
	    var parentObj = target;
	    var field = fieldName;

	    if (fieldName.indexOf(".") > -1) {
	        var parts = fieldName.split(".");

	        while (parts.length > 1) {
	            field = parts.shift();
	            if (!(0, _defined2.default)(parentObj[field])) {
	                parentObj[field] = {};
	            }
	            parentObj = parentObj[field];
	        }
	        field = parts.shift();
	    }

	    parentObj[field] = value;
	}

	exports.default = SeriesAggregator;

/***/ },
/* 11 */
/***/ function(module, exports) {

	module.exports = require("./aggregates");

/***/ },
/* 12 */
/***/ function(module, exports) {

	module.exports = require("../../common/is-object");

/***/ },
/* 13 */
/***/ function(module, exports) {

	module.exports = require("../../common/is-function");

/***/ },
/* 14 */
/***/ function(module, exports) {

	module.exports = require("../../common/is-array");

/***/ },
/* 15 */
/***/ function(module, exports) {

	module.exports = require("../../common/in-array");

/***/ }
/******/ ]);