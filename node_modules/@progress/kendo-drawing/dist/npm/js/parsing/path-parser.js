module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(236);


/***/ },

/***/ 6:
/***/ function(module, exports) {

	module.exports = require("../geometry/point");

/***/ },

/***/ 236:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _multiPath = __webpack_require__(237);

	var _multiPath2 = _interopRequireDefault(_multiPath);

	var _path = __webpack_require__(238);

	var _path2 = _interopRequireDefault(_path);

	var _point = __webpack_require__(6);

	var _point2 = _interopRequireDefault(_point);

	var _shapeMap = __webpack_require__(239);

	var _shapeMap2 = _interopRequireDefault(_shapeMap);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var SEGMENT_REGEX = /([a-df-z]{1})([^a-df-z]*)(z)?/gi;
	var SPLIT_REGEX = /[,\s]?([+\-]?(?:\d*\.\d+|\d+)(?:[eE][+\-]?\d+)?)/g;
	var MOVE = "m";
	var CLOSE = "z";

	function parseParameters(str) {
	    var parameters = [];
	    str.replace(SPLIT_REGEX, function (match, number) {
	        parameters.push(parseFloat(number));
	    });
	    return parameters;
	}

	var PathParser = function () {
	    function PathParser() {
	        _classCallCheck(this, PathParser);
	    }

	    _createClass(PathParser, [{
	        key: 'parse',
	        value: function parse(str, options) {
	            var multiPath = new _multiPath2.default(options);
	            var position = new _point2.default();
	            var previousCommand = void 0;

	            str.replace(SEGMENT_REGEX, function (match, element, params, closePath) {
	                var command = element.toLowerCase();
	                var isRelative = command === element;
	                var parameters = parseParameters(params.trim());

	                if (command === MOVE) {
	                    if (isRelative) {
	                        position.x += parameters[0];
	                        position.y += parameters[1];
	                    } else {
	                        position.x = parameters[0];
	                        position.y = parameters[1];
	                    }

	                    multiPath.moveTo(position.x, position.y);

	                    if (parameters.length > 2) {
	                        command = "l";
	                        parameters.splice(0, 2);
	                    }
	                }

	                if (_shapeMap2.default[command]) {
	                    _shapeMap2.default[command](multiPath, {
	                        parameters: parameters,
	                        position: position,
	                        isRelative: isRelative,
	                        previousCommand: previousCommand
	                    });

	                    if (closePath && closePath.toLowerCase() === CLOSE) {
	                        multiPath.close();
	                    }
	                } else if (command !== MOVE) {
	                    throw new Error("Error while parsing SVG path. Unsupported command: " + command);
	                }

	                previousCommand = command;
	            });

	            return multiPath;
	        }
	    }]);

	    return PathParser;
	}();

	PathParser.current = new PathParser();

	_path2.default.parse = function (str, options) {
	    return PathParser.current.parse(str, options);
	};

	exports.default = PathParser;

/***/ },

/***/ 237:
/***/ function(module, exports) {

	module.exports = require("../shapes/multi-path");

/***/ },

/***/ 238:
/***/ function(module, exports) {

	module.exports = require("../shapes/path");

/***/ },

/***/ 239:
/***/ function(module, exports) {

	module.exports = require("./shape-map");

/***/ }

/******/ });