import { AfterContentChecked, ElementRef, Renderer } from '@angular/core';
import { AlignService } from './services/align.service';
import { PositionService } from './services/position.service';
import { AlignStrategy, CollisionStrategy, OffsetPosition } from '@progress/kendo-popup-common';
import '@telerik/kendo-theme-default/styles/packages/popup';
/**
 *  Represents the Kendo UI Popup component for Angular.
 */
export declare class PopupComponent implements AfterContentChecked {
    private _alignService;
    private container;
    private _positionService;
    private _renderer;
    /**
     * Controls the Popup animation. By default, the open and close animation are enabled.
     */
    animate: boolean;
    /**
     * Specifies the element that will be used as an anchor. The Popup opens next to that element.
     *
     * > To correctly position the Popup, make sure that anchor and popup have the same offset parent element.
     */
    anchor: ElementRef;
    /**
     * Specifies the anchor pivot point.
     *
     * **anchorAlign.horizontal** - String(default: "left")
     *
     * Specifies the horizontal alignment point of the anchor.
     *
     * The available options are:
     *
     * - `left` — Use the leftmost point of the anchor element.
     * - `center` — Use the center point of the anchor element.
     * - `right` — Use the rightmost point of the anchor element.
     *
     * **anchorAlign.vertival** - String(default: "bottom")
     *
     * Specifies the vertical alignment point of the anchor.
     *
     * The available options are:
     *
     * - `top` — Uses the top point of the anchor element.
     * - `center` — Uses the center point of the anchor element.
     * - `bottom` — Uses the bottom point of the anchor element.
     */
    anchorAlign: AlignStrategy;
    /**
     * Configures the collision behavior of the Popup.
     *
     * **collision.horizontal** - String(default: "fit")
     *
     * Defines the horizontal position of the Popup when it is not fully visible.
     *
     * The available options are:
     *
     * - `fit` — Moves the Popup horizontally until it is fully displayed in the view port.
     * - `flip` — Flips the Popup position based on the origin and position properties.
     *
     * **collision.vertical** - String(default: "flip")
     *
     * Defines the vertical position of the Popup when it is not fully visible.
     *
     * The available options are:
     *
     * - `fit` — Moves the Popup vertically until it is fully displayed in the view port.
     * - `flip` — Flips the Popup position based on the origin and position properties.
     */
    collision: CollisionStrategy;
    /**
     * Specifies the popup pivot point.
     *
     * **popupAlign.horizontal** - String(default: "left")
     *
     * Specifies the horizontal alignment point of the Popup.
     *
     * The available options are:
     *
     * - `left` — Uses the leftmost point of the Popup element.
     * - `center` — Uses the center point of the Popup element.
     * - `right` — Uses the rightmost point of the Popup element.
     *
     * **popupAlign.vertival** - String(default: "top")
     *
     * Specifies the vertical alignment point of the Popup.
     *
     * The available options are:
     *
     * - `top` — Uses the top point of the Popup element.
     * - `center` — Uses the center point of the Popup element.
     * - `bottom` — Uses the bottom point of the Popup element.
     */
    popupAlign: AlignStrategy;
    /**
     * Specifies a list of CSS classes to be added to the internal animated element.
     *
     * > Use this property binding if the popup content should be styled.
     */
    popupClass: string;
    /**
     * Specifies the element absolute position. The Popup will open next to that point.
     *
     * The Popup pivot point is defined by the `popupAlign` configuration option.
     * The boundary detection is applied by using the Window view port.
     *
     * The `Offset` type includes:
     *
     * - `offset.left` - Defines the left position of the Popup.
     * - `offset.top` - Defines the top position of the Popup.
     */
    offset: OffsetPosition;
    protected readonly offsetLeft: number;
    protected readonly offsetTop: number;
    private currentOffset;
    private direction;
    constructor(_alignService: AlignService, container: ElementRef, _positionService: PositionService, _renderer: Renderer);
    ngAfterContentChecked(): void;
    private align();
    private position();
}
