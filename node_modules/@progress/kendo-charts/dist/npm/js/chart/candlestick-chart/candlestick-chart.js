module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(100);


/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = require("../../common/constants");

/***/ },

/***/ 13:
/***/ function(module, exports) {

	module.exports = require("../../common/is-function");

/***/ },

/***/ 24:
/***/ function(module, exports) {

	module.exports = require("../constants");

/***/ },

/***/ 50:
/***/ function(module, exports) {

	module.exports = require("../../common/deep-extend");

/***/ },

/***/ 72:
/***/ function(module, exports) {

	module.exports = require("../categorical-chart");

/***/ },

/***/ 73:
/***/ function(module, exports) {

	module.exports = require("../cluster-layout");

/***/ },

/***/ 85:
/***/ function(module, exports) {

	module.exports = require("../utils/are-numbers");

/***/ },

/***/ 86:
/***/ function(module, exports) {

	module.exports = require("../../common/auto-format");

/***/ },

/***/ 100:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _categoricalChart = __webpack_require__(72);

	var _categoricalChart2 = _interopRequireDefault(_categoricalChart);

	var _clusterLayout = __webpack_require__(73);

	var _clusterLayout2 = _interopRequireDefault(_clusterLayout);

	var _candlestick = __webpack_require__(101);

	var _candlestick2 = _interopRequireDefault(_candlestick);

	var _clipAnimationMixin = __webpack_require__(102);

	var _clipAnimationMixin2 = _interopRequireDefault(_clipAnimationMixin);

	var _constants = __webpack_require__(24);

	var _areNumbers = __webpack_require__(85);

	var _areNumbers2 = _interopRequireDefault(_areNumbers);

	var _constants2 = __webpack_require__(5);

	var _deepExtend = __webpack_require__(50);

	var _deepExtend2 = _interopRequireDefault(_deepExtend);

	var _isFunction = __webpack_require__(13);

	var _isFunction2 = _interopRequireDefault(_isFunction);

	var _autoFormat = __webpack_require__(86);

	var _autoFormat2 = _interopRequireDefault(_autoFormat);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var CandlestickChart = function (_CategoricalChart) {
	    _inherits(CandlestickChart, _CategoricalChart);

	    function CandlestickChart() {
	        _classCallCheck(this, CandlestickChart);

	        return _possibleConstructorReturn(this, (CandlestickChart.__proto__ || Object.getPrototypeOf(CandlestickChart)).apply(this, arguments));
	    }

	    _createClass(CandlestickChart, [{
	        key: 'reflowCategories',
	        value: function reflowCategories(categorySlots) {
	            var children = this.children;
	            var childrenLength = children.length;

	            for (var i = 0; i < childrenLength; i++) {
	                children[i].reflow(categorySlots[i]);
	            }
	        }
	    }, {
	        key: 'addValue',
	        value: function addValue(data, fields) {
	            var categoryIx = fields.categoryIx;
	            var category = fields.category;
	            var series = fields.series;
	            var seriesIx = fields.seriesIx;
	            var children = this.children;
	            var options = this.options;

	            var value = data.valueFields;
	            var valueParts = this.splitValue(value);
	            var hasValue = (0, _areNumbers2.default)(valueParts);
	            var dataItem = series.data[categoryIx];
	            var categoryPoints = this.categoryPoints[categoryIx];
	            var point = void 0;

	            if (!categoryPoints) {
	                this.categoryPoints[categoryIx] = categoryPoints = [];
	            }

	            if (hasValue) {
	                point = this.createPoint(data, fields);
	            }

	            var cluster = children[categoryIx];
	            if (!cluster) {
	                cluster = new _clusterLayout2.default({
	                    vertical: options.invertAxes,
	                    gap: options.gap,
	                    spacing: options.spacing
	                });
	                this.append(cluster);
	            }

	            if (point) {
	                this.updateRange(value, fields);

	                cluster.append(point);

	                point.categoryIx = categoryIx;
	                point.category = category;
	                point.series = series;
	                point.seriesIx = seriesIx;
	                point.owner = this;
	                point.dataItem = dataItem;
	                point.noteText = data.fields.noteText;
	            }

	            this.points.push(point);
	            categoryPoints.push(point);
	        }
	    }, {
	        key: 'pointType',
	        value: function pointType() {
	            return _candlestick2.default;
	        }
	    }, {
	        key: 'createPoint',
	        value: function createPoint(data, fields) {
	            var categoryIx = fields.categoryIx;
	            var category = fields.category;
	            var series = fields.series;
	            var seriesIx = fields.seriesIx;

	            var pointType = this.pointType();
	            var value = data.valueFields;
	            var pointOptions = (0, _deepExtend2.default)({}, series);
	            var color = data.fields.color || series.color;

	            pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);

	            if (series.type === _constants.CANDLESTICK) {
	                if (value.open > value.close) {
	                    color = data.fields.downColor || series.downColor || series.color;
	                }
	            }

	            if ((0, _isFunction2.default)(series.color)) {
	                color = pointOptions.color;
	            }

	            pointOptions.vertical = !this.options.invertAxes;

	            var point = new pointType(value, pointOptions);
	            point.color = color;

	            return point;
	        }
	    }, {
	        key: 'splitValue',
	        value: function splitValue(value) {
	            return [value.low, value.open, value.close, value.high];
	        }
	    }, {
	        key: 'updateRange',
	        value: function updateRange(value, fields) {
	            var axisName = fields.series.axis;
	            var parts = this.splitValue(value);
	            var axisRange = this.valueAxisRanges[axisName];

	            axisRange = this.valueAxisRanges[axisName] = axisRange || { min: _constants2.MAX_VALUE, max: _constants2.MIN_VALUE };

	            axisRange = this.valueAxisRanges[axisName] = {
	                min: Math.min.apply(Math, parts.concat([axisRange.min])),
	                max: Math.max.apply(Math, parts.concat([axisRange.max]))
	            };
	        }
	    }, {
	        key: 'formatPointValue',
	        value: function formatPointValue(point, format) {
	            var value = point.value;

	            return (0, _autoFormat2.default)(format, value.open, value.high, value.low, value.close, point.category);
	        }
	    }, {
	        key: 'animationPoints',
	        value: function animationPoints() {
	            return this.points;
	        }
	    }]);

	    return CandlestickChart;
	}(_categoricalChart2.default);

	(0, _deepExtend2.default)(CandlestickChart.prototype, _clipAnimationMixin2.default);

	exports.default = CandlestickChart;

/***/ },

/***/ 101:
/***/ function(module, exports) {

	module.exports = require("./candlestick");

/***/ },

/***/ 102:
/***/ function(module, exports) {

	module.exports = require("../mixins/clip-animation-mixin");

/***/ }

/******/ });