(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(397);


/***/ },

/***/ 383:
/***/ function(module, exports) {

	module.exports = require("./copy-changes");

/***/ },

/***/ 385:
/***/ function(module, exports) {

	module.exports = require("./configuration.service");

/***/ },

/***/ 397:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var configuration_service_1 = __webpack_require__(385);
	var copy_changes_1 = __webpack_require__(383);
	var VISIBLE_KEY = 'visible';
	/**
	 * @hidden
	 */
	var SettingsComponent = (function () {
	    function SettingsComponent(configKey, configurationService) {
	        this.configKey = configKey;
	        this.configurationService = configurationService;
	        this.hiddenByDefault = false;
	        this.store = {};
	        this.userSetVisible = false;
	        if (configKey === undefined) {
	            throw 'Configuration key not set';
	        }
	    }
	    SettingsComponent.prototype.ngOnDestroy = function () {
	        this.store = undefined;
	        this.notify();
	    };
	    SettingsComponent.prototype.ngOnChanges = function (changes) {
	        copy_changes_1.copyChanges(changes, this.store);
	        this.toggleVisibility(changes[VISIBLE_KEY]);
	        // This is the only property we need to rename for now
	        // hence the quick and dirty replacement
	        if (typeof (this.store.content) === "function") {
	            this.store.template = this.store.content;
	            delete this.store.content;
	        }
	        this.notify();
	    };
	    SettingsComponent.prototype.toggleVisibility = function (change) {
	        if (!this.store || !this.hiddenByDefault) {
	            // No automatic toggling necessary
	            return;
	        }
	        if (change || this.userSetVisible) {
	            // Visibility is controlled by user
	            this.userSetVisible = true;
	            return;
	        }
	        var keyCount = Object.keys(this.store).length;
	        if (keyCount === 0) {
	            // Empty store, no action necessary
	            return;
	        }
	        if (this.store.visible && keyCount === 1) {
	            // Resetting automatic visibility
	            delete this.store.visible;
	            return;
	        }
	        // Set automatic visibility to true
	        this.store.visible = true;
	        this.userSetVisible = false;
	    };
	    SettingsComponent.prototype.notify = function () {
	        this.configurationService.notify(new configuration_service_1.Change(this.configKey, this.store));
	    };
	    return SettingsComponent;
	}());
	exports.SettingsComponent = SettingsComponent;


/***/ }

/******/ })));
//# sourceMappingURL=settings.component.js.map