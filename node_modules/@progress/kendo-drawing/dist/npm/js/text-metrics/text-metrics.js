module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(355);


/***/ },

/***/ 3:
/***/ function(module, exports) {

	module.exports = require("../common/defined");

/***/ },

/***/ 355:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _lruCache = __webpack_require__(356);

	var _lruCache2 = _interopRequireDefault(_lruCache);

	var _defined = __webpack_require__(3);

	var _defined2 = _interopRequireDefault(_defined);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function zeroSize() {
	    return { width: 0, height: 0, baseline: 0 };
	}

	var DEFAULT_OPTIONS = {
	    baselineMarkerSize: 1
	};

	function objectKey(object) {
	    var parts = [];
	    for (var key in object) {
	        parts.push(key + object[key]);
	    }

	    return parts.sort().join("");
	}

	// Computes FNV-1 hash
	// See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function
	function hashKey(str) {
	    // 32-bit FNV-1 offset basis
	    // See http://isthe.com/chongo/tech/comp/fnv/#FNV-param
	    var hash = 0x811C9DC5;

	    for (var i = 0; i < str.length; ++i) {
	        hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);
	        hash ^= str.charCodeAt(i);
	    }

	    return hash >>> 0;
	}

	var defaultMeasureBox = void 0;

	if (typeof document !== "undefined") {
	    defaultMeasureBox = document.createElement("div");
	    defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;\n              padding: 0 !important; margin: 0 !important; border: 0 !important;\n              line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;';
	}

	var TextMetrics = function () {
	    function TextMetrics(options) {
	        _classCallCheck(this, TextMetrics);

	        this._cache = new _lruCache2.default(1000);
	        this.options = Object.assign({}, DEFAULT_OPTIONS, options);
	    }

	    _createClass(TextMetrics, [{
	        key: 'measure',
	        value: function measure(text, style, box) {
	            if (!text) {
	                return zeroSize();
	            }

	            var styleKey = objectKey(style);
	            var cacheKey = hashKey(text + styleKey);
	            var cachedResult = this._cache.get(cacheKey);

	            if (cachedResult) {
	                return cachedResult;
	            }

	            var size = zeroSize();
	            var measureBox = box || defaultMeasureBox;
	            var baselineMarker = this._baselineMarker().cloneNode(false);

	            for (var key in style) {
	                var value = style[key];
	                if ((0, _defined2.default)(value)) {
	                    measureBox.style[key] = value;
	                }
	            }

	            measureBox.textContent = text;
	            measureBox.appendChild(baselineMarker);
	            document.body.appendChild(measureBox);

	            if (String(text).length) {
	                size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;
	                size.height = measureBox.offsetHeight;
	                size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;
	            }

	            if (size.width > 0 && size.height > 0) {
	                this._cache.put(cacheKey, size);
	            }

	            measureBox.parentNode.removeChild(measureBox);

	            return size;
	        }
	    }, {
	        key: '_baselineMarker',
	        value: function _baselineMarker() {
	            var marker = document.createElement("div");
	            marker.style.cssText = "display: inline-block; vertical-align: baseline;width: " + this.options.baselineMarkerSize + "px; height: " + this.options.baselineMarkerSize + "px;overflow: hidden;";

	            return marker;
	        }
	    }]);

	    return TextMetrics;
	}();

	TextMetrics.current = new TextMetrics();

	exports.default = TextMetrics;

/***/ },

/***/ 356:
/***/ function(module, exports) {

	module.exports = require("./lru-cache");

/***/ }

/******/ });