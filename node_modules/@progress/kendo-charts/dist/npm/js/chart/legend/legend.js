module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(169);


/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = require("../../common/constants");

/***/ },

/***/ 7:
/***/ function(module, exports) {

	module.exports = require("../../common/defined");

/***/ },

/***/ 15:
/***/ function(module, exports) {

	module.exports = require("../../common/in-array");

/***/ },

/***/ 25:
/***/ function(module, exports) {

	module.exports = require("../../common/set-default-options");

/***/ },

/***/ 50:
/***/ function(module, exports) {

	module.exports = require("../../common/deep-extend");

/***/ },

/***/ 55:
/***/ function(module, exports) {

	module.exports = require("../../core");

/***/ },

/***/ 77:
/***/ function(module, exports) {

	module.exports = require("../../common/get-spacing");

/***/ },

/***/ 169:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _core = __webpack_require__(55);

	var _legendLayout = __webpack_require__(170);

	var _legendLayout2 = _interopRequireDefault(_legendLayout);

	var _legendItem = __webpack_require__(171);

	var _legendItem2 = _interopRequireDefault(_legendItem);

	var _constants = __webpack_require__(5);

	var _setDefaultOptions = __webpack_require__(25);

	var _setDefaultOptions2 = _interopRequireDefault(_setDefaultOptions);

	var _inArray = __webpack_require__(15);

	var _inArray2 = _interopRequireDefault(_inArray);

	var _getSpacing = __webpack_require__(77);

	var _getSpacing2 = _interopRequireDefault(_getSpacing);

	var _deepExtend = __webpack_require__(50);

	var _deepExtend2 = _interopRequireDefault(_deepExtend);

	var _defined = __webpack_require__(7);

	var _defined2 = _interopRequireDefault(_defined);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var HORIZONTAL = "horizontal";
	var POINTER = "pointer";
	var CUSTOM = "custom";

	var Legend = function (_ChartElement) {
	    _inherits(Legend, _ChartElement);

	    function Legend(options) {
	        _classCallCheck(this, Legend);

	        var _this = _possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).call(this, options));

	        if (!(0, _inArray2.default)(_this.options.position, [_constants.TOP, _constants.RIGHT, _constants.BOTTOM, _constants.LEFT, CUSTOM])) {
	            _this.options.position = _constants.RIGHT;
	        }

	        _this.createContainer();

	        _this.createItems();
	        return _this;
	    }

	    _createClass(Legend, [{
	        key: 'createContainer',
	        value: function createContainer() {
	            var options = this.options;
	            var position = options.position;
	            var userAlign = options.align;

	            var align = position;
	            var vAlign = _constants.CENTER;

	            if (position === CUSTOM) {
	                align = _constants.LEFT;
	            } else if ((0, _inArray2.default)(position, [_constants.TOP, _constants.BOTTOM])) {
	                if (userAlign === "start") {
	                    align = _constants.LEFT;
	                } else if (userAlign === "end") {
	                    align = _constants.RIGHT;
	                } else {
	                    align = _constants.CENTER;
	                }
	                vAlign = position;
	            } else if (userAlign) {
	                if (userAlign === "start") {
	                    vAlign = _constants.TOP;
	                } else if (userAlign === "end") {
	                    vAlign = _constants.BOTTOM;
	                }
	            }

	            this.container = new _core.BoxElement({
	                margin: options.margin,
	                padding: options.padding,
	                background: options.background,
	                border: options.border,
	                vAlign: vAlign,
	                align: align,
	                zIndex: options.zIndex,
	                shrinkToFit: true
	            });

	            this.append(this.container);
	        }
	    }, {
	        key: 'createItems',
	        value: function createItems() {
	            var options = this.options;
	            var vertical = this.isVertical();
	            var innerElement = new _legendLayout2.default({
	                vertical: vertical,
	                spacing: options.spacing
	            });
	            var items = options.items;

	            if (options.reverse) {
	                items = items.slice(0).reverse();
	            }

	            var count = items.length;

	            for (var i = 0; i < count; i++) {
	                var item = items[i];

	                innerElement.append(new _legendItem2.default((0, _deepExtend2.default)({}, {
	                    markers: options.markers,
	                    labels: options.labels
	                }, options.item, item)));
	            }
	            innerElement.render();

	            this.container.append(innerElement);
	        }
	    }, {
	        key: 'isVertical',
	        value: function isVertical() {
	            var _options = this.options;
	            var orientation = _options.orientation;
	            var position = _options.position;

	            var vertical = position === CUSTOM && orientation !== HORIZONTAL || ((0, _defined2.default)(orientation) ? orientation !== HORIZONTAL : (0, _inArray2.default)(position, [_constants.LEFT, _constants.RIGHT]));

	            return vertical;
	        }
	    }, {
	        key: 'hasItems',
	        value: function hasItems() {
	            return this.container.children[0].children.length > 0;
	        }
	    }, {
	        key: 'reflow',
	        value: function reflow(targetBox) {
	            var options = this.options;
	            var legendBox = targetBox.clone();

	            if (!this.hasItems()) {
	                this.box = legendBox;
	                return;
	            }

	            if (options.position === CUSTOM) {
	                this.containerCustomReflow(legendBox);
	                this.box = legendBox;
	            } else {
	                this.containerReflow(legendBox);
	            }
	        }
	    }, {
	        key: 'containerReflow',
	        value: function containerReflow(targetBox) {
	            var options = this.options;
	            var container = this.container;
	            var position = options.position;
	            var width = options.width;
	            var height = options.height;

	            var pos = position === _constants.TOP || position === _constants.BOTTOM ? _constants.X : _constants.Y;
	            var vertical = this.isVertical();
	            var alignTarget = targetBox.clone();
	            var containerBox = targetBox.clone();

	            if (position === _constants.LEFT || position === _constants.RIGHT) {
	                containerBox.y1 = alignTarget.y1 = 0;
	            }

	            if (vertical && height) {
	                containerBox.y2 = containerBox.y1 + height;
	                containerBox.align(alignTarget, _constants.Y, container.options.vAlign);
	            } else if (!vertical && width) {
	                containerBox.x2 = containerBox.x1 + width;
	                containerBox.align(alignTarget, _constants.X, container.options.align);
	            }

	            container.reflow(containerBox);
	            containerBox = container.box;

	            var box = containerBox.clone();

	            if (options.offsetX || options.offsetY) {
	                containerBox.translate(options.offsetX, options.offsetY);
	                this.container.reflow(containerBox);
	            }

	            box[pos + 1] = targetBox[pos + 1];
	            box[pos + 2] = targetBox[pos + 2];

	            this.box = box;
	        }
	    }, {
	        key: 'containerCustomReflow',
	        value: function containerCustomReflow(targetBox) {
	            var options = this.options;
	            var container = this.container;
	            var offsetX = options.offsetX;
	            var offsetY = options.offsetY;
	            var width = options.width;
	            var height = options.height;

	            var vertical = this.isVertical();
	            var containerBox = targetBox.clone();

	            if (vertical && height) {
	                containerBox.y2 = containerBox.y1 + height;
	            } else if (!vertical && width) {
	                containerBox.x2 = containerBox.x1 + width;
	            }
	            container.reflow(containerBox);
	            containerBox = container.box;

	            container.reflow(new _core.Box(offsetX, offsetY, offsetX + containerBox.width(), offsetY + containerBox.height()));
	        }
	    }, {
	        key: 'renderVisual',
	        value: function renderVisual() {
	            if (this.hasItems()) {
	                _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'renderVisual', this).call(this);
	            }
	        }
	    }]);

	    return Legend;
	}(_core.ChartElement);

	(0, _setDefaultOptions2.default)(Legend.prototype, {
	    position: _constants.RIGHT,
	    items: [],
	    labels: {
	        margin: {
	            left: 6
	        }
	    },
	    offsetX: 0,
	    offsetY: 0,
	    margin: (0, _getSpacing2.default)(5),
	    padding: (0, _getSpacing2.default)(5),
	    border: {
	        color: _constants.BLACK,
	        width: 0
	    },
	    item: {
	        cursor: POINTER
	    },
	    spacing: 6,
	    background: "",
	    zIndex: 1,
	    markers: {
	        border: {
	            width: 1
	        },
	        width: 7,
	        height: 7,
	        type: "rect",
	        align: _constants.LEFT,
	        vAlign: _constants.CENTER
	    }
	});

	exports.default = Legend;

/***/ },

/***/ 170:
/***/ function(module, exports) {

	module.exports = require("./legend-layout");

/***/ },

/***/ 171:
/***/ function(module, exports) {

	module.exports = require("./legend-item");

/***/ }

/******/ });