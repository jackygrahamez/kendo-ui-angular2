(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(14);


/***/ },

/***/ 14:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	/* tslint:disable:use-life-cycle-interface */
	var iterator_1 = __webpack_require__(15);
	/**
	 * @hidden
	 */
	var DataResultIterator = (function () {
	    function DataResultIterator(source) {
	        this.source = source;
	        this.source = this.source ? this.source : [];
	        this.isObject = this.isGridDataResult(this.source);
	    }
	    DataResultIterator.prototype.isGridDataResult = function (source) {
	        return source.total !== undefined && source.data !== undefined;
	    };
	    Object.defineProperty(DataResultIterator.prototype, "total", {
	        get: function () {
	            return this.isObject ? this.source.total : this.source.length;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DataResultIterator.prototype, "data", {
	        get: function () {
	            return this.isObject ? this.source.data : this.source;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    DataResultIterator.prototype.map = function (fn) {
	        return this.data.map(fn);
	    };
	    DataResultIterator.prototype.filter = function (fn) {
	        return this.data.filter(fn);
	    };
	    DataResultIterator.prototype.reduce = function (fn, init) {
	        return this.data.reduce(fn, init);
	    };
	    DataResultIterator.prototype.forEach = function (fn) {
	        this.data.forEach(fn);
	    };
	    DataResultIterator.prototype.some = function (fn) {
	        return this.data.some(fn);
	    };
	    DataResultIterator.prototype[iterator_1.$$iterator] = function () {
	        return this.data[iterator_1.$$iterator]();
	    };
	    DataResultIterator.prototype.toString = function () { return this.data.toString(); };
	    return DataResultIterator;
	}());
	exports.DataResultIterator = DataResultIterator;
	/**
	 * @hidden
	 */
	var DataCollection = (function () {
	    function DataCollection(accessor) {
	        this.accessor = accessor;
	    }
	    Object.defineProperty(DataCollection.prototype, "total", {
	        get: function () { return this.accessor().total; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DataCollection.prototype, "length", {
	        get: function () { return this.accessor().data.length; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DataCollection.prototype, "first", {
	        get: function () { return this.accessor().data[0]; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DataCollection.prototype, "last", {
	        get: function () { return this.accessor().data[this.length - 1]; },
	        enumerable: true,
	        configurable: true
	    });
	    DataCollection.prototype.map = function (fn) { return this.accessor().map(fn); };
	    DataCollection.prototype.filter = function (fn) {
	        return this.accessor().filter(fn);
	    };
	    DataCollection.prototype.reduce = function (fn, init) {
	        return this.accessor().reduce(fn, init);
	    };
	    DataCollection.prototype.forEach = function (fn) {
	        this.accessor().forEach(fn);
	    };
	    DataCollection.prototype.some = function (fn) {
	        return this.accessor().some(fn);
	    };
	    DataCollection.prototype[iterator_1.$$iterator] = function () {
	        return this.accessor()[iterator_1.$$iterator]();
	    };
	    DataCollection.prototype.toString = function () { return this.accessor().toString(); };
	    return DataCollection;
	}());
	exports.DataCollection = DataCollection;


/***/ },

/***/ 15:
/***/ function(module, exports) {

	module.exports = require("rxjs/symbol/iterator");

/***/ }

/******/ })));
//# sourceMappingURL=data.collection.js.map