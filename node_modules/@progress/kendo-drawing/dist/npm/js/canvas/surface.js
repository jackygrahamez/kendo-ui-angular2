module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(86);


/***/ },

/***/ 70:
/***/ function(module, exports) {

	module.exports = require("../common/create-promise");

/***/ },

/***/ 86:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _surface = __webpack_require__(87);

	var _surface2 = _interopRequireDefault(_surface);

	var _surfaceFactory = __webpack_require__(88);

	var _surfaceFactory2 = _interopRequireDefault(_surfaceFactory);

	var _elementSize = __webpack_require__(89);

	var _elementSize2 = _interopRequireDefault(_elementSize);

	var _createPromise = __webpack_require__(70);

	var _createPromise2 = _interopRequireDefault(_createPromise);

	var _rootNode = __webpack_require__(90);

	var _rootNode2 = _interopRequireDefault(_rootNode);

	var _shapesQuadTree = __webpack_require__(91);

	var _shapesQuadTree2 = _interopRequireDefault(_shapesQuadTree);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Surface = function (_BaseSurface) {
	    _inherits(Surface, _BaseSurface);

	    function Surface(element, options) {
	        _classCallCheck(this, Surface);

	        var _this = _possibleConstructorReturn(this, (Surface.__proto__ || Object.getPrototypeOf(Surface)).call(this, element, options));

	        _this.element.innerHTML = _this._template(_this);

	        var canvas = _this.element.firstElementChild;
	        var size = (0, _elementSize2.default)(element);

	        canvas.width = size.width;
	        canvas.height = size.height;

	        _this._rootElement = canvas;

	        _this._root = new _rootNode2.default(canvas);

	        _this._mouseTrackHandler = _this._trackMouse.bind(_this);

	        _this.element.addEventListener("click", _this._mouseTrackHandler, false);
	        _this.element.addEventListener("mousemove", _this._mouseTrackHandler, false);
	        return _this;
	    }

	    _createClass(Surface, [{
	        key: 'destroy',
	        value: function destroy() {
	            _get(Surface.prototype.__proto__ || Object.getPrototypeOf(Surface.prototype), 'destroy', this).call(this);

	            if (this._root) {
	                this._root.destroy();
	                this._root = null;
	            }

	            if (this._searchTree) {
	                this._searchTree.clear();
	                delete this._searchTree;
	            }

	            this.element.removeEventListener("click", this._mouseTrackHandler, false);
	            this.element.removeEventListener("mousemove", this._mouseTrackHandler, false);
	        }
	    }, {
	        key: 'draw',
	        value: function draw(element) {
	            _get(Surface.prototype.__proto__ || Object.getPrototypeOf(Surface.prototype), 'draw', this).call(this, element);
	            this._root.load([element], undefined, this.options.cors);

	            if (this._searchTree) {
	                this._searchTree.add([element]);
	            }
	        }
	    }, {
	        key: 'clear',
	        value: function clear() {
	            _get(Surface.prototype.__proto__ || Object.getPrototypeOf(Surface.prototype), 'clear', this).call(this);
	            this._root.clear();

	            if (this._searchTree) {
	                this._searchTree.clear();
	            }
	        }
	    }, {
	        key: 'eventTarget',
	        value: function eventTarget(e) {
	            if (this._searchTree) {
	                var point = this._surfacePoint(e);
	                var shape = this._searchTree.pointShape(point);
	                return shape;
	            }
	        }
	    }, {
	        key: 'image',
	        value: function image() {
	            var root = this._root;
	            var rootElement = this._rootElement;

	            var loadingStates = [];

	            root.traverse(function (childNode) {
	                if (childNode.loading) {
	                    loadingStates.push(childNode.loading);
	                }
	            });

	            var promise = (0, _createPromise2.default)();
	            Promise.all(loadingStates).then(function () {
	                root._invalidate();

	                try {
	                    var data = rootElement.toDataURL();
	                    promise.resolve(data);
	                } catch (e) {
	                    promise.reject(e);
	                }
	            }).catch(function (e) {
	                promise.reject(e);
	            });

	            return promise;
	        }
	    }, {
	        key: 'suspendTracking',
	        value: function suspendTracking() {
	            _get(Surface.prototype.__proto__ || Object.getPrototypeOf(Surface.prototype), 'suspendTracking', this).call(this);
	            if (this._searchTree) {
	                this._searchTree.clear();
	                delete this._searchTree;
	            }
	        }
	    }, {
	        key: 'resumeTracking',
	        value: function resumeTracking() {
	            _get(Surface.prototype.__proto__ || Object.getPrototypeOf(Surface.prototype), 'resumeTracking', this).call(this);
	            if (!this._searchTree) {
	                this._searchTree = new _shapesQuadTree2.default();

	                var childNodes = this._root.childNodes;
	                var rootElements = [];
	                for (var idx = 0; idx < childNodes.length; idx++) {
	                    rootElements.push(childNodes[idx].srcElement);
	                }
	                this._searchTree.add(rootElements);
	            }
	        }
	    }, {
	        key: '_resize',
	        value: function _resize() {
	            this._rootElement.width = this._size.width;
	            this._rootElement.height = this._size.height;

	            this._root.invalidate();
	        }
	    }, {
	        key: '_template',
	        value: function _template() {
	            return "<canvas style='width: 100%; height: 100%;'></canvas>";
	        }
	    }, {
	        key: '_enableTracking',
	        value: function _enableTracking() {
	            this._searchTree = new _shapesQuadTree2.default();

	            _get(Surface.prototype.__proto__ || Object.getPrototypeOf(Surface.prototype), '_enableTracking', this).call(this);
	        }
	    }, {
	        key: '_trackMouse',
	        value: function _trackMouse(e) {
	            if (this._suspendedTracking) {
	                return;
	            }

	            var shape = this.eventTarget(e);

	            if (e.type !== "click") {
	                var currentShape = this._currentShape;
	                if (currentShape && currentShape !== shape) {
	                    this.trigger("mouseleave", {
	                        element: currentShape,
	                        originalEvent: e,
	                        type: "mouseleave"
	                    });
	                }

	                if (shape && currentShape !== shape) {
	                    this.trigger("mouseenter", {
	                        element: shape,
	                        originalEvent: e,
	                        type: "mouseenter"
	                    });
	                }

	                this.trigger("mousemove", {
	                    element: shape,
	                    originalEvent: e,
	                    type: "mousemove"
	                });

	                this._currentShape = shape;
	            } else if (shape) {
	                this.trigger("click", {
	                    element: shape,
	                    originalEvent: e,
	                    type: "click"
	                });
	            }
	        }
	    }]);

	    return Surface;
	}(_surface2.default);

	Surface.prototype.type = "canvas";

	if (typeof document !== "undefined" && document.createElement("canvas").getContext) {
	    _surfaceFactory2.default.current.register("canvas", Surface, 20);
	}

	exports.default = Surface;

/***/ },

/***/ 87:
/***/ function(module, exports) {

	module.exports = require("../core/surface");

/***/ },

/***/ 88:
/***/ function(module, exports) {

	module.exports = require("../core/surface-factory");

/***/ },

/***/ 89:
/***/ function(module, exports) {

	module.exports = require("../common/element-size");

/***/ },

/***/ 90:
/***/ function(module, exports) {

	module.exports = require("./root-node");

/***/ },

/***/ 91:
/***/ function(module, exports) {

	module.exports = require("../search/shapes-quad-tree");

/***/ }

/******/ });