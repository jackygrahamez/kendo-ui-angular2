module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(464);


/***/ },

/***/ 23:
/***/ function(module, exports) {

	module.exports = require("@progress/kendo-drawing");

/***/ },

/***/ 60:
/***/ function(module, exports) {

	module.exports = require("../common/constants");

/***/ },

/***/ 134:
/***/ function(module, exports) {

	module.exports = require("../common");

/***/ },

/***/ 458:
/***/ function(module, exports) {

	module.exports = require("./text-box");

/***/ },

/***/ 461:
/***/ function(module, exports) {

	module.exports = require("./box");

/***/ },

/***/ 464:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _kendoDrawing = __webpack_require__(23);

	var _textBox = __webpack_require__(458);

	var _textBox2 = _interopRequireDefault(_textBox);

	var _box = __webpack_require__(461);

	var _box2 = _interopRequireDefault(_box);

	var _constants = __webpack_require__(60);

	var _common = __webpack_require__(134);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var AxisLabel = function (_TextBox) {
	    _inherits(AxisLabel, _TextBox);

	    function AxisLabel(value, text, index, dataItem, options) {
	        _classCallCheck(this, AxisLabel);

	        var _this = _possibleConstructorReturn(this, (AxisLabel.__proto__ || Object.getPrototypeOf(AxisLabel)).call(this, text, options));

	        _this.text = text;
	        _this.value = value;
	        _this.index = index;
	        _this.dataItem = dataItem;
	        _this.reflow(new _box2.default());
	        return _this;
	    }

	    _createClass(AxisLabel, [{
	        key: 'visualContext',
	        value: function visualContext(targetBox) {
	            var context = _get(AxisLabel.prototype.__proto__ || Object.getPrototypeOf(AxisLabel.prototype), 'visualContext', this).call(this, targetBox);

	            context.value = this.value;
	            context.dataItem = this.dataItem;
	            context.format = this.options.format;
	            context.culture = this.options.culture;

	            return context;
	        }
	    }, {
	        key: 'click',
	        value: function click(widget, e) {

	            widget.trigger(_constants.AXIS_LABEL_CLICK, {
	                element: e.target,
	                value: this.value,
	                text: this.text,
	                index: this.index,
	                dataItem: this.dataItem,
	                axis: this.parent.options
	            });
	        }
	    }, {
	        key: 'rotate',
	        value: function rotate() {
	            if (this.options.alignRotation !== _constants.CENTER) {
	                var box = this.normalBox.toRect();
	                var transform = this.rotationTransform();

	                this.box = (0, _common.rectToBox)(box.bbox(transform.matrix()));
	            } else {
	                _get(AxisLabel.prototype.__proto__ || Object.getPrototypeOf(AxisLabel.prototype), 'rotate', this).call(this);
	            }

	            return this.box;
	        }
	    }, {
	        key: 'rotationTransform',
	        value: function rotationTransform() {
	            var options = this.options;
	            var rotation = options.rotation;
	            if (!rotation) {
	                return null;
	            }

	            if (options.alignRotation === _constants.CENTER) {
	                return _get(AxisLabel.prototype.__proto__ || Object.getPrototypeOf(AxisLabel.prototype), 'rotationTransform', this).call(this);
	            }

	            var rotationMatrix = _kendoDrawing.geometry.transform().rotate(rotation).matrix();
	            var box = this.normalBox.toRect();
	            var rect = this.targetBox.toRect();

	            var rotationOrigin = options.rotationOrigin || _constants.TOP;
	            var alignAxis = rotationOrigin === _constants.TOP || rotationOrigin === _constants.BOTTOM ? _constants.X : _constants.Y;
	            var distanceAxis = rotationOrigin === _constants.TOP || rotationOrigin === _constants.BOTTOM ? _constants.Y : _constants.X;
	            var axisAnchor = rotationOrigin === _constants.TOP || rotationOrigin === _constants.LEFT ? rect.origin : rect.bottomRight();

	            var topLeft = box.topLeft().transformCopy(rotationMatrix);
	            var topRight = box.topRight().transformCopy(rotationMatrix);
	            var bottomRight = box.bottomRight().transformCopy(rotationMatrix);
	            var bottomLeft = box.bottomLeft().transformCopy(rotationMatrix);
	            var rotatedBox = _kendoDrawing.geometry.Rect.fromPoints(topLeft, topRight, bottomRight, bottomLeft);

	            var translate = _defineProperty({}, distanceAxis, rect.origin[distanceAxis] - rotatedBox.origin[distanceAxis]);

	            var distanceLeft = Math.abs(topLeft[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);
	            var distanceRight = Math.abs(topRight[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);

	            var alignStart = void 0,
	                alignEnd = void 0;

	            if ((0, _common.round)(distanceLeft, _constants.DEFAULT_PRECISION) === (0, _common.round)(distanceRight, _constants.DEFAULT_PRECISION)) {
	                alignStart = topLeft;
	                alignEnd = topRight;
	            } else if (distanceRight < distanceLeft) {
	                alignStart = topRight;
	                alignEnd = bottomRight;
	            } else {
	                alignStart = topLeft;
	                alignEnd = bottomLeft;
	            }

	            var alignCenter = alignStart[alignAxis] + (alignEnd[alignAxis] - alignStart[alignAxis]) / 2;
	            translate[alignAxis] = rect.center()[alignAxis] - alignCenter;

	            return _kendoDrawing.geometry.transform().translate(translate.x, translate.y).rotate(rotation);
	        }
	    }]);

	    return AxisLabel;
	}(_textBox2.default);

	(0, _common.setDefaultOptions)(AxisLabel.prototype, {
	    _autoReflow: false
	});

	exports.default = AxisLabel;

/***/ }

/******/ });