(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(69);


/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = require("@angular/core");

/***/ },

/***/ 44:
/***/ function(module, exports) {

	module.exports = require("./grid.component");

/***/ },

/***/ 69:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(5);
	var grid_component_1 = __webpack_require__(44);
	/**
	 * @hidden
	 */
	var ResizableContainerDirective = (function () {
	    function ResizableContainerDirective(el, renderer, grid) {
	        this.el = el;
	        this.renderer = renderer;
	        this.grid = grid;
	        this.enabled = false;
	    }
	    Object.defineProperty(ResizableContainerDirective.prototype, "kendoGridResizableContainer", {
	        set: function (enabled) {
	            var refresh = enabled !== this.enabled;
	            this.enabled = enabled;
	            if (refresh) {
	                this.attachResize();
	                this.resize();
	            }
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ResizableContainerDirective.prototype.ngOnDestroy = function () {
	        if (this.resizeSubscription) {
	            this.resizeSubscription();
	        }
	    };
	    ResizableContainerDirective.prototype.attachResize = function () {
	        if (this.resizeSubscription && !this.enabled) {
	            this.resizeSubscription();
	            this.resizeSubscription = null;
	        }
	        if (!this.resizeSubscription && this.enabled) {
	            this.resizeSubscription = this.renderer.listenGlobal('window', 'resize', this.resize.bind(this));
	        }
	    };
	    ResizableContainerDirective.prototype.resize = function () {
	        if (this.grid && this.grid.wrapper) {
	            var containerElement = this.grid.wrapper.nativeElement;
	            var width = this.enabled ? Math.max(containerElement.clientWidth - this.lockedWidth, 0) + "px" : "";
	            this.el.nativeElement.style.width = width;
	        }
	    };
	    __decorate([
	        core_1.Input('lockedWidth'), 
	        __metadata('design:type', Number)
	    ], ResizableContainerDirective.prototype, "lockedWidth", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean), 
	        __metadata('design:paramtypes', [Boolean])
	    ], ResizableContainerDirective.prototype, "kendoGridResizableContainer", null);
	    ResizableContainerDirective = __decorate([
	        core_1.Directive({
	            selector: '[kendoGridResizableContainer]'
	        }),
	        __param(2, core_1.Optional()), 
	        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer, grid_component_1.GridComponent])
	    ], ResizableContainerDirective);
	    return ResizableContainerDirective;
	}());
	exports.ResizableContainerDirective = ResizableContainerDirective;


/***/ }

/******/ })));
//# sourceMappingURL=resizable.directive.js.map