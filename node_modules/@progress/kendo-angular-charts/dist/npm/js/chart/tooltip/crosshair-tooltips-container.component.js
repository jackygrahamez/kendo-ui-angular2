(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(279);


/***/ },

/***/ 13:
/***/ function(module, exports) {

	module.exports = require("@angular/core");

/***/ },

/***/ 279:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(13);
	var crosshair_tooltip_component_1 = __webpack_require__(280);
	var AXES = ["categoryAxis", "valueAxis", "xAxis", "yAxis"];
	/**
	 * @hidden
	 */
	var CrosshairTooltipsContainerComponent = (function () {
	    function CrosshairTooltipsContainerComponent() {
	        this.tooltipKeys = [];
	        this.tooltipsMap = {};
	    }
	    CrosshairTooltipsContainerComponent.prototype.show = function (e) {
	        var tooltipComponents = this.crossahirTooltipComponents.toArray();
	        var axisName = e.axisName;
	        var axisIndex = e.axisIndex;
	        for (var idx = 0; idx < tooltipComponents.length; idx++) {
	            if (tooltipComponents[idx].key === axisName + axisIndex) {
	                tooltipComponents[idx].show(e);
	                break;
	            }
	        }
	    };
	    CrosshairTooltipsContainerComponent.prototype.hide = function () {
	        var tooltipComponents = this.crossahirTooltipComponents.toArray();
	        for (var idx = 0; idx < tooltipComponents.length; idx++) {
	            tooltipComponents[idx].hide();
	        }
	    };
	    CrosshairTooltipsContainerComponent.prototype.createCrosshairTooltips = function (options) {
	        var newMap = this.mapTooltips(options);
	        var map = this.tooltipsMap;
	        for (var key in map) {
	            if (!newMap[key]) {
	                this.removeTooltip(key);
	                delete map[key];
	            }
	        }
	        for (var key in newMap) {
	            if (!map[key]) {
	                map[key] = newMap[key];
	                this.tooltipKeys.push(key);
	            }
	        }
	    };
	    CrosshairTooltipsContainerComponent.prototype.removeTooltip = function (key) {
	        var keys = this.tooltipKeys;
	        for (var idx = 0; idx < keys.length; idx++) {
	            if (keys[idx] === key) {
	                keys.splice(idx, 1);
	                break;
	            }
	        }
	    };
	    CrosshairTooltipsContainerComponent.prototype.mapTooltips = function (options) {
	        var map = {};
	        for (var idx = 0; idx < AXES.length; idx++) {
	            var tooltips = this.axesCrosshairTooltipOptions(options, AXES[idx]);
	            for (var tooltipIdx = 0; tooltipIdx < tooltips.length; tooltipIdx++) {
	                var tooltip = tooltips[tooltipIdx];
	                map[tooltip.name + tooltip.index] = tooltip;
	            }
	        }
	        return map;
	    };
	    CrosshairTooltipsContainerComponent.prototype.axesCrosshairTooltipOptions = function (options, name) {
	        var result = [];
	        if (options[name]) {
	            var axes = [].concat(options[name]);
	            for (var idx = 0; idx < axes.length; idx++) {
	                var tooltip = (axes[idx].crosshair || {}).tooltip;
	                if (tooltip && tooltip.visible) {
	                    result.push({
	                        index: idx,
	                        name: name
	                    });
	                }
	            }
	        }
	        return result;
	    };
	    __decorate([
	        core_1.ViewChildren(crosshair_tooltip_component_1.CrosshairTooltipComponent), 
	        __metadata('design:type', core_1.QueryList)
	    ], CrosshairTooltipsContainerComponent.prototype, "crossahirTooltipComponents", void 0);
	    CrosshairTooltipsContainerComponent = __decorate([
	        core_1.Component({
	            selector: 'kendo-chart-crosshair-tooltips-container',
	            template: "\n        <kendo-chart-crosshair-tooltip *ngFor=\"let key of tooltipKeys\" [key]=\"key\">\n        </kendo-chart-crosshair-tooltip>\n    "
	        }), 
	        __metadata('design:paramtypes', [])
	    ], CrosshairTooltipsContainerComponent);
	    return CrosshairTooltipsContainerComponent;
	}());
	exports.CrosshairTooltipsContainerComponent = CrosshairTooltipsContainerComponent;


/***/ },

/***/ 280:
/***/ function(module, exports) {

	module.exports = require("./crosshair-tooltip.component");

/***/ }

/******/ })));
//# sourceMappingURL=crosshair-tooltips-container.component.js.map