module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(139);


/***/ },

/***/ 23:
/***/ function(module, exports) {

	module.exports = require("@progress/kendo-drawing");

/***/ },

/***/ 139:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _kendoDrawing = __webpack_require__(23);

	var _kendoDraggable = __webpack_require__(140);

	var _kendoDraggable2 = _interopRequireDefault(_kendoDraggable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var IGNORE_THRESHOLD = 3;

	var ChartEvents = function (_Observable) {
	    _inherits(ChartEvents, _Observable);

	    function ChartEvents(element, options) {
	        _classCallCheck(this, ChartEvents);

	        var _this = _possibleConstructorReturn(this, (ChartEvents.__proto__ || Object.getPrototypeOf(ChartEvents)).call(this));

	        _this.initHandlers();

	        _this.draggable = new _kendoDraggable2.default({
	            press: _this.pressHandler,
	            drag: _this.dragHandler,
	            release: _this.releaseHandler
	        });

	        _this.draggable.bindTo(element);

	        _this.element = element;
	        _this.options = options;
	        _this.bind(_this.events, options);
	        return _this;
	    }

	    _createClass(ChartEvents, [{
	        key: 'initHandlers',
	        value: function initHandlers() {
	            this.pressHandler = this._press.bind(this);
	            this.dragHandler = this._drag.bind(this);
	            this.releaseHandler = this._release.bind(this);
	        }
	    }, {
	        key: '_press',
	        value: function _press(e) {
	            this._pressEvent = this._previousEvent = e;
	            this._moved = false;
	            this._triggerEvent("press", e);
	        }
	    }, {
	        key: '_triggerEvent',
	        value: function _triggerEvent(name, e) {
	            this.trigger(name, {
	                pageX: e.pageX,
	                pageY: e.pageY,
	                target: e.originalEvent.target,
	                originalEvent: e.originalEvent,
	                x: {
	                    startLocation: this._pressEvent.pageX,
	                    delta: e.pageX - this._previousEvent.pageX
	                },
	                y: {
	                    startLocation: this._pressEvent.pageY,
	                    delta: e.pageY - this._previousEvent.pageY
	                }
	            });
	        }
	    }, {
	        key: '_drag',
	        value: function _drag(e) {
	            if (!this._moved) {
	                if (this._withinIgnoreThreshold(e)) {
	                    return;
	                }
	                this._triggerEvent("start", this._pressEvent);
	                this._moved = true;
	            }

	            this._triggerEvent("move", e);

	            this._previousEvent = e;
	        }
	    }, {
	        key: '_release',
	        value: function _release(e) {
	            if (this._moved) {
	                this._triggerEvent("end", e);
	            } else {
	                this._triggerEvent("tap", e);
	            }

	            delete this._pressEvent;
	            delete this._previousEvent;
	        }
	    }, {
	        key: '_withinIgnoreThreshold',
	        value: function _withinIgnoreThreshold(e) {
	            var xDelta = this._pressEvent.pageX - e.pageX;
	            var yDelta = this._pressEvent.pageY - e.pageY;

	            return Math.sqrt(xDelta * xDelta + yDelta * yDelta) <= IGNORE_THRESHOLD;
	        }
	    }, {
	        key: 'destroy',
	        value: function destroy() {
	            this.draggable.destroy();
	            delete this.element;
	        }
	    }]);

	    return ChartEvents;
	}(_kendoDrawing.Observable);

	ChartEvents.prototype.events = ["press", "tap", "start", "move", "end"];

	exports.default = ChartEvents;

/***/ },

/***/ 140:
/***/ function(module, exports) {

	module.exports = require("@telerik/kendo-draggable");

/***/ }

/******/ });