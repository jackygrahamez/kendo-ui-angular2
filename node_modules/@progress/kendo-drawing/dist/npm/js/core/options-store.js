module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(120);


/***/ },

/***/ 3:
/***/ function(module, exports) {

	module.exports = require("../common/defined");

/***/ },

/***/ 104:
/***/ function(module, exports) {

	module.exports = require("../mixins/observers-mixin");

/***/ },

/***/ 120:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _observersMixin = __webpack_require__(104);

	var _observersMixin2 = _interopRequireDefault(_observersMixin);

	var _defined = __webpack_require__(3);

	var _defined2 = _interopRequireDefault(_defined);

	var _isClass = __webpack_require__(121);

	var _isClass2 = _interopRequireDefault(_isClass);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var toString = {}.toString;

	var OptionsStore = function () {
	    function OptionsStore(options) {
	        var prefix = arguments.length <= 1 || arguments[1] === undefined ? "" : arguments[1];

	        _classCallCheck(this, OptionsStore);

	        this.prefix = prefix;

	        for (var field in options) {
	            var member = options[field];
	            member = this._wrap(member, field);
	            this[field] = member;
	        }
	    }

	    _createClass(OptionsStore, [{
	        key: 'get',
	        value: function get(field) {
	            var parts = field.split(".");
	            var result = this;

	            while (parts.length && result) {
	                var part = parts.shift();
	                result = result[part];
	            }

	            return result;
	        }
	    }, {
	        key: 'set',
	        value: function set(field, value) {
	            var current = this.get(field);

	            if (current !== value) {
	                this._set(field, this._wrap(value, field));
	                this.optionsChange({
	                    field: this.prefix + field,
	                    value: value
	                });
	            }
	        }
	    }, {
	        key: '_set',
	        value: function _set(field, value) {
	            var composite = field.indexOf(".") >= 0;
	            var parentObj = this;
	            var fieldName = field;

	            if (composite) {
	                var parts = fieldName.split(".");
	                var prefix = this.prefix;

	                while (parts.length > 1) {
	                    fieldName = parts.shift();
	                    prefix += fieldName + ".";

	                    var obj = parentObj[fieldName];

	                    if (!obj) {
	                        obj = new OptionsStore({}, prefix);
	                        obj.addObserver(this);
	                        parentObj[fieldName] = obj;
	                    }
	                    parentObj = obj;
	                }
	                fieldName = parts[0];
	            }

	            parentObj._clear(fieldName);
	            parentObj[fieldName] = value;
	        }
	    }, {
	        key: '_clear',
	        value: function _clear(field) {
	            var current = this[field];
	            if (current && current.removeObserver) {
	                current.removeObserver(this);
	            }
	        }
	    }, {
	        key: '_wrap',
	        value: function _wrap(object, field) {
	            var type = toString.call(object);
	            var wrapped = object;

	            if (wrapped !== null && (0, _defined2.default)(wrapped) && type === "[object Object]") {
	                if (!(0, _isClass2.default)(wrapped)) {
	                    wrapped = new OptionsStore(wrapped, this.prefix + field);
	                }

	                wrapped.addObserver(this);
	            }

	            return wrapped;
	        }
	    }]);

	    return OptionsStore;
	}();

	_observersMixin2.default.extend(OptionsStore.prototype);

	exports.default = OptionsStore;

/***/ },

/***/ 121:
/***/ function(module, exports) {

	module.exports = require("../common/is-class");

/***/ }

/******/ });