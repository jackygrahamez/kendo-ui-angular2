{"version":3,"sources":["webpack:///webpack/bootstrap ad3edd743ed361bd0e56?6e3f*************************************************","webpack:///external \"@angular/core\"?73d1************************************","webpack:///external \"../common/settings.component\"?1287*","webpack:///./src/chart/legend.component.generated.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACtCA,2C;;;;;;;ACAA,0D;;;;;;;;;;;;;;;;;;;;;;ACAA,kCAAsB,EAAe,CAAC;AAEtC,gDAAkC,GAA8B,CAAC;AAGjE;;IAEG;AACH;KAAuD,4CAAiB;KA6GtE,kCAAmB,oBAA0C;SAC3D,kBAAM,QAAQ,EAAE,oBAAoB,CAAC,CAAC;SADrB,yBAAoB,GAApB,oBAAoB,CAAsB;KAE7D,CAAC;KApGD;SAAC,YAAK,EAAE;;4DAAA;KAKR;SAAC,YAAK,EAAE;;iEAAA;KAKR;SAAC,YAAK,EAAE;;6DAAA;KAKR;SAAC,YAAK,EAAE;;6DAAA;KAKR;SAAC,YAAK,EAAE;;6DAAA;KAKR;SAAC,YAAK,EAAE;;6DAAA;KAOR;SAAC,YAAK,EAAE;;8DAAA;KAOR;SAAC,YAAK,EAAE;;8DAAA;KAUR;SAAC,YAAK,EAAE;;kEAAA;KAKR;SAAC,YAAK,EAAE;;8DAAA;KAaR;SAAC,YAAK,EAAE;;+DAAA;KAOR;SAAC,YAAK,EAAE;;8DAAA;KAKR;SAAC,YAAK,EAAE;;8DAAA;KAKR;SAAC,YAAK,EAAE;;4DAAA;KAOR;SAAC,YAAK,EAAE;;oEAAA;KAKR;SAAC,YAAK,EAAE;;2DAAA;KAKV,+BAAC;AAAD,EAAC,CAhHsD,sCAAiB,GAgHvE;AAhHqB,iCAAwB,2BAgH7C","file":"src/chart/legend.component.generated.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ad3edd743ed361bd0e56\n **/","module.exports = require(\"@angular/core\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@angular/core\"\n ** module id = 13\n ** module chunks = 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 111 112 113 114 115 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 176 177 184 185 186\n **/","module.exports = require(\"../common/settings.component\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"../common/settings.component\"\n ** module id = 122\n ** module chunks = 16 46 49 61 63 107 109 172\n **/","import { Input } from '@angular/core';\r\nimport { ConfigurationService } from '../common/configuration.service';\r\nimport { SettingsComponent } from '../common/settings.component';\r\nimport { Border, LegendLabels, Margin, Padding } from '../common/property-types';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport abstract class LegendComponentGenerated extends SettingsComponent {\r\n  /**\r\n   * The legend horizontal alignment when `legend.position` is set to `\"top\"` or `\"bottom\"` and the vertical\r\n   * alignment when `legend.position` is set to `\"left\"` or `\"right\"`.\r\n   *\r\n   * The supported values are:\r\n   *\r\n   * - `\"start\"`&mdash;The legend is aligned to the start.\r\n   * - `\"center\"`&mdash;The legend is aligned to the center.\r\n   * - `\"end\"`&mdash;The legend is aligned to the end.\r\n   */\r\n  @Input() public align: string;\r\n\r\n  /**\r\n   * The background color of the legend. Accepts a valid CSS color string, including hex and rgb.\r\n   */\r\n  @Input() public background: string;\r\n\r\n  /**\r\n   * The border of the legend.\r\n   */\r\n  @Input() public border: Border;\r\n\r\n  /**\r\n   * The legend height when `legend.orientation` is set to `\"vertical\"`.\r\n   */\r\n  @Input() public height: number;\r\n\r\n  /**\r\n   * The Chart legend label configuration.\r\n   */\r\n  @Input() public labels: LegendLabels;\r\n\r\n  /**\r\n   * The margin of the Chart legend. A numeric value sets all paddings.\r\n   */\r\n  @Input() public margin: Margin | number;\r\n\r\n  /**\r\n   * The X offset of the Chart legend. The offset is relative to the default position of the legend.\r\n   * For example, a value of `20` will move the legend 20 pixels to the right of its initial position.\r\n   * A negative value will move the legend to the left of its current position.\r\n   */\r\n  @Input() public offsetX: number;\r\n\r\n  /**\r\n   * The Y offset of the chart legend. The offset is relative to the current position of the legend.\r\n   * For example, a value of `20` will move the legend 20 pixels down from its initial position.\r\n   * A negative value will move the legend upwards from its current position.\r\n   */\r\n  @Input() public offsetY: number;\r\n\r\n  /**\r\n   * The orientation of the legend items.\r\n   *\r\n   * The supported values are:\r\n   *\r\n   * - `\"vertical\"`&mdash;The legend items are added vertically.\r\n   * - `\"horizontal\"`&mdash;The legend items are added horizontally.\r\n   */\r\n  @Input() public orientation: string;\r\n\r\n  /**\r\n   * The padding of the Chart legend. A numeric value sets all paddings.\r\n   */\r\n  @Input() public padding: Padding | number;\r\n\r\n  /**\r\n   * The positions of the Chart legend.\r\n   *\r\n   * The supported values are:\r\n   *\r\n   * - `\"top\"`&mdash;The legend is positioned on the top.\r\n   * - `\"bottom\"`&mdash;The legend is positioned on the bottom.\r\n   * - `\"left\"`&mdash;The legend is positioned on the left.\r\n   * - `\"right\"`&mdash;The legend is positioned on the right.\r\n   * - `\"custom\"`&mdash;The legend is positioned by using `legend.offsetX` and `legend.offsetY`.\r\n   */\r\n  @Input() public position: string;\r\n\r\n  /**\r\n   * If set to `true`, the legend items are reversed.\r\n   *\r\n   * Available in versions 2013.3.1306 and later.\r\n   */\r\n  @Input() public reverse: boolean;\r\n\r\n  /**\r\n   * If set to `true`, the Chart displays the legend. By default, the Chart legend is visible.\r\n   */\r\n  @Input() public visible: boolean;\r\n\r\n  /**\r\n   * The legend width when the `legend.orientation` is set to `\"horizontal\"`.\r\n   */\r\n  @Input() public width: number;\r\n\r\n  // These options are also available as child components\r\n\r\n  /**\r\n   * The configuration of the Chart inactive legend items.\r\n   */\r\n  @Input() public inactiveItems: any;\r\n\r\n  /**\r\n   * The configuration of the Chart legend item.\r\n   */\r\n  @Input() public item: any;\r\n\r\n  constructor(public configurationService: ConfigurationService) {\r\n    super('legend', configurationService);\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/chart/legend.component.generated.ts\n **/"],"sourceRoot":""}