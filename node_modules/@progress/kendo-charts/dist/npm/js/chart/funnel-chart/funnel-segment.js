module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(167);


/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = require("../../common/constants");

/***/ },

/***/ 23:
/***/ function(module, exports) {

	module.exports = require("@progress/kendo-drawing");

/***/ },

/***/ 25:
/***/ function(module, exports) {

	module.exports = require("../../common/set-default-options");

/***/ },

/***/ 50:
/***/ function(module, exports) {

	module.exports = require("../../common/deep-extend");

/***/ },

/***/ 55:
/***/ function(module, exports) {

	module.exports = require("../../core");

/***/ },

/***/ 65:
/***/ function(module, exports) {

	module.exports = require("../mixins/point-events-mixin");

/***/ },

/***/ 167:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _kendoDrawing = __webpack_require__(23);

	var _core = __webpack_require__(55);

	var _pointEventsMixin = __webpack_require__(65);

	var _pointEventsMixin2 = _interopRequireDefault(_pointEventsMixin);

	var _constants = __webpack_require__(5);

	var _deepExtend = __webpack_require__(50);

	var _deepExtend2 = _interopRequireDefault(_deepExtend);

	var _setDefaultOptions = __webpack_require__(25);

	var _setDefaultOptions2 = _interopRequireDefault(_setDefaultOptions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var FunnelSegment = function (_ChartElement) {
	    _inherits(FunnelSegment, _ChartElement);

	    function FunnelSegment(value, options, segmentOptions) {
	        _classCallCheck(this, FunnelSegment);

	        var _this = _possibleConstructorReturn(this, (FunnelSegment.__proto__ || Object.getPrototypeOf(FunnelSegment)).call(this, options));

	        _this.value = value;
	        _this.options.index = segmentOptions.index;
	        return _this;
	    }

	    _createClass(FunnelSegment, [{
	        key: 'reflow',
	        value: function reflow(chartBox) {
	            var points = this.points;
	            var label = this.children[0];

	            this.box = new _core.Box(points[0].x, points[0].y, points[1].x, points[2].y);

	            if (label) {
	                label.reflow(new _core.Box(chartBox.x1, points[0].y, chartBox.x2, points[2].y));
	            }
	        }
	    }, {
	        key: 'createVisual',
	        value: function createVisual() {
	            var _this2 = this;

	            var options = this.options;
	            var visual = void 0;

	            _get(FunnelSegment.prototype.__proto__ || Object.getPrototypeOf(FunnelSegment.prototype), 'createVisual', this).call(this);

	            if (options.visual) {
	                visual = options.visual({
	                    category: this.category,
	                    dataItem: this.dataItem,
	                    value: this.value,
	                    series: this.series,
	                    percentage: this.percentage,
	                    points: this.points,
	                    options: options,
	                    createVisual: function createVisual() {
	                        return _this2.createPath();
	                    }
	                });
	            } else {
	                visual = this.createPath();
	            }

	            if (visual) {
	                this.visual.append(visual);
	            }
	        }
	    }, {
	        key: 'createPath',
	        value: function createPath() {
	            var options = this.options;
	            var border = options.border;
	            var path = _kendoDrawing.drawing.Path.fromPoints(this.points, {
	                fill: {
	                    color: options.color,
	                    opacity: options.opacity
	                },
	                stroke: {
	                    color: border.color,
	                    opacity: border.opacity,
	                    width: border.width
	                }
	            }).close();

	            return path;
	        }
	    }, {
	        key: 'createHighlight',
	        value: function createHighlight(style) {
	            return _kendoDrawing.drawing.Path.fromPoints(this.points, style);
	        }
	    }, {
	        key: 'highlightVisual',
	        value: function highlightVisual() {
	            return this.visual.children[0];
	        }
	    }, {
	        key: 'highlightVisualArgs',
	        value: function highlightVisualArgs() {
	            var path = _kendoDrawing.drawing.Path.fromPoints(this.points).close();

	            return {
	                options: this.options,
	                path: path
	            };
	        }
	    }, {
	        key: 'tooltipAnchor',
	        value: function tooltipAnchor() {
	            var box = this.box;
	            return {
	                point: new _core.Point(box.center().x, box.y1),
	                align: {
	                    horizontal: "center",
	                    vertical: "top"
	                }
	            };
	        }
	    }, {
	        key: 'formatValue',
	        value: function formatValue(format) {
	            var point = this;
	            return point.owner.formatPointValue(point, format);
	        }
	    }]);

	    return FunnelSegment;
	}(_core.ChartElement);

	(0, _setDefaultOptions2.default)(FunnelSegment.prototype, {
	    color: _constants.WHITE,
	    border: {
	        width: 1
	    }
	});

	(0, _deepExtend2.default)(FunnelSegment.prototype, _pointEventsMixin2.default);

	exports.default = FunnelSegment;

/***/ }

/******/ });