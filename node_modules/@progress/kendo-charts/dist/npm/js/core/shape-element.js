module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(535);


/***/ },

/***/ 23:
/***/ function(module, exports) {

	module.exports = require("@progress/kendo-drawing");

/***/ },

/***/ 60:
/***/ function(module, exports) {

	module.exports = require("../common/constants");

/***/ },

/***/ 111:
/***/ function(module, exports) {

	module.exports = require("../common/set-default-options");

/***/ },

/***/ 474:
/***/ function(module, exports) {

	module.exports = require("../common/round");

/***/ },

/***/ 506:
/***/ function(module, exports) {

	module.exports = require("./box-element");

/***/ },

/***/ 535:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _kendoDrawing = __webpack_require__(23);

	var _boxElement = __webpack_require__(506);

	var _boxElement2 = _interopRequireDefault(_boxElement);

	var _constants = __webpack_require__(60);

	var _setDefaultOptions = __webpack_require__(111);

	var _setDefaultOptions2 = _interopRequireDefault(_setDefaultOptions);

	var _round = __webpack_require__(474);

	var _round2 = _interopRequireDefault(_round);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ShapeElement = function (_BoxElement) {
	    _inherits(ShapeElement, _BoxElement);

	    function ShapeElement(options, pointData) {
	        _classCallCheck(this, ShapeElement);

	        var _this = _possibleConstructorReturn(this, (ShapeElement.__proto__ || Object.getPrototypeOf(ShapeElement)).call(this, options));

	        _this.pointData = pointData;
	        return _this;
	    }

	    _createClass(ShapeElement, [{
	        key: 'getElement',
	        value: function getElement() {
	            var options = this.options;
	            var box = this.paddingBox;
	            var type = options.type;
	            var rotation = options.rotation;

	            var center = box.center();
	            var halfWidth = box.width() / 2;

	            if (!options.visible || !this.hasBox()) {
	                return null;
	            }

	            var style = this.visualStyle();
	            var element = void 0;

	            if (type === _constants.CIRCLE) {
	                element = new _kendoDrawing.drawing.Circle(new _kendoDrawing.geometry.Circle([(0, _round2.default)(box.x1 + halfWidth, _constants.COORD_PRECISION), (0, _round2.default)(box.y1 + box.height() / 2, _constants.COORD_PRECISION)], halfWidth), style);
	            } else if (type === _constants.TRIANGLE) {
	                element = _kendoDrawing.drawing.Path.fromPoints([[box.x1 + halfWidth, box.y1], [box.x1, box.y2], [box.x2, box.y2]], style).close();
	            } else if (type === _constants.CROSS) {
	                element = new _kendoDrawing.drawing.MultiPath(style);

	                element.moveTo(box.x1, box.y1).lineTo(box.x2, box.y2);
	                element.moveTo(box.x1, box.y2).lineTo(box.x2, box.y1);
	            } else {
	                element = _kendoDrawing.drawing.Path.fromRect(box.toRect(), style);
	            }

	            if (rotation) {
	                element.transform(_kendoDrawing.geometry.transform().rotate(-rotation, [center.x, center.y]));
	            }

	            element.options.zIndex = options.zIndex;
	            return element;
	        }
	    }, {
	        key: 'createElement',
	        value: function createElement() {
	            var _this2 = this;

	            var customVisual = this.options.visual;
	            var pointData = this.pointData || {};
	            var visual = void 0;

	            if (customVisual) {
	                visual = customVisual({
	                    value: pointData.value,
	                    dataItem: pointData.dataItem,
	                    sender: this.getChart(),
	                    series: pointData.series,
	                    category: pointData.category,
	                    rect: this.paddingBox.toRect(),
	                    options: this.visualOptions(),
	                    createVisual: function createVisual() {
	                        return _this2.getElement();
	                    }
	                });
	            } else {
	                visual = this.getElement();
	            }

	            return visual;
	        }
	    }, {
	        key: 'visualOptions',
	        value: function visualOptions() {
	            var options = this.options;
	            return {
	                background: options.background,
	                border: options.border,
	                margin: options.margin,
	                padding: options.padding,
	                type: options.type,
	                size: options.width,
	                visible: options.visible
	            };
	        }
	    }, {
	        key: 'createVisual',
	        value: function createVisual() {
	            this.visual = this.createElement();
	        }
	    }]);

	    return ShapeElement;
	}(_boxElement2.default);

	(0, _setDefaultOptions2.default)(ShapeElement.prototype, {
	    type: _constants.CIRCLE,
	    align: _constants.CENTER,
	    vAlign: _constants.CENTER
	});

	exports.default = ShapeElement;

/***/ }

/******/ });